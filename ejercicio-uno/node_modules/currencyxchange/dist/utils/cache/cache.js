"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NodeCache = require("node-cache");
var CacheService = /** @class */ (function () {
    function CacheService(ttl) {
        this.cache = new NodeCache({
            stdTTL: ttl,
            checkperiod: ttl * 0.2,
            useClones: false,
        });
    }
    CacheService.prototype.get = function (key, fetchData) {
        var _this = this;
        var value = this.cache.get(key);
        if (value) {
            console.log("Fetching " + key + " data from cache...");
            return Promise.resolve(value);
        }
        if (!fetchData) {
            return undefined;
        }
        return fetchData().then(function (result) {
            console.log("Fetching " + key + " data from API...");
            _this.cache.set(key, result);
            return result;
        });
    };
    CacheService.prototype.del = function (keys) {
        this.cache.del(keys);
    };
    CacheService.prototype.flush = function () {
        this.cache.flushAll();
    };
    return CacheService;
}());
exports.default = CacheService;
//# sourceMappingURL=cache.js.map