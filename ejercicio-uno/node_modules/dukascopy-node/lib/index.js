'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Validator = require('fastest-validator');
var fetch = require('node-fetch');
var path = require('path');
var fsExtra = require('fs-extra');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var Validator__default = /*#__PURE__*/_interopDefaultLegacy(Validator);
var fetch__default = /*#__PURE__*/_interopDefaultLegacy(fetch);

(function (Instrument) {
    /**
     * ### HSBC Holdings
     * *0005.HK/HKD*
     */
    Instrument["0005hkhkd"] = "0005hkhkd";
    /**
     * ### Galaxy Entertainment Group
     * *0027.HK/HKD*
     */
    Instrument["0027hkhkd"] = "0027hkhkd";
    /**
     * ### Geely Automobile Holdings
     * *0175.HK/HKD*
     */
    Instrument["0175hkhkd"] = "0175hkhkd";
    /**
     * ### China Resources Beer Holdings
     * *0291.HK/HKD*
     */
    Instrument["0291hkhkd"] = "0291hkhkd";
    /**
     * ### Sinopec Corp
     * *0386.HK/HKD*
     */
    Instrument["0386hkhkd"] = "0386hkhkd";
    /**
     * ### HK Exchanges & Clearing
     * *0388.HK/HKD*
     */
    Instrument["0388hkhkd"] = "0388hkhkd";
    /**
     * ### Tencent Holdings
     * *0700.HK/HKD*
     */
    Instrument["0700hkhkd"] = "0700hkhkd";
    /**
     * ### PetroChina
     * *0857.HK/HKD*
     */
    Instrument["0857hkhkd"] = "0857hkhkd";
    /**
     * ### China National Offshore Oil Corporation
     * *0883.HK/HKD*
     */
    Instrument["0883hkhkd"] = "0883hkhkd";
    /**
     * ### China Construction Bank
     * *0939.HK/HKD*
     */
    Instrument["0939hkhkd"] = "0939hkhkd";
    /**
     * ### China Mobile
     * *0941.HK/HKD*
     */
    Instrument["0941hkhkd"] = "0941hkhkd";
    /**
     * ### CITIC Bank International
     * *0998.HK/HKD*
     */
    Instrument["0998hkhkd"] = "0998hkhkd";
    /**
     * ### CSPC Pharmaceutical Group
     * *1093.HK/HKD*
     */
    Instrument["1093hkhkd"] = "1093hkhkd";
    /**
     * ### Sino Biopharmeceutical
     * *1177.HK/HKD*
     */
    Instrument["1177hkhkd"] = "1177hkhkd";
    /**
     * ### Agricultural Bank of China
     * *1288.HK/HKD*
     */
    Instrument["1288hkhkd"] = "1288hkhkd";
    /**
     * ### AIA
     * *1299.HK/HKD*
     */
    Instrument["1299hkhkd"] = "1299hkhkd";
    /**
     * ### Industrial and Commercial Bank of China
     * *1398.HK/HKD*
     */
    Instrument["1398hkhkd"] = "1398hkhkd";
    /**
     * ### Xiaomi Corp
     * *1810.HK/HKD*
     */
    Instrument["1810hkhkd"] = "1810hkhkd";
    /**
     * ### Sunac China Holdings
     * *1918.HK/HKD*
     */
    Instrument["1918hkhkd"] = "1918hkhkd";
    /**
     * ### Country Garden Holdings
     * *2007.HK/HKD*
     */
    Instrument["2007hkhkd"] = "2007hkhkd";
    /**
     * ### AAC Technologies Holdings
     * *2018.HK/HKD*
     */
    Instrument["2018hkhkd"] = "2018hkhkd";
    /**
     * ### Ping An Insurance
     * *2318.HK/HKD*
     */
    Instrument["2318hkhkd"] = "2318hkhkd";
    /**
     * ### BOC Hong Kong (Holdings)
     * *2388.HK/HKD*
     */
    Instrument["2388hkhkd"] = "2388hkhkd";
    /**
     * ### Asahi Group Holdings
     * *2502.JP/JPY*
     */
    Instrument["2502jpjpy"] = "2502jpjpy";
    /**
     * ### Kirin Brewery Co
     * *2503.JP/JPY*
     */
    Instrument["2503jpjpy"] = "2503jpjpy";
    /**
     * ### China Life Insurance Company
     * *2628.HK/HKD*
     */
    Instrument["2628hkhkd"] = "2628hkhkd";
    /**
     * ### CSOP FTSE China A50 ETF
     * *2822.HK/HKD*
     */
    Instrument["2822hkhkd"] = "2822hkhkd";
    /**
     * ### Hang Seng H-Share Index ETF
     * *2828.HK/HKD*
     */
    Instrument["2828hkhkd"] = "2828hkhkd";
    /**
     * ### iShares Core S&P BSE SENSEX India ETF
     * *2836.HK/HKD*
     */
    Instrument["2836hkhkd"] = "2836hkhkd";
    /**
     * ### Japan Tobacco
     * *2914.JP/JPY*
     */
    Instrument["2914jpjpy"] = "2914jpjpy";
    /**
     * ### ChinaAMC CSI 300 Index ETF
     * *3188.HK/HKD*
     */
    Instrument["3188hkhkd"] = "3188hkhkd";
    /**
     * ### China Evergrande Group
     * *3333.HK/HKD*
     */
    Instrument["3333hkhkd"] = "3333hkhkd";
    /**
     * ### Seven and I Holdings
     * *3382.JP/JPY*
     */
    Instrument["3382jpjpy"] = "3382jpjpy";
    /**
     * ### Sumco Corp
     * *3436.JP/JPY*
     */
    Instrument["3436jpjpy"] = "3436jpjpy";
    /**
     * ### China Merchants Bank
     * *3968.HK/HKD*
     */
    Instrument["3968hkhkd"] = "3968hkhkd";
    /**
     * ### Bank of China
     * *3988.HK/HKD*
     */
    Instrument["3988hkhkd"] = "3988hkhkd";
    /**
     * ### Showa Denko
     * *4004.JP/JPY*
     */
    Instrument["4004jpjpy"] = "4004jpjpy";
    /**
     * ### Sumitomo Chemical
     * *4005.JP/JPY*
     */
    Instrument["4005jpjpy"] = "4005jpjpy";
    /**
     * ### Shin-Etsu Chemical
     * *4063.JP/JPY*
     */
    Instrument["4063jpjpy"] = "4063jpjpy";
    /**
     * ### Kao Corp
     * *4452.JP/JPY*
     */
    Instrument["4452jpjpy"] = "4452jpjpy";
    /**
     * ### Takeda
     * *4502.JP/JPY*
     */
    Instrument["4502jpjpy"] = "4502jpjpy";
    /**
     * ### Astellas Pharma
     * *4503.JP/JPY*
     */
    Instrument["4503jpjpy"] = "4503jpjpy";
    /**
     * ### Shionogi
     * *4507.JP/JPY*
     */
    Instrument["4507jpjpy"] = "4507jpjpy";
    /**
     * ### Eisai
     * *4523.JP/JPY*
     */
    Instrument["4523jpjpy"] = "4523jpjpy";
    /**
     * ### Terumo Corp
     * *4543.JP/JPY*
     */
    Instrument["4543jpjpy"] = "4543jpjpy";
    /**
     * ### Yahoo Japan Corp
     * *4689.JP/JPY*
     */
    Instrument["4689jpjpy"] = "4689jpjpy";
    /**
     * ### Shiseido
     * *4911.JP/JPY*
     */
    Instrument["4911jpjpy"] = "4911jpjpy";
    /**
     * ### Bridgestone Corp
     * *5108.JP/JPY*
     */
    Instrument["5108jpjpy"] = "5108jpjpy";
    /**
     * ### Tokai Carbon
     * *5301.JP/JPY*
     */
    Instrument["5301jpjpy"] = "5301jpjpy";
    /**
     * ### Nippon Steel Corp
     * *5401.JP/JPY*
     */
    Instrument["5401jpjpy"] = "5401jpjpy";
    /**
     * ### Recruit Holdings Co Ltd
     * *6098.JP/JPY*
     */
    Instrument["6098jpjpy"] = "6098jpjpy";
    /**
     * ### Komatsu
     * *6301.JP/JPY*
     */
    Instrument["6301jpjpy"] = "6301jpjpy";
    /**
     * ### Daikin Industries
     * *6367.JP/JPY*
     */
    Instrument["6367jpjpy"] = "6367jpjpy";
    /**
     * ### Hitachi
     * *6501.JP/JPY*
     */
    Instrument["6501jpjpy"] = "6501jpjpy";
    /**
     * ### Toshiba Corp
     * *6502.JP/JPY*
     */
    Instrument["6502jpjpy"] = "6502jpjpy";
    /**
     * ### Mitsubishi Electric Corp
     * *6503.JP/JPY*
     */
    Instrument["6503jpjpy"] = "6503jpjpy";
    /**
     * ### Yaskawa Electric Corp
     * *6506.JP/JPY*
     */
    Instrument["6506jpjpy"] = "6506jpjpy";
    /**
     * ### Fujitsu
     * *6702.JP/JPY*
     */
    Instrument["6702jpjpy"] = "6702jpjpy";
    /**
     * ### Panasonic Corp
     * *6752.JP/JPY*
     */
    Instrument["6752jpjpy"] = "6752jpjpy";
    /**
     * ### Sony Corp Japan
     * *6758.JP/JPY*
     */
    Instrument["6758jpjpy"] = "6758jpjpy";
    /**
     * ### TDK Corp
     * *6762.JP/JPY*
     */
    Instrument["6762jpjpy"] = "6762jpjpy";
    /**
     * ### Denso Corp
     * *6902.JP/JPY*
     */
    Instrument["6902jpjpy"] = "6902jpjpy";
    /**
     * ### Fanuc
     * *6954.JP/JPY*
     */
    Instrument["6954jpjpy"] = "6954jpjpy";
    /**
     * ### Kyocera
     * *6971.JP/JPY*
     */
    Instrument["6971jpjpy"] = "6971jpjpy";
    /**
     * ### Nissan Motor Co
     * *7201.JP/JPY*
     */
    Instrument["7201jpjpy"] = "7201jpjpy";
    /**
     * ### Toyota Motor Corp
     * *7203.JP/JPY*
     */
    Instrument["7203jpjpy"] = "7203jpjpy";
    /**
     * ### Mazda Motor
     * *7261.JP/JPY*
     */
    Instrument["7261jpjpy"] = "7261jpjpy";
    /**
     * ### Honda Motor Company
     * *7267.JP/JPY*
     */
    Instrument["7267jpjpy"] = "7267jpjpy";
    /**
     * ### Suzuki Motor Corp
     * *7269.JP/JPY*
     */
    Instrument["7269jpjpy"] = "7269jpjpy";
    /**
     * ### Subaru Corporation
     * *7270.JP/JPY*
     */
    Instrument["7270jpjpy"] = "7270jpjpy";
    /**
     * ### Canon
     * *7751.JP/JPY*
     */
    Instrument["7751jpjpy"] = "7751jpjpy";
    /**
     * ### Nintendo Co Ltd
     * *7974.JP/JPY*
     */
    Instrument["7974jpjpy"] = "7974jpjpy";
    /**
     * ### Mitsui and Company
     * *8031.JP/JPY*
     */
    Instrument["8031jpjpy"] = "8031jpjpy";
    /**
     * ### Tokyo Electron
     * *8035.JP/JPY*
     */
    Instrument["8035jpjpy"] = "8035jpjpy";
    /**
     * ### Mitsubishi UFJ Financial Group
     * *8306.JP/JPY*
     */
    Instrument["8306jpjpy"] = "8306jpjpy";
    /**
     * ### Sumitomo Mitsui Financial Group
     * *8316.JP/JPY*
     */
    Instrument["8316jpjpy"] = "8316jpjpy";
    /**
     * ### Mizuho Financial Group
     * *8411.JP/JPY*
     */
    Instrument["8411jpjpy"] = "8411jpjpy";
    /**
     * ### Tokio Marine Holdings
     * *8766.JP/JPY*
     */
    Instrument["8766jpjpy"] = "8766jpjpy";
    /**
     * ### Mitsui Fudosan Company
     * *8801.JP/JPY*
     */
    Instrument["8801jpjpy"] = "8801jpjpy";
    /**
     * ### Mitsubishi Estate Company
     * *8802.JP/JPY*
     */
    Instrument["8802jpjpy"] = "8802jpjpy";
    /**
     * ### East Japan Railway Company
     * *9020.JP/JPY*
     */
    Instrument["9020jpjpy"] = "9020jpjpy";
    /**
     * ### Nippon Telegraph and Tel
     * *9432.JP/JPY*
     */
    Instrument["9432jpjpy"] = "9432jpjpy";
    /**
     * ### KDDI Corp
     * *9433.JP/JPY*
     */
    Instrument["9433jpjpy"] = "9433jpjpy";
    /**
     * ### Tokyo Electric Power Company
     * *9501.JP/JPY*
     */
    Instrument["9501jpjpy"] = "9501jpjpy";
    /**
     * ### Fast Retailing
     * *9983.JP/JPY*
     */
    Instrument["9983jpjpy"] = "9983jpjpy";
    /**
     * ### Softbank Group Corp
     * *9984.JP/JPY*
     */
    Instrument["9984jpjpy"] = "9984jpjpy";
    /**
     * ### AGILENT TECHNOLOGIES INC
     * *A.US/USD*
     */
    Instrument["aususd"] = "aususd";
    /**
     * ### A2A Spa
     * *A2A.IT/EUR*
     */
    Instrument["a2aiteur"] = "a2aiteur";
    /**
     * ### ALCOA INC
     * *AA.US/USD*
     */
    Instrument["aaususd"] = "aaususd";
    /**
     * ### AbbVie Inc
     * *AABV.US/USD*
     */
    Instrument["aabvususd"] = "aabvususd";
    /**
     * ### Anglo American PLC
     * *AAL.GB/GBX*
     */
    Instrument["aalgbgbx"] = "aalgbgbx";
    /**
     * ### AMERICAN AIRLINES GROUP INC
     * *AAL.US/USD*
     */
    Instrument["aalususd"] = "aalususd";
    /**
     * ### APPLE INC
     * *AAPL.US/USD*
     */
    Instrument["aaplususd"] = "aaplususd";
    /**
     * ### ABB Ltd
     * *ABB.SE/SEK*
     */
    Instrument["abbsesek"] = "abbsesek";
    /**
     * ### ABB Ltd
     * *ABBN.CH/CHF*
     */
    Instrument["abbnchchf"] = "abbnchchf";
    /**
     * ### AMERISOURCEBERGEN CORP
     * *ABC.US/USD*
     */
    Instrument["abcususd"] = "abcususd";
    /**
     * ### Ambev S.A.
     * *ABEV.US/USD*
     */
    Instrument["abevususd"] = "abevususd";
    /**
     * ### Associated British Foods PLC
     * *ABF.GB/GBX*
     */
    Instrument["abfgbgbx"] = "abfgbgbx";
    /**
     * ### Anheuser-Busch InBev NV
     * *ABI.BE/EUR*
     */
    Instrument["abibeeur"] = "abibeeur";
    /**
     * ### ABBOTT LABORATORIES
     * *ABT.US/USD*
     */
    Instrument["abtususd"] = "abtususd";
    /**
     * ### Accor SA
     * *AC.FR/EUR*
     */
    Instrument["acfreur"] = "acfreur";
    /**
     * ### Credit Agricole SA
     * *ACA.FR/EUR*
     */
    Instrument["acafreur"] = "acafreur";
    /**
     * ### ACS Actividades de Construccion y Servicios SA
     * *ACS.ES/EUR*
     */
    Instrument["acseseur"] = "acseseur";
    /**
     * ### Acerinox SA
     * *ACX.ES/EUR*
     */
    Instrument["acxeseur"] = "acxeseur";
    /**
     * ### ADOBE SYSTEMS INC
     * *ADBE.US/USD*
     */
    Instrument["adbeususd"] = "adbeususd";
    /**
     * ### Adecco SA
     * *ADEN.CH/CHF*
     */
    Instrument["adenchchf"] = "adenchchf";
    /**
     * ### ANALOG DEVICES INC
     * *ADI.US/USD*
     */
    Instrument["adiususd"] = "adiususd";
    /**
     * ### Admiral Group PLC
     * *ADM.GB/GBX*
     */
    Instrument["admgbgbx"] = "admgbgbx";
    /**
     * ### AUTOMATIC DATA PROCESSING
     * *ADP.US/USD*
     */
    Instrument["adpususd"] = "adpususd";
    /**
     * ### Adidas AG
     * *ADS.DE/EUR*
     */
    Instrument["adsdeeur"] = "adsdeeur";
    /**
     * ### AUTODESK INC
     * *ADSK.US/USD*
     */
    Instrument["adskususd"] = "adskususd";
    /**
     * ### Aena SA
     * *AENA.ES/EUR*
     */
    Instrument["aenaeseur"] = "aenaeseur";
    /**
     * ### AMERICAN ELECTRIC POWER
     * *AEP.US/USD*
     */
    Instrument["aepususd"] = "aepususd";
    /**
     * ### Air France-KLM
     * *AF.FR/EUR*
     */
    Instrument["affreur"] = "affreur";
    /**
     * ### Aggreko PLC
     * *AGK.GB/GBX*
     */
    Instrument["agkgbgbx"] = "agkgbgbx";
    /**
     * ### Autogrill Spa
     * *AGL.IT/EUR*
     */
    Instrument["agliteur"] = "agliteur";
    /**
     * ### Aegon NV
     * *AGN.NL/EUR*
     */
    Instrument["agnnleur"] = "agnnleur";
    /**
     * ### Ageas
     * *AGS.BE/EUR*
     */
    Instrument["agsbeeur"] = "agsbeeur";
    /**
     * ### Koninklijke Ahold Delhaize NV
     * *AH.NL/EUR*
     */
    Instrument["ahnleur"] = "ahnleur";
    /**
     * ### Ashtead Group PLC
     * *AHT.GB/GBX*
     */
    Instrument["ahtgbgbx"] = "ahtgbgbx";
    /**
     * ### Air Liquide SA
     * *AI.FR/EUR*
     */
    Instrument["aifreur"] = "aifreur";
    /**
     * ### AMERICAN INTERNATIONAL GROUP
     * *AIG.US/USD*
     */
    Instrument["aigususd"] = "aigususd";
    /**
     * ### Airbus Group SE
     * *AIR.FR/EUR*
     */
    Instrument["airfreur"] = "airfreur";
    /**
     * ### Akzo Nobel NV
     * *AKZA.NL/EUR*
     */
    Instrument["akzanleur"] = "akzanleur";
    /**
     * ### Alfa Laval AB
     * *ALFA.SE/SEK*
     */
    Instrument["alfasesek"] = "alfasesek";
    /**
     * ### ALLSTATE CORP
     * *ALL.US/USD*
     */
    Instrument["allususd"] = "allususd";
    /**
     * ### Alstom SA
     * *ALO.FR/EUR*
     */
    Instrument["alofreur"] = "alofreur";
    /**
     * ### Allianz SE
     * *ALV.DE/EUR*
     */
    Instrument["alvdeeur"] = "alvdeeur";
    /**
     * ### ALEXION PHARMACEUTICALS INC
     * *ALXN.US/USD*
     */
    Instrument["alxnususd"] = "alxnususd";
    /**
     * ### APPLIED MATERIALS INC
     * *AMAT.US/USD*
     */
    Instrument["amatususd"] = "amatususd";
    /**
     * ### ADVANCED MICRO DEVICES
     * *AMD.US/USD*
     */
    Instrument["amdususd"] = "amdususd";
    /**
     * ### AMGEN INC
     * *AMGN.US/USD*
     */
    Instrument["amgnususd"] = "amgnususd";
    /**
     * ### Amplifon Spa
     * *AMP.IT/EUR*
     */
    Instrument["ampiteur"] = "ampiteur";
    /**
     * ### AMERIPRISE FINANCIAL INC
     * *AMP.US/USD*
     */
    Instrument["ampususd"] = "ampususd";
    /**
     * ### Amadeus IT Holding SA
     * *AMS.ES/EUR*
     */
    Instrument["amseseur"] = "amseseur";
    /**
     * ### AMERICAN TOWER CORP
     * *AMT.US/USD*
     */
    Instrument["amtususd"] = "amtususd";
    /**
     * ### American Well Corp Class A
     * *AMWL.US/USD*
     */
    Instrument["amwlususd"] = "amwlususd";
    /**
     * ### AMAZON.COM INC
     * *AMZN.US/USD*
     */
    Instrument["amznususd"] = "amznususd";
    /**
     * ### ANTHEM INC
     * *ANTM.US/USD*
     */
    Instrument["antmususd"] = "antmususd";
    /**
     * ### Antofagasta PLC
     * *ANTO.GB/GBX*
     */
    Instrument["antogbgbx"] = "antogbgbx";
    /**
     * ### APACHE CORP
     * *APA.US/USD*
     */
    Instrument["apaususd"] = "apaususd";
    /**
     * ### AIR PRODUCTS & CHEMICALS INC
     * *APD.US/USD*
     */
    Instrument["apdususd"] = "apdususd";
    /**
     * ### ASML Holding NV
     * *ASML.NL/EUR*
     */
    Instrument["asmlnleur"] = "asmlnleur";
    /**
     * ### Atlas Copco AB
     * *ATCOA.SE/SEK*
     */
    Instrument["atcoasesek"] = "atcoasesek";
    /**
     * ### Atlantia Spa
     * *ATL.IT/EUR*
     */
    Instrument["atliteur"] = "atliteur";
    /**
     * ### ACTIVISION BLIZZARD INC
     * *ATVI.US/USD*
     */
    Instrument["atviususd"] = "atviususd";
    /**
     * ### Australian Dollar vs Canadian Dollar
     * *AUD/CAD*
     */
    Instrument["audcad"] = "audcad";
    /**
     * ### Australian Dollar vs Swiss Franc
     * *AUD/CHF*
     */
    Instrument["audchf"] = "audchf";
    /**
     * ### Australian Dollar vs Japanese Yen
     * *AUD/JPY*
     */
    Instrument["audjpy"] = "audjpy";
    /**
     * ### Australian Dollar vs New Zealand Dollar
     * *AUD/NZD*
     */
    Instrument["audnzd"] = "audnzd";
    /**
     * ### Australian Dollar vs Singapore Dollar
     * *AUD/SGD*
     */
    Instrument["audsgd"] = "audsgd";
    /**
     * ### Australian Dollar vs US Dollar
     * *AUD/USD*
     */
    Instrument["audusd"] = "audusd";
    /**
     * ### Aviva PLC
     * *AV.GB/GBX*
     */
    Instrument["avgbgbx"] = "avgbgbx";
    /**
     * ### AVALONBAY COMMUNITIES INC
     * *AVB.US/USD*
     */
    Instrument["avbususd"] = "avbususd";
    /**
     * ### Broadcom Limited
     * *AVGO.US/USD*
     */
    Instrument["avgoususd"] = "avgoususd";
    /**
     * ### AMERICAN EXPRESS CO
     * *AXP.US/USD*
     */
    Instrument["axpususd"] = "axpususd";
    /**
     * ### Azimut Holding Spa
     * *AZM.IT/EUR*
     */
    Instrument["azmiteur"] = "azmiteur";
    /**
     * ### AstraZeneca PLC
     * *AZN.GB/GBX*
     */
    Instrument["azngbgbx"] = "azngbgbx";
    /**
     * ### AstraZeneca PLC
     * *AZN.US/USD*
     */
    Instrument["aznususd"] = "aznususd";
    /**
     * ### AUTOZONE INC
     * *AZO.US/USD*
     */
    Instrument["azoususd"] = "azoususd";
    /**
     * ### BAE Systems PLC
     * *BA.GB/GBX*
     */
    Instrument["bagbgbx"] = "bagbgbx";
    /**
     * ### Boeing Co
     * *BA.US/USD*
     */
    Instrument["baususd"] = "baususd";
    /**
     * ### Babcock International Group PLC
     * *BAB.GB/GBX*
     */
    Instrument["babgbgbx"] = "babgbgbx";
    /**
     * ### ALIBABA GROUP HOLDING-SP ADR
     * *BABA.US/USD*
     */
    Instrument["babaususd"] = "babaususd";
    /**
     * ### BANK OF AMERICA CORP
     * *BAC.US/USD*
     */
    Instrument["bacususd"] = "bacususd";
    /**
     * ### Julius Baer Group Ltd
     * *BAER.CH/CHF*
     */
    Instrument["baerchchf"] = "baerchchf";
    /**
     * ### Banco BPM Spa
     * *BAMI.IT/EUR*
     */
    Instrument["bamiiteur"] = "bamiiteur";
    /**
     * ### Barclays PLC
     * *BARC.GB/GBX*
     */
    Instrument["barcgbgbx"] = "barcgbgbx";
    /**
     * ### BASF SE
     * *BAS.DE/EUR*
     */
    Instrument["basdeeur"] = "basdeeur";
    /**
     * ### British American Tobacco PLC
     * *BATS.GB/GBX*
     */
    Instrument["batsgbgbx"] = "batsgbgbx";
    /**
     * ### Bayer AG
     * *BAYN.DE/EUR*
     */
    Instrument["bayndeeur"] = "bayndeeur";
    /**
     * ### Banco Bradesco S.A.
     * *BBD.US/USD*
     */
    Instrument["bbdususd"] = "bbdususd";
    /**
     * ### Banco Bilbao Vizcaya Argentaria SA
     * *BBVA.ES/EUR*
     */
    Instrument["bbvaeseur"] = "bbvaeseur";
    /**
     * ### BEST BUY CO INC
     * *BBY.US/USD*
     */
    Instrument["bbyususd"] = "bbyususd";
    /**
     * ### Brunello Cucinelli Spa
     * *BC.IT/EUR*
     */
    Instrument["bciteur"] = "bciteur";
    /**
     * ### Bitcoin Cash vs US dollar
     * *BCH/USD*
     */
    Instrument["bchusd"] = "bchusd";
    /**
     * ### BECTON DICKINSON AND CO
     * *BDX.US/USD*
     */
    Instrument["bdxususd"] = "bdxususd";
    /**
     * ### Beiersdorf AG
     * *BEI.DE/EUR*
     */
    Instrument["beideeur"] = "beideeur";
    /**
     * ### Proximus
     * *BELG.BE/EUR*
     */
    Instrument["belgbeeur"] = "belgbeeur";
    /**
     * ### BAIDU INC
     * *BIDU.US/USD*
     */
    Instrument["biduususd"] = "biduususd";
    /**
     * ### BIOGEN INC
     * *BIIB.US/USD*
     */
    Instrument["biibususd"] = "biibususd";
    /**
     * ### Bank Of Ireland Plc
     * *BIRG.IE/EUR*
     */
    Instrument["birgieeur"] = "birgieeur";
    /**
     * ### BANK OF NEW YORK MELLON CORP
     * *BK.US/USD*
     */
    Instrument["bkususd"] = "bkususd";
    /**
     * ### British Land Co PLC
     * *BLND.GB/GBX*
     */
    Instrument["blndgbgbx"] = "blndgbgbx";
    /**
     * ### BHP Billiton PLC
     * *BLT.GB/GBX*
     */
    Instrument["bltgbgbx"] = "bltgbgbx";
    /**
     * ### Banca Monte dei Paschi di Siena Spa
     * *BMPS.IT/EUR*
     */
    Instrument["bmpsiteur"] = "bmpsiteur";
    /**
     * ### Bayerische Motoren Werke AG
     * *BMW.DE/EUR*
     */
    Instrument["bmwdeeur"] = "bmwdeeur";
    /**
     * ### BRISTOL-MYERS SQUIBB CO
     * *BMY.US/USD*
     */
    Instrument["bmyususd"] = "bmyususd";
    /**
     * ### Danone SA
     * *BN.FR/EUR*
     */
    Instrument["bnfreur"] = "bnfreur";
    /**
     * ### BNP Paribas SA
     * *BNP.FR/EUR*
     */
    Instrument["bnpfreur"] = "bnpfreur";
    /**
     * ### Bunzl PLC
     * *BNZL.GB/GBX*
     */
    Instrument["bnzlgbgbx"] = "bnzlgbgbx";
    /**
     * ### HUGO BOSS AG
     * *BOSS.DE/EUR*
     */
    Instrument["bossdeeur"] = "bossdeeur";
    /**
     * ### BP PLC
     * *BP.GB/GBX*
     */
    Instrument["bpgbgbx"] = "bpgbgbx";
    /**
     * ### BP p.l.c.
     * *BP.US/USD*
     */
    Instrument["bpususd"] = "bpususd";
    /**
     * ### Bper Banca Spa
     * *BPE.IT/EUR*
     */
    Instrument["bpeiteur"] = "bpeiteur";
    /**
     * ### Burberry Group PLC
     * *BRBY.GB/GBX*
     */
    Instrument["brbygbgbx"] = "brbygbgbx";
    /**
     * ### Brembo Spa
     * *BRE.IT/EUR*
     */
    Instrument["breiteur"] = "breiteur";
    /**
     * ### BERKSHIRE HATHAWAY INC-CL B
     * *BRKB.US/USD*
     */
    Instrument["brkbususd"] = "brkbususd";
    /**
     * ### BOSTON SCIENTIFIC CORP
     * *BSX.US/USD*
     */
    Instrument["bsxususd"] = "bsxususd";
    /**
     * ### BT Group PLC
     * *BT.GB/GBX*
     */
    Instrument["btgbgbx"] = "btgbgbx";
    /**
     * ### Bitcoin vs US Dollar
     * *BTC/USD*
     */
    Instrument["btcusd"] = "btcusd";
    /**
     * ### Euro Bund
     * *BUND.TR/EUR*
     */
    Instrument["bundtreur"] = "bundtreur";
    /**
     * ### Buzzi Unicem Spa
     * *BZU.IT/EUR*
     */
    Instrument["bzuiteur"] = "bzuiteur";
    /**
     * ### CITIGROUP INC
     * *C.US/USD*
     */
    Instrument["cususd"] = "cususd";
    /**
     * ### Carrefour SA
     * *CA.FR/EUR*
     */
    Instrument["cafreur"] = "cafreur";
    /**
     * ### CaixaBank
     * *CABK.ES/EUR*
     */
    Instrument["cabkeseur"] = "cabkeseur";
    /**
     * ### Canadian Dollar vs Swiss Franc
     * *CAD/CHF*
     */
    Instrument["cadchf"] = "cadchf";
    /**
     * ### Canadian Dollar vs Hong Kong Dollar
     * *CAD/HKD*
     */
    Instrument["cadhkd"] = "cadhkd";
    /**
     * ### Canadian Dollar vs Japanese Yen
     * *CAD/JPY*
     */
    Instrument["cadjpy"] = "cadjpy";
    /**
     * ### CONAGRA FOODS INC
     * *CAG.US/USD*
     */
    Instrument["cagususd"] = "cagususd";
    /**
     * ### CARDINAL HEALTH INC
     * *CAH.US/USD*
     */
    Instrument["cahususd"] = "cahususd";
    /**
     * ### Cap Gemini SA
     * *CAP.FR/EUR*
     */
    Instrument["capfreur"] = "capfreur";
    /**
     * ### Carlsberg A/S
     * *CARLB.DK/DKK*
     */
    Instrument["carlbdkdkk"] = "carlbdkdkk";
    /**
     * ### Cattolica Ass Coop A
     * *CASS.IT/EUR*
     */
    Instrument["cassiteur"] = "cassiteur";
    /**
     * ### CATERPILLAR INC
     * *CAT.US/USD*
     */
    Instrument["catususd"] = "catususd";
    /**
     * ### Commerzbank AG
     * *CBK.DE/EUR*
     */
    Instrument["cbkdeeur"] = "cbkdeeur";
    /**
     * ### Carnival PLC
     * *CCL.GB/GBX*
     */
    Instrument["cclgbgbx"] = "cclgbgbx";
    /**
     * ### CERNER CORP
     * *CERN.US/USD*
     */
    Instrument["cernususd"] = "cernususd";
    /**
     * ### Cerved Information Solutions SPA
     * *CERV.IT/EUR*
     */
    Instrument["cerviteur"] = "cerviteur";
    /**
     * ### CF INDUSTRIES HOLDINGS INC
     * *CF.US/USD*
     */
    Instrument["cfususd"] = "cfususd";
    /**
     * ### Swiss Franc vs Japanese Yen
     * *CHF/JPY*
     */
    Instrument["chfjpy"] = "chfjpy";
    /**
     * ### Swiss Franc vs Singapore Dollar
     * *CHF/SGD*
     */
    Instrument["chfsgd"] = "chfsgd";
    /**
     * ### China A50 Index
     * *CHI.IDX/USD*
     */
    Instrument["chiidxusd"] = "chiidxusd";
    /**
     * ### CIGNA CORP
     * *CI.US/USD*
     */
    Instrument["ciususd"] = "ciususd";
    /**
     * ### COLGATE-PALMOLIVE CO
     * *CL.US/USD*
     */
    Instrument["clususd"] = "clususd";
    /**
     * ### Clariant AG
     * *CLN.CH/CHF*
     */
    Instrument["clnchchf"] = "clnchchf";
    /**
     * ### COMCAST CORP-CLASS A
     * *CMCSA.US/USD*
     */
    Instrument["cmcsaususd"] = "cmcsaususd";
    /**
     * ### CME GROUP INC
     * *CME.US/USD*
     */
    Instrument["cmeususd"] = "cmeususd";
    /**
     * ### CHIPOTLE MEXICAN GRILL INC
     * *CMG.US/USD*
     */
    Instrument["cmgususd"] = "cmgususd";
    /**
     * ### CUMMINS INC
     * *CMI.US/USD*
     */
    Instrument["cmiususd"] = "cmiususd";
    /**
     * ### Centrica PLC
     * *CNA.GB/GBX*
     */
    Instrument["cnagbgbx"] = "cnagbgbx";
    /**
     * ### NY Cocoa
     * *COCOA.CMD/USD*
     */
    Instrument["cocoacmdusd"] = "cocoacmdusd";
    /**
     * ### CAPITAL ONE FINANCIAL CORP
     * *COF.US/USD*
     */
    Instrument["cofususd"] = "cofususd";
    /**
     * ### Coffee Arabica
     * *COFFEE.CMD/USX*
     */
    Instrument["coffeecmdusx"] = "coffeecmdusx";
    /**
     * ### Coloplast A/S
     * *COLOB.DK/DKK*
     */
    Instrument["colobdkdkk"] = "colobdkdkk";
    /**
     * ### Continental AG
     * *CON.DE/EUR*
     */
    Instrument["condeeur"] = "condeeur";
    /**
     * ### CONOCOPHILLIPS
     * *COP.US/USD*
     */
    Instrument["copususd"] = "copususd";
    /**
     * ### High Grade Copper
     * *COPPER.CMD/USD*
     */
    Instrument["coppercmdusd"] = "coppercmdusd";
    /**
     * ### COSTCO WHOLESALE CORP
     * *COST.US/USD*
     */
    Instrument["costususd"] = "costususd";
    /**
     * ### Cotton
     * *COTTON.CMD/USX*
     */
    Instrument["cottoncmdusx"] = "cottoncmdusx";
    /**
     * ### Compass Group PLC
     * *CPG.GB/GBX*
     */
    Instrument["cpggbgbx"] = "cpggbgbx";
    /**
     * ### Capita PLC
     * *CPI.GB/GBX*
     */
    Instrument["cpigbgbx"] = "cpigbgbx";
    /**
     * ### Davide Campari-Milano Spa
     * *CPR.IT/EUR*
     */
    Instrument["cpriteur"] = "cpriteur";
    /**
     * ### Croda International PLC
     * *CRDA.GB/GBX*
     */
    Instrument["crdagbgbx"] = "crdagbgbx";
    /**
     * ### CRH Plc
     * *CRG.IE/EUR*
     */
    Instrument["crgieeur"] = "crgieeur";
    /**
     * ### CRH PLC
     * *CRH.GB/GBX*
     */
    Instrument["crhgbgbx"] = "crhgbgbx";
    /**
     * ### SALESFORCE.COM INC
     * *CRM.US/USD*
     */
    Instrument["crmususd"] = "crmususd";
    /**
     * ### AXA SA
     * *CS.FR/EUR*
     */
    Instrument["csfreur"] = "csfreur";
    /**
     * ### Credit Suisse Group AG
     * *CS.US/USD*
     */
    Instrument["csususd"] = "csususd";
    /**
     * ### CISCO SYSTEMS INC
     * *CSCO.US/USD*
     */
    Instrument["cscoususd"] = "cscoususd";
    /**
     * ### Credit Suisse Group AG
     * *CSGN.CH/CHF*
     */
    Instrument["csgnchchf"] = "csgnchchf";
    /**
     * ### CSX CORP
     * *CSX.US/USD*
     */
    Instrument["csxususd"] = "csxususd";
    /**
     * ### CENTURYLINK INC
     * *CTL.US/USD*
     */
    Instrument["ctlususd"] = "ctlususd";
    /**
     * ### COGNIZANT TECH SOLUTIONS-A
     * *CTSH.US/USD*
     */
    Instrument["ctshususd"] = "ctshususd";
    /**
     * ### CITRIX SYSTEMS INC
     * *CTXS.US/USD*
     */
    Instrument["ctxsususd"] = "ctxsususd";
    /**
     * ### Credito Valtellinese Spa
     * *CVAL.IT/EUR*
     */
    Instrument["cvaliteur"] = "cvaliteur";
    /**
     * ### CVS HEALTH CORP
     * *CVS.US/USD*
     */
    Instrument["cvsususd"] = "cvsususd";
    /**
     * ### CHEVRON CORP
     * *CVX.US/USD*
     */
    Instrument["cvxususd"] = "cvxususd";
    /**
     * ### DOMINION RESOURCES INC/VA
     * *D.US/USD*
     */
    Instrument["dususd"] = "dususd";
    /**
     * ### Daimler AG
     * *DAI.DE/EUR*
     */
    Instrument["daideeur"] = "daideeur";
    /**
     * ### DELTA AIR LINES INC
     * *DAL.US/USD*
     */
    Instrument["dalususd"] = "dalususd";
    /**
     * ### Danieli & Co Spa
     * *DAN.IT/EUR*
     */
    Instrument["daniteur"] = "daniteur";
    /**
     * ### Danske Bank A/S
     * *DANSKE.DK/DKK*
     */
    Instrument["danskedkdkk"] = "danskedkdkk";
    /**
     * ### Deutsche Boerse AG
     * *DB1.DE/EUR*
     */
    Instrument["db1deeur"] = "db1deeur";
    /**
     * ### Deutsche Bank AG
     * *DBK.DE/EUR*
     */
    Instrument["dbkdeeur"] = "dbkdeeur";
    /**
     * ### DEERE & CO
     * *DE.US/USD*
     */
    Instrument["deususd"] = "deususd";
    /**
     * ### DISCOVER FINANCIAL SERVICES
     * *DFS.US/USD*
     */
    Instrument["dfsususd"] = "dfsususd";
    /**
     * ### Vinci SA
     * *DG.FR/EUR*
     */
    Instrument["dgfreur"] = "dgfreur";
    /**
     * ### DOLLAR GENERAL CORP
     * *DG.US/USD*
     */
    Instrument["dgususd"] = "dgususd";
    /**
     * ### Diageo PLC
     * *DGE.GB/GBX*
     */
    Instrument["dgegbgbx"] = "dgegbgbx";
    /**
     * ### DR HORTON INC
     * *DHI.US/USD*
     */
    Instrument["dhiususd"] = "dhiususd";
    /**
     * ### DANAHER CORP
     * *DHR.US/USD*
     */
    Instrument["dhrususd"] = "dhrususd";
    /**
     * ### Distribuidora Internacional de Alimentacion SA
     * *DIA.ES/EUR*
     */
    Instrument["diaeseur"] = "diaeseur";
    /**
     * ### Diasorin Spa
     * *DIA.IT/EUR*
     */
    Instrument["diaiteur"] = "diaiteur";
    /**
     * ### SPDR Dow Jones® Industrial Average ETF
     * *DIA.US/USD*
     */
    Instrument["diaususd"] = "diaususd";
    /**
     * ### Gas oil
     * *DIESEL.CMD/USD*
     */
    Instrument["dieselcmdusd"] = "dieselcmdusd";
    /**
     * ### WALT DISNEY CO/THE
     * *DIS.US/USD*
     */
    Instrument["disususd"] = "disususd";
    /**
     * ### DOLLAR TREE INC
     * *DLTR.US/USD*
     */
    Instrument["dltrususd"] = "dltrususd";
    /**
     * ### DNB ASA
     * *DNB.NO/NOK*
     */
    Instrument["dnbnonok"] = "dnbnonok";
    /**
     * ### US Dollar Index
     * *DOLLAR.IDX/USD*
     */
    Instrument["dollaridxusd"] = "dollaridxusd";
    /**
     * ### Deutsche Post AG
     * *DPW.DE/EUR*
     */
    Instrument["dpwdeeur"] = "dpwdeeur";
    /**
     * ### LYXOR ETF Daily X2 Short Bund
     * *DSB.FR/EUR*
     */
    Instrument["dsbfreur"] = "dsbfreur";
    /**
     * ### Dashcoin vs US Dollar
     * *DSH/USD*
     */
    Instrument["dshusd"] = "dshusd";
    /**
     * ### Koninklijke DSM NV
     * *DSM.NL/EUR*
     */
    Instrument["dsmnleur"] = "dsmnleur";
    /**
     * ### Deutsche Telekom AG
     * *DTE.DE/EUR*
     */
    Instrument["dtedeeur"] = "dtedeeur";
    /**
     * ### Dukascoin vs Euro
     * *DUK+/EUR*
     */
    Instrument["dukeur"] = "dukeur";
    /**
     * ### DUKE ENERGY CORP
     * *DUK.US/USD*
     */
    Instrument["dukususd"] = "dukususd";
    /**
     * ### DAVITA HEALTHCARE PARTNERS I
     * *DVA.US/USD*
     */
    Instrument["dvaususd"] = "dvaususd";
    /**
     * ### DEVON ENERGY CORP
     * *DVN.US/USD*
     */
    Instrument["dvnususd"] = "dvnususd";
    /**
     * ### iShares Select Dividend ETF
     * *DVY.US/USD*
     */
    Instrument["dvyususd"] = "dvyususd";
    /**
     * ### ELECTRONIC ARTS INC
     * *EA.US/USD*
     */
    Instrument["eaususd"] = "eaususd";
    /**
     * ### EBAY INC
     * *EBAY.US/USD*
     */
    Instrument["ebayususd"] = "ebayususd";
    /**
     * ### Erste Group Bank AG
     * *EBS.AT/EUR*
     */
    Instrument["ebsateur"] = "ebsateur";
    /**
     * ### Electricite de France SA
     * *EDF.FR/EUR*
     */
    Instrument["edffreur"] = "edffreur";
    /**
     * ### EDP - Energias de Portugal SA
     * *EDP.PT/EUR*
     */
    Instrument["edppteur"] = "edppteur";
    /**
     * ### iShares MSCI Emerging Markets ETF
     * *EEM.US/USD*
     */
    Instrument["eemususd"] = "eemususd";
    /**
     * ### iShares MSCI EAFE ETF
     * *EFA.US/USD*
     */
    Instrument["efaususd"] = "efaususd";
    /**
     * ### EQUIFAX INC
     * *EFX.US/USD*
     */
    Instrument["efxususd"] = "efxususd";
    /**
     * ### EDISON INTERNATIONAL
     * *EIX.US/USD*
     */
    Instrument["eixususd"] = "eixususd";
    /**
     * ### ESTEE LAUDER COMPANIES-CL A
     * *EL.US/USD*
     */
    Instrument["elususd"] = "elususd";
    /**
     * ### Endesa SA
     * *ELE.ES/EUR*
     */
    Instrument["eleeseur"] = "eleeseur";
    /**
     * ### Elisa OYJ
     * *ELI1V.FI/EUR*
     */
    Instrument["eli1vfieur"] = "eli1vfieur";
    /**
     * ### Electrolux AB
     * *ELUXB.SE/SEK*
     */
    Instrument["eluxbsesek"] = "eluxbsesek";
    /**
     * ### iShares J.P. Morgan USD Emerging Markets Bond ETF
     * *EMB.US/USD*
     */
    Instrument["embususd"] = "embususd";
    /**
     * ### EMERSON ELECTRIC CO
     * *EMR.US/USD*
     */
    Instrument["emrususd"] = "emrususd";
    /**
     * ### Bouygues SA
     * *EN.FR/EUR*
     */
    Instrument["enfreur"] = "enfreur";
    /**
     * ### Enel SpA
     * *ENEL.IT/EUR*
     */
    Instrument["eneliteur"] = "eneliteur";
    /**
     * ### Enagas SA
     * *ENG.ES/EUR*
     */
    Instrument["engeseur"] = "engeseur";
    /**
     * ### Engie
     * *ENGI.FR/EUR*
     */
    Instrument["engifreur"] = "engifreur";
    /**
     * ### ENI Spa
     * *ENI.IT/EUR*
     */
    Instrument["eniiteur"] = "eniiteur";
    /**
     * ### E.ON SE
     * *EOAN.DE/EUR*
     */
    Instrument["eoandeeur"] = "eoandeeur";
    /**
     * ### EOG RESOURCES INC
     * *EOG.US/USD*
     */
    Instrument["eogususd"] = "eogususd";
    /**
     * ### EOS vs US Dollar
     * *EOS/USD*
     */
    Instrument["eosusd"] = "eosusd";
    /**
     * ### EQT CORP
     * *EQT.US/USD*
     */
    Instrument["eqtususd"] = "eqtususd";
    /**
     * ### ERG Spa
     * *ERG.IT/EUR*
     */
    Instrument["ergiteur"] = "ergiteur";
    /**
     * ### Telefonaktiebolaget LM Ericsson
     * *ERICB.SE/SEK*
     */
    Instrument["ericbsesek"] = "ericbsesek";
    /**
     * ### Ether vs US Dollar
     * *ETH/USD*
     */
    Instrument["ethusd"] = "ethusd";
    /**
     * ### Euro vs Australian Dollar
     * *EUR/AUD*
     */
    Instrument["euraud"] = "euraud";
    /**
     * ### Euro vs Canadian Dollar
     * *EUR/CAD*
     */
    Instrument["eurcad"] = "eurcad";
    /**
     * ### Euro vs Swiss Franc
     * *EUR/CHF*
     */
    Instrument["eurchf"] = "eurchf";
    /**
     * ### Euro vs Czech Koruna
     * *EUR/CZK*
     */
    Instrument["eurczk"] = "eurczk";
    /**
     * ### Euro vs Danish Krone
     * *EUR/DKK*
     */
    Instrument["eurdkk"] = "eurdkk";
    /**
     * ### Euro vs Pound Sterling
     * *EUR/GBP*
     */
    Instrument["eurgbp"] = "eurgbp";
    /**
     * ### Euro vs Hong Kong Dollar
     * *EUR/HKD*
     */
    Instrument["eurhkd"] = "eurhkd";
    /**
     * ### Euro vs Hungarian Forint
     * *EUR/HUF*
     */
    Instrument["eurhuf"] = "eurhuf";
    /**
     * ### Euro vs Japanese Yen
     * *EUR/JPY*
     */
    Instrument["eurjpy"] = "eurjpy";
    /**
     * ### Euro vs Norwegian Krone
     * *EUR/NOK*
     */
    Instrument["eurnok"] = "eurnok";
    /**
     * ### Euro vs New Zealand Dollar
     * *EUR/NZD*
     */
    Instrument["eurnzd"] = "eurnzd";
    /**
     * ### Euro vs Polish Zloty
     * *EUR/PLN*
     */
    Instrument["eurpln"] = "eurpln";
    /**
     * ### Euro vs Russian Rouble
     * *EUR/RUB*
     */
    Instrument["eurrub"] = "eurrub";
    /**
     * ### Euro vs Swedish Krona
     * *EUR/SEK*
     */
    Instrument["eursek"] = "eursek";
    /**
     * ### Euro vs Singapore Dollar
     * *EUR/SGD*
     */
    Instrument["eursgd"] = "eursgd";
    /**
     * ### Euro vs Turkish Lira
     * *EUR/TRY*
     */
    Instrument["eurtry"] = "eurtry";
    /**
     * ### Euro vs US Dollar
     * *EUR/USD*
     */
    Instrument["eurusd"] = "eurusd";
    /**
     * ### iShares MSCI Hong Kong ETF
     * *EWH.US/USD*
     */
    Instrument["ewhususd"] = "ewhususd";
    /**
     * ### iShares MSCI Japan ETF
     * *EWJ.US/USD*
     */
    Instrument["ewjususd"] = "ewjususd";
    /**
     * ### iShares MSCI Mexico Capped
     * *EWW.US/USD*
     */
    Instrument["ewwususd"] = "ewwususd";
    /**
     * ### iShares MSCI Brazil Capped
     * *EWZ.US/USD*
     */
    Instrument["ewzususd"] = "ewzususd";
    /**
     * ### EXELON CORP
     * *EXC.US/USD*
     */
    Instrument["excususd"] = "excususd";
    /**
     * ### EXPEDIA INC
     * *EXPE.US/USD*
     */
    Instrument["expeususd"] = "expeususd";
    /**
     * ### Experian PLC
     * *EXPN.GB/GBX*
     */
    Instrument["expngbgbx"] = "expngbgbx";
    /**
     * ### easyJet PLC
     * *EZJ.GB/GBX*
     */
    Instrument["ezjgbgbx"] = "ezjgbgbx";
    /**
     * ### iShares MSCI EMU ETF
     * *EZU.US/USD*
     */
    Instrument["ezuususd"] = "ezuususd";
    /**
     * ### US Brent Crude Oil
     * *BRENT.CMD/USD*
     */
    Instrument["brentcmdusd"] = "brentcmdusd";
    /**
     * ### France 40 Index
     * *FRA.IDX/EUR*
     */
    Instrument["fraidxeur"] = "fraidxeur";
    /**
     * ### USA 30 Index
     * *USA30.IDX/USD*
     */
    Instrument["usa30idxusd"] = "usa30idxusd";
    /**
     * ### Germany 30 Index
     * *DEU.IDX/EUR*
     */
    Instrument["deuidxeur"] = "deuidxeur";
    /**
     * ### Europe 50 Index
     * *EUS.IDX/EUR*
     */
    Instrument["eusidxeur"] = "eusidxeur";
    /**
     * ### UK 100 Index
     * *GBR.IDX/GBP*
     */
    Instrument["gbridxgbp"] = "gbridxgbp";
    /**
     * ### Hong Kong 40 Index
     * *HKG.IDX/HKD*
     */
    Instrument["hkgidxhkd"] = "hkgidxhkd";
    /**
     * ### Spain 35 Index
     * *ESP.IDX/EUR*
     */
    Instrument["espidxeur"] = "espidxeur";
    /**
     * ### US Light Crude Oil
     * *LIGHT.CMD/USD*
     */
    Instrument["lightcmdusd"] = "lightcmdusd";
    /**
     * ### Japan 225
     * *JPN.IDX/JPY*
     */
    Instrument["jpnidxjpy"] = "jpnidxjpy";
    /**
     * ### USA 100 Technical Index
     * *USATECH.IDX/USD*
     */
    Instrument["usatechidxusd"] = "usatechidxusd";
    /**
     * ### USA 500 Index
     * *USA500.IDX/USD*
     */
    Instrument["usa500idxusd"] = "usa500idxusd";
    /**
     * ### Switzerland 20 Index
     * *CHE.IDX/CHF*
     */
    Instrument["cheidxchf"] = "cheidxchf";
    /**
     * ### Australia 200 Index
     * *AUS.IDX/AUD*
     */
    Instrument["ausidxaud"] = "ausidxaud";
    /**
     * ### FORD MOTOR CO
     * *F.US/USD*
     */
    Instrument["fususd"] = "fususd";
    /**
     * ### FACEBOOK INC-A
     * *FB.US/USD*
     */
    Instrument["fbususd"] = "fbususd";
    /**
     * ### FinecoBank Banca Fineco Spa
     * *FBK.IT/EUR*
     */
    Instrument["fbkiteur"] = "fbkiteur";
    /**
     * ### Fiat Chrysler Auto NV
     * *FCA.IT/EUR*
     */
    Instrument["fcaiteur"] = "fcaiteur";
    /**
     * ### FREEPORT-MCMORAN INC
     * *FCX.US/USD*
     */
    Instrument["fcxususd"] = "fcxususd";
    /**
     * ### FEDEX CORP
     * *FDX.US/USD*
     */
    Instrument["fdxususd"] = "fdxususd";
    /**
     * ### FIRSTENERGY CORP
     * *FE.US/USD*
     */
    Instrument["feususd"] = "feususd";
    /**
     * ### Ferrovial SA
     * *FER.ES/EUR*
     */
    Instrument["fereseur"] = "fereseur";
    /**
     * ### FIFTH THIRD BANCORP
     * *FITB.US/USD*
     */
    Instrument["fitbususd"] = "fitbususd";
    /**
     * ### Fresenius Medical Care AG & Co KGaA
     * *FME.DE/EUR*
     */
    Instrument["fmedeeur"] = "fmedeeur";
    /**
     * ### TWENTY-FIRST CENTURY FOX-A
     * *FOXA.US/USD*
     */
    Instrument["foxaususd"] = "foxaususd";
    /**
     * ### Total SA
     * *FP.FR/EUR*
     */
    Instrument["fpfreur"] = "fpfreur";
    /**
     * ### Valeo SA
     * *FR.FR/EUR*
     */
    Instrument["frfreur"] = "frfreur";
    /**
     * ### Fresenius SE & Co KGaA
     * *FRE.DE/EUR*
     */
    Instrument["fredeeur"] = "fredeeur";
    /**
     * ### Fresnillo PLC
     * *FRES.GB/GBX*
     */
    Instrument["fresgbgbx"] = "fresgbgbx";
    /**
     * ### iShares China Large-Cap ETF
     * *FXI.US/USD*
     */
    Instrument["fxiususd"] = "fxiususd";
    /**
     * ### Assicurazioni Generali Spa
     * *DLG.IT/EUR*
     */
    Instrument["giteur"] = "giteur";
    /**
     * ### Galp Energia SGPS SA
     * *GALP.PT/EUR*
     */
    Instrument["galppteur"] = "galppteur";
    /**
     * ### Gamesa Corporacion Tecnologica SA
     * *GAM.ES/EUR*
     */
    Instrument["gameseur"] = "gameseur";
    /**
     * ### Natural Gas
     * *GAS.CMD/USD*
     */
    Instrument["gascmdusd"] = "gascmdusd";
    /**
     * ### Gas Natural SDG SA
     * *GAS.ES/EUR*
     */
    Instrument["gaseseur"] = "gaseseur";
    /**
     * ### Pound Sterling vs Australian Dollar
     * *GBP/AUD*
     */
    Instrument["gbpaud"] = "gbpaud";
    /**
     * ### Pound Sterling vs Canadian Dollar
     * *GBP/CAD*
     */
    Instrument["gbpcad"] = "gbpcad";
    /**
     * ### Pound Sterling vs Swiss Franc
     * *GBP/CHF*
     */
    Instrument["gbpchf"] = "gbpchf";
    /**
     * ### Pound Sterling vs Japanese Yen
     * *GBP/JPY*
     */
    Instrument["gbpjpy"] = "gbpjpy";
    /**
     * ### Pound Sterling vs New Zealand Dollar
     * *GBP/NZD*
     */
    Instrument["gbpnzd"] = "gbpnzd";
    /**
     * ### Pound Sterling vs US Dollar
     * *GBP/USD*
     */
    Instrument["gbpusd"] = "gbpusd";
    /**
     * ### VanEck Vectors Gold Miners ETF
     * *GDX.US/USD*
     */
    Instrument["gdxususd"] = "gdxususd";
    /**
     * ### VanEck Vectors Junior Gold Miners ETF
     * *GDXJ.US/USD*
     */
    Instrument["gdxjususd"] = "gdxjususd";
    /**
     * ### GENERAL ELECTRIC CO
     * *GE.US/USD*
     */
    Instrument["geususd"] = "geususd";
    /**
     * ### Getinge AB
     * *GETIB.SE/SEK*
     */
    Instrument["getibsesek"] = "getibsesek";
    /**
     * ### G4S PLC
     * *GFS.GB/GBX*
     */
    Instrument["gfsgbgbx"] = "gfsgbgbx";
    /**
     * ### GILEAD SCIENCES INC
     * *GILD.US/USD*
     */
    Instrument["gildususd"] = "gildususd";
    /**
     * ### GENERAL MILLS INC
     * *GIS.US/USD*
     */
    Instrument["gisususd"] = "gisususd";
    /**
     * ### Givaudan SA
     * *GIVN.CH/CHF*
     */
    Instrument["givnchchf"] = "givnchchf";
    /**
     * ### SPDR Gold Shares ETF
     * *GLD.US/USD*
     */
    Instrument["gldususd"] = "gldususd";
    /**
     * ### Societe Generale SA
     * *GLE.FR/EUR*
     */
    Instrument["glefreur"] = "glefreur";
    /**
     * ### Glencore PLC
     * *GLEN.GB/GBX*
     */
    Instrument["glengbgbx"] = "glengbgbx";
    /**
     * ### CORNING INC
     * *GLW.US/USD*
     */
    Instrument["glwususd"] = "glwususd";
    /**
     * ### GENERAL MOTORS CO
     * *GM.US/USD*
     */
    Instrument["gmususd"] = "gmususd";
    /**
     * ### ALPHABET INC-CL C
     * *GOOG.US/USD*
     */
    Instrument["googususd"] = "googususd";
    /**
     * ### ALPHABET INC-CL A
     * *GOOGL.US/USD*
     */
    Instrument["googlususd"] = "googlususd";
    /**
     * ### GAP INC/THE
     * *GPS.US/USD*
     */
    Instrument["gpsususd"] = "gpsususd";
    /**
     * ### GOLDMAN SACHS GROUP INC
     * *GS.US/USD*
     */
    Instrument["gsususd"] = "gsususd";
    /**
     * ### GlaxoSmithKline PLC
     * *GSK.GB/GBX*
     */
    Instrument["gskgbgbx"] = "gskgbgbx";
    /**
     * ### WW GRAINGER INC
     * *GWW.US/USD*
     */
    Instrument["gwwususd"] = "gwwususd";
    /**
     * ### HALLIBURTON CO
     * *HAL.US/USD*
     */
    Instrument["halususd"] = "halususd";
    /**
     * ### WELLTOWER INC
     * *HCN.US/USD*
     */
    Instrument["hcnususd"] = "hcnususd";
    /**
     * ### HOME DEPOT INC
     * *HD.US/USD*
     */
    Instrument["hdususd"] = "hdususd";
    /**
     * ### HeidelbergCement AG
     * *HEI.DE/EUR*
     */
    Instrument["heideeur"] = "heideeur";
    /**
     * ### Heineken NV
     * *HEIA.NL/EUR*
     */
    Instrument["heianleur"] = "heianleur";
    /**
     * ### Henkel AG & Co KGaA
     * *HEN3.DE/EUR*
     */
    Instrument["hen3deeur"] = "hen3deeur";
    /**
     * ### HESS CORP
     * *HES.US/USD*
     */
    Instrument["hesususd"] = "hesususd";
    /**
     * ### Hong Kong Dollar vs Japanese Yen
     * *HKD/JPY*
     */
    Instrument["hkdjpy"] = "hkdjpy";
    /**
     * ### Hennes & Mauritz AB
     * *HMB.SE/SEK*
     */
    Instrument["hmbsesek"] = "hmbsesek";
    /**
     * ### Hammerson PLC
     * *HMSO.GB/GBX*
     */
    Instrument["hmsogbgbx"] = "hmsogbgbx";
    /**
     * ### HONEYWELL INTERNATIONAL INC
     * *HON.US/USD*
     */
    Instrument["honususd"] = "honususd";
    /**
     * ### HP INC
     * *HPQ.US/USD*
     */
    Instrument["hpqususd"] = "hpqususd";
    /**
     * ### HSBC Holdings PLC
     * *HSBA.GB/GBX*
     */
    Instrument["hsbagbgbx"] = "hsbagbgbx";
    /**
     * ### HUMANA INC
     * *HUM.US/USD*
     */
    Instrument["humususd"] = "humususd";
    /**
     * ### International Consolidated Airlines Grou
     * *IAG.GB/GBX*
     */
    Instrument["iaggbgbx"] = "iaggbgbx";
    /**
     * ### iShares Nasdaq Biotechnology ETF
     * *IBB.US/USD*
     */
    Instrument["ibbususd"] = "ibbususd";
    /**
     * ### Iberdrola SA
     * *IBE.ES/EUR*
     */
    Instrument["ibeeseur"] = "ibeeseur";
    /**
     * ### INTL BUSINESS MACHINES CORP
     * *IBM.US/USD*
     */
    Instrument["ibmususd"] = "ibmususd";
    /**
     * ### INTERCONTINENTAL EXCHANGE IN
     * *ICE.US/USD*
     */
    Instrument["iceususd"] = "iceususd";
    /**
     * ### iShares 7-10 Year Treasury Bond ETF
     * *IEF.US/USD*
     */
    Instrument["iefususd"] = "iefususd";
    /**
     * ### Infineon Technologies AG
     * *IFX.DE/EUR*
     */
    Instrument["ifxdeeur"] = "ifxdeeur";
    /**
     * ### Italgas Spa
     * *IG.IT/EUR*
     */
    Instrument["igiteur"] = "igiteur";
    /**
     * ### InterContinental Hotels Group PLC
     * *IHG.GB/GBX*
     */
    Instrument["ihggbgbx"] = "ihggbgbx";
    /**
     * ### iShares Core S&P Mid-Cap ETF
     * *IJH.US/USD*
     */
    Instrument["ijhususd"] = "ijhususd";
    /**
     * ### iShares Core S&P Small-Cap ETF
     * *IJR.US/USD*
     */
    Instrument["ijrususd"] = "ijrususd";
    /**
     * ### ILLUMINA INC
     * *ILMN.US/USD*
     */
    Instrument["ilmnususd"] = "ilmnususd";
    /**
     * ### Imperial Brands Plc
     * *IMT.GB/GBX*
     */
    Instrument["imtgbgbx"] = "imtgbgbx";
    /**
     * ### India 50 Index
     * *IND.IDX/USD*
     */
    Instrument["indidxusd"] = "indidxusd";
    /**
     * ### ING Groep NV
     * *INGA.NL/EUR*
     */
    Instrument["inganleur"] = "inganleur";
    /**
     * ### INTEL CORP
     * *INTC.US/USD*
     */
    Instrument["intcususd"] = "intcususd";
    /**
     * ### INTUIT INC
     * *INTU.US/USD*
     */
    Instrument["intuususd"] = "intuususd";
    /**
     * ### Investor AB
     * *INVEB.SE/SEK*
     */
    Instrument["invebsesek"] = "invebsesek";
    /**
     * ### Infrastrutture Wireless Italiane Spa
     * *INW.IT/EUR*
     */
    Instrument["inwiteur"] = "inwiteur";
    /**
     * ### INTERPUBLIC GROUP OF COS INC
     * *IPG.US/USD*
     */
    Instrument["ipgususd"] = "ipgususd";
    /**
     * ### Intesa Sanpaolo Spa
     * *ISP.IT/EUR*
     */
    Instrument["ispiteur"] = "ispiteur";
    /**
     * ### INTUITIVE SURGICAL INC
     * *ISRG.US/USD*
     */
    Instrument["isrgususd"] = "isrgususd";
    /**
     * ### Intertek Group PLC
     * *ITRK.GB/GBX*
     */
    Instrument["itrkgbgbx"] = "itrkgbgbx";
    /**
     * ### Itau Unibanco Holding S.A.
     * *ITUB.US/USD*
     */
    Instrument["itubususd"] = "itubususd";
    /**
     * ### ITV PLC
     * *ITV.GB/GBX*
     */
    Instrument["itvgbgbx"] = "itvgbgbx";
    /**
     * ### ILLINOIS TOOL WORKS
     * *ITW.US/USD*
     */
    Instrument["itwususd"] = "itwususd";
    /**
     * ### Inditex SA
     * *ITX.ES/EUR*
     */
    Instrument["itxeseur"] = "itxeseur";
    /**
     * ### iShares S&P 500 Value ETF
     * *IVE.US/USD*
     */
    Instrument["iveususd"] = "iveususd";
    /**
     * ### iShares S&P 500 Growth ETF
     * *IVW.US/USD*
     */
    Instrument["ivwususd"] = "ivwususd";
    /**
     * ### iShares Russell 1000 Value ETF
     * *IWD.US/USD*
     */
    Instrument["iwdususd"] = "iwdususd";
    /**
     * ### iShares Russell 1000 Growth ETF
     * *IWF.US/USD*
     */
    Instrument["iwfususd"] = "iwfususd";
    /**
     * ### iShares Russell 2000 ETF
     * *IWM.US/USD*
     */
    Instrument["iwmususd"] = "iwmususd";
    /**
     * ### iShares U.S. Real Estate ETF
     * *IYR.US/USD*
     */
    Instrument["iyrususd"] = "iyrususd";
    /**
     * ### JOHNSON CONTROLS INC
     * *JCI.US/USD*
     */
    Instrument["jciususd"] = "jciususd";
    /**
     * ### JOHNSON & JOHNSON
     * *JNJ.US/USD*
     */
    Instrument["jnjususd"] = "jnjususd";
    /**
     * ### SPDR Barclays Capital High Yield Bond ETF
     * *JNK.US/USD*
     */
    Instrument["jnkususd"] = "jnkususd";
    /**
     * ### JPMORGAN CHASE & CO
     * *JPM.US/USD*
     */
    Instrument["jpmususd"] = "jpmususd";
    /**
     * ### Juventus Football Club Spa
     * *JUVE.IT/EUR*
     */
    Instrument["juveiteur"] = "juveiteur";
    /**
     * ### NORDSTROM INC
     * *JWN.US/USD*
     */
    Instrument["jwnususd"] = "jwnususd";
    /**
     * ### KELLOGG CO
     * *K.US/USD*
     */
    Instrument["kususd"] = "kususd";
    /**
     * ### KBC Groep NV
     * *KBC.BE/EUR*
     */
    Instrument["kbcbeeur"] = "kbcbeeur";
    /**
     * ### Kering
     * *KER.FR/EUR*
     */
    Instrument["kerfreur"] = "kerfreur";
    /**
     * ### KEYCORP
     * *KEY.US/USD*
     */
    Instrument["keyususd"] = "keyususd";
    /**
     * ### Kingfisher PLC
     * *KGF.GB/GBX*
     */
    Instrument["kgfgbgbx"] = "kgfgbgbx";
    /**
     * ### KRAFT HEINZ CO/THE
     * *KHC.US/USD*
     */
    Instrument["khcususd"] = "khcususd";
    /**
     * ### KIMBERLY-CLARK CORP
     * *KMB.US/USD*
     */
    Instrument["kmbususd"] = "kmbususd";
    /**
     * ### KINDER MORGAN INC
     * *KMI.US/USD*
     */
    Instrument["kmiususd"] = "kmiususd";
    /**
     * ### Kuehne + Nagel International AG
     * *KNIN.CH/CHF*
     */
    Instrument["kninchchf"] = "kninchchf";
    /**
     * ### COCA-COLA CO/THE
     * *KO.US/USD*
     */
    Instrument["koususd"] = "koususd";
    /**
     * ### Koninklijke KPN NV
     * *KPN.NL/EUR*
     */
    Instrument["kpnnleur"] = "kpnnleur";
    /**
     * ### KROGER CO
     * *KR.US/USD*
     */
    Instrument["krususd"] = "krususd";
    /**
     * ### Kingspan Group Plc
     * *KRX.IE/EUR*
     */
    Instrument["krxieeur"] = "krxieeur";
    /**
     * ### Kerry Group Plc
     * *KRZ.IE/EUR*
     */
    Instrument["krzieeur"] = "krzieeur";
    /**
     * ### KOHLS CORP
     * *KSS.US/USD*
     */
    Instrument["kssususd"] = "kssususd";
    /**
     * ### LOEWS CORP
     * *L.US/USD*
     */
    Instrument["lususd"] = "lususd";
    /**
     * ### Land Securities Group PLC
     * *LAND.GB/GBX*
     */
    Instrument["landgbgbx"] = "landgbgbx";
    /**
     * ### Leonardo Spa
     * *LDO.IT/EUR*
     */
    Instrument["ldoiteur"] = "ldoiteur";
    /**
     * ### LENNAR CORP-A
     * *LEN.US/USD*
     */
    Instrument["lenususd"] = "lenususd";
    /**
     * ### Legal & General Group PLC
     * *LGEN.GB/GBX*
     */
    Instrument["lgengbgbx"] = "lgengbgbx";
    /**
     * ### Deutsche Lufthansa AG
     * *LHA.DE/EUR*
     */
    Instrument["lhadeeur"] = "lhadeeur";
    /**
     * ### Lafarge Holcim Ltd
     * *LHN.CH/CHF*
     */
    Instrument["lhnchchf"] = "lhnchchf";
    /**
     * ### Klepierre
     * *LI.FR/EUR*
     */
    Instrument["lifreur"] = "lifreur";
    /**
     * ### Linde AG
     * *LIN.DE/EUR*
     */
    Instrument["lindeeur"] = "lindeeur";
    /**
     * ### Lloyds Banking Group PLC
     * *LLOY.GB/GBX*
     */
    Instrument["lloygbgbx"] = "lloygbgbx";
    /**
     * ### ELI LILLY & CO
     * *LLY.US/USD*
     */
    Instrument["llyususd"] = "llyususd";
    /**
     * ### LOCKHEED MARTIN CORP
     * *LMT.US/USD*
     */
    Instrument["lmtususd"] = "lmtususd";
    /**
     * ### Lonza Group AG
     * *LONN.CH/CHF*
     */
    Instrument["lonnchchf"] = "lonnchchf";
    /**
     * ### LOWE'S COS INC
     * *LOW.US/USD*
     */
    Instrument["lowususd"] = "lowususd";
    /**
     * ### Legrand SA
     * *LR.FR/EUR*
     */
    Instrument["lrfreur"] = "lrfreur";
    /**
     * ### LAM RESEARCH CORP
     * *LRCX.US/USD*
     */
    Instrument["lrcxususd"] = "lrcxususd";
    /**
     * ### London Stock Exchange Group PLC
     * *LSE.GB/GBX*
     */
    Instrument["lsegbgbx"] = "lsegbgbx";
    /**
     * ### Litecoin vs US Dollar
     * *LTC/USD*
     */
    Instrument["ltcusd"] = "ltcusd";
    /**
     * ### SOUTHWEST AIRLINES CO
     * *LUV.US/USD*
     */
    Instrument["luvususd"] = "luvususd";
    /**
     * ### Lyxor ETF Leverage CAC 40
     * *LVC.FR/EUR*
     */
    Instrument["lvcfreur"] = "lvcfreur";
    /**
     * ### Las Vegas Sands Corp.
     * *LVS.US/USD*
     */
    Instrument["lvsususd"] = "lvsususd";
    /**
     * ### Lanxess AG
     * *LXS.DE/EUR*
     */
    Instrument["lxsdeeur"] = "lxsdeeur";
    /**
     * ### Lyxor UCITS ETF STOXX EUROPE 600 Banks
     * *LYXBNK.FR/EUR*
     */
    Instrument["lyxbnkfreur"] = "lyxbnkfreur";
    /**
     * ### MACY'S INC
     * *M.US/USD*
     */
    Instrument["mususd"] = "mususd";
    /**
     * ### MASTERCARD INC-CLASS A
     * *MA.US/USD*
     */
    Instrument["maususd"] = "maususd";
    /**
     * ### AP Moeller - Maersk A/S
     * *MAERSKB.DK/DKK*
     */
    Instrument["maerskbdkdkk"] = "maerskbdkdkk";
    /**
     * ### MARRIOTT INTERNATIONAL -CL A
     * *MAR.US/USD*
     */
    Instrument["marususd"] = "marususd";
    /**
     * ### MATTEL INC
     * *MAT.US/USD*
     */
    Instrument["matususd"] = "matususd";
    /**
     * ### Mediobanca Spa
     * *MB.IT/EUR*
     */
    Instrument["mbiteur"] = "mbiteur";
    /**
     * ### LVMH Moet Hennessy Louis Vuitton SA
     * *MC.FR/EUR*
     */
    Instrument["mcfreur"] = "mcfreur";
    /**
     * ### MCDONALD'S CORP
     * *MCD.US/USD*
     */
    Instrument["mcdususd"] = "mcdususd";
    /**
     * ### MICROCHIP TECHNOLOGY INC
     * *MCHP.US/USD*
     */
    Instrument["mchpususd"] = "mchpususd";
    /**
     * ### MCKESSON CORP
     * *MCK.US/USD*
     */
    Instrument["mckususd"] = "mckususd";
    /**
     * ### MONDELEZ INTERNATIONAL INC-A
     * *MDLZ.US/USD*
     */
    Instrument["mdlzususd"] = "mdlzususd";
    /**
     * ### METLIFE INC
     * *MET.US/USD*
     */
    Instrument["metususd"] = "metususd";
    /**
     * ### MGM RESORTS INTERNATIONAL
     * *MGM.US/USD*
     */
    Instrument["mgmususd"] = "mgmususd";
    /**
     * ### Marine Harvest ASA
     * *MHG.NO/NOK*
     */
    Instrument["mhgnonok"] = "mhgnonok";
    /**
     * ### Marks & Spencer Group PLC
     * *MKS.GB/GBX*
     */
    Instrument["mksgbgbx"] = "mksgbgbx";
    /**
     * ### 3M CO
     * *MMM.US/USD*
     */
    Instrument["mmmususd"] = "mmmususd";
    /**
     * ### Mondi PLC
     * *MNDI.GB/GBX*
     */
    Instrument["mndigbgbx"] = "mndigbgbx";
    /**
     * ### ALTRIA GROUP INC
     * *MO.US/USD*
     */
    Instrument["moususd"] = "moususd";
    /**
     * ### Moncler Spa
     * *MONC.IT/EUR*
     */
    Instrument["monciteur"] = "monciteur";
    /**
     * ### MARATHON PETROLEUM CORP
     * *MPC.US/USD*
     */
    Instrument["mpcususd"] = "mpcususd";
    /**
     * ### Merck KGaA
     * *MRK.DE/EUR*
     */
    Instrument["mrkdeeur"] = "mrkdeeur";
    /**
     * ### MERCK & CO. INC.
     * *MRK.US/USD*
     */
    Instrument["mrkususd"] = "mrkususd";
    /**
     * ### Moderna
     * *MRNA.US/USD*
     */
    Instrument["mrnaususd"] = "mrnaususd";
    /**
     * ### MARATHON OIL CORP
     * *MRO.US/USD*
     */
    Instrument["mroususd"] = "mroususd";
    /**
     * ### WM Morrison Supermarkets PLC
     * *MRW.GB/GBX*
     */
    Instrument["mrwgbgbx"] = "mrwgbgbx";
    /**
     * ### Mediaset Spa
     * *MS.IT/EUR*
     */
    Instrument["msiteur"] = "msiteur";
    /**
     * ### MORGAN STANLEY
     * *MS.US/USD*
     */
    Instrument["msususd"] = "msususd";
    /**
     * ### MICROSOFT CORP
     * *MSFT.US/USD*
     */
    Instrument["msftususd"] = "msftususd";
    /**
     * ### ArcelorMittal
     * *MT.NL/EUR*
     */
    Instrument["mtnleur"] = "mtnleur";
    /**
     * ### MICRON TECHNOLOGY INC
     * *MU.US/USD*
     */
    Instrument["muususd"] = "muususd";
    /**
     * ### Muenchener Rueckversicherungs AG
     * *MUV2.DE/EUR*
     */
    Instrument["muv2deeur"] = "muv2deeur";
    /**
     * ### Nordea Bank AB
     * *NDA.SE/SEK*
     */
    Instrument["ndasesek"] = "ndasesek";
    /**
     * ### NEXTERA ENERGY INC
     * *NEE.US/USD*
     */
    Instrument["neeususd"] = "neeususd";
    /**
     * ### NEWMONT MINING CORP
     * *NEM.US/USD*
     */
    Instrument["nemususd"] = "nemususd";
    /**
     * ### Neste OYJ
     * *NES1V.FI/EUR*
     */
    Instrument["nes1vfieur"] = "nes1vfieur";
    /**
     * ### Nestle SA
     * *NESN.CH/CHF*
     */
    Instrument["nesnchchf"] = "nesnchchf";
    /**
     * ### NETFLIX INC
     * *NFLX.US/USD*
     */
    Instrument["nflxususd"] = "nflxususd";
    /**
     * ### National Grid PLC
     * *NG.GB/GBX*
     */
    Instrument["nggbgbx"] = "nggbgbx";
    /**
     * ### Norsk Hydro ASA
     * *NHY.NO/NOK*
     */
    Instrument["nhynonok"] = "nhynonok";
    /**
     * ### Nio INC
     * *NIO.US/USD*
     */
    Instrument["nioususd"] = "nioususd";
    /**
     * ### NIKE INC
     * *NKE.US/USD*
     */
    Instrument["nkeususd"] = "nkeususd";
    /**
     * ### Netherlands 25 Index
     * *NLD.IDX/EUR*
     */
    Instrument["nldidxeur"] = "nldidxeur";
    /**
     * ### NORTHROP GRUMMAN CORP
     * *NOC.US/USD*
     */
    Instrument["nocususd"] = "nocususd";
    /**
     * ### Novartis AG
     * *NOVN.CH/CHF*
     */
    Instrument["novnchchf"] = "novnchchf";
    /**
     * ### Novo Nordisk A/S
     * *NOVOB.DK/DKK*
     */
    Instrument["novobdkdkk"] = "novobdkdkk";
    /**
     * ### Nokian Renkaat OYJ
     * *NRE1V.FI/EUR*
     */
    Instrument["nre1vfieur"] = "nre1vfieur";
    /**
     * ### NRG ENERGY INC
     * *NRG.US/USD*
     */
    Instrument["nrgususd"] = "nrgususd";
    /**
     * ### NORFOLK SOUTHERN CORP
     * *NSC.US/USD*
     */
    Instrument["nscususd"] = "nscususd";
    /**
     * ### NVIDIA CORP
     * *NVDA.US/USD*
     */
    Instrument["nvdaususd"] = "nvdaususd";
    /**
     * ### NEWELL BRANDS INC
     * *NWL.US/USD*
     */
    Instrument["nwlususd"] = "nwlususd";
    /**
     * ### Next PLC
     * *NXT.GB/GBX*
     */
    Instrument["nxtgbgbx"] = "nxtgbgbx";
    /**
     * ### New Zealand Dollar vs Canadian Dollar
     * *NZD/CAD*
     */
    Instrument["nzdcad"] = "nzdcad";
    /**
     * ### New Zealand Dollar vs Swiss Franc
     * *NZD/CHF*
     */
    Instrument["nzdchf"] = "nzdchf";
    /**
     * ### New Zealand Dollar vs Japanese Yen
     * *NZD/JPY*
     */
    Instrument["nzdjpy"] = "nzdjpy";
    /**
     * ### New Zealand Dollar vs US Dollar
     * *NZD/USD*
     */
    Instrument["nzdusd"] = "nzdusd";
    /**
     * ### Novozymes A/S
     * *NZYMB.DK/DKK*
     */
    Instrument["nzymbdkdkk"] = "nzymbdkdkk";
    /**
     * ### Orange Juice
     * *OJUICE.CMD/USX*
     */
    Instrument["ojuicecmdusx"] = "ojuicecmdusx";
    /**
     * ### ONEOK INC
     * *OKE.US/USD*
     */
    Instrument["okeususd"] = "okeususd";
    /**
     * ### OMNICOM GROUP
     * *OMC.US/USD*
     */
    Instrument["omcususd"] = "omcususd";
    /**
     * ### L'Oreal SA
     * *OR.FR/EUR*
     */
    Instrument["orfreur"] = "orfreur";
    /**
     * ### Orange SA
     * *ORA.FR/EUR*
     */
    Instrument["orafreur"] = "orafreur";
    /**
     * ### ORACLE CORP
     * *ORCL.US/USD*
     */
    Instrument["orclususd"] = "orclususd";
    /**
     * ### Orkla ASA
     * *ORK.NO/NOK*
     */
    Instrument["orknonok"] = "orknonok";
    /**
     * ### O'REILLY AUTOMOTIVE INC
     * *ORLY.US/USD*
     */
    Instrument["orlyususd"] = "orlyususd";
    /**
     * ### Outotec OYJ
     * *OTE1V.FI/EUR*
     */
    Instrument["ote1vfieur"] = "ote1vfieur";
    /**
     * ### Outokumpu OYJ
     * *OUT1V.FI/EUR*
     */
    Instrument["out1vfieur"] = "out1vfieur";
    /**
     * ### OCCIDENTAL PETROLEUM CORP
     * *OXY.US/USD*
     */
    Instrument["oxyususd"] = "oxyususd";
    /**
     * ### Porsche Automobil Holding SE
     * *PAH3.DE/EUR*
     */
    Instrument["pah3deeur"] = "pah3deeur";
    /**
     * ### PAYCHEX INC
     * *PAYX.US/USD*
     */
    Instrument["payxususd"] = "payxususd";
    /**
     * ### Petroleo Brasileiro S.A.
     * *PBR.US/USD*
     */
    Instrument["pbrususd"] = "pbrususd";
    /**
     * ### PACCAR INC
     * *PCAR.US/USD*
     */
    Instrument["pcarususd"] = "pcarususd";
    /**
     * ### P G & E CORP
     * *PCG.US/USD*
     */
    Instrument["pcgususd"] = "pcgususd";
    /**
     * ### PRICELINE GROUP INC/THE
     * *PCLN.US/USD*
     */
    Instrument["pclnususd"] = "pclnususd";
    /**
     * ### PEPSICO INC
     * *PEP.US/USD*
     */
    Instrument["pepususd"] = "pepususd";
    /**
     * ### Petrofac Ltd
     * *PFC.GB/GBX*
     */
    Instrument["pfcgbgbx"] = "pfcgbgbx";
    /**
     * ### PFIZER INC
     * *PFE.US/USD*
     */
    Instrument["pfeususd"] = "pfeususd";
    /**
     * ### PROCTER & GAMBLE CO/THE
     * *PG.US/USD*
     */
    Instrument["pgususd"] = "pgususd";
    /**
     * ### PROGRESSIVE CORP
     * *PGR.US/USD*
     */
    Instrument["pgrususd"] = "pgrususd";
    /**
     * ### PARKER HANNIFIN CORP
     * *PH.US/USD*
     */
    Instrument["phususd"] = "phususd";
    /**
     * ### Koninklijke Philips NV
     * *PHIA.NL/EUR*
     */
    Instrument["phianleur"] = "phianleur";
    /**
     * ### Piaggio & C. Spa
     * *PIA.IT/EUR*
     */
    Instrument["piaiteur"] = "piaiteur";
    /**
     * ### Poland 20 Index
     * *PLN.IDX/PLN*
     */
    Instrument["plnidxpln"] = "plnidxpln";
    /**
     * ### Palantir Tech Inc A
     * *PLTR.US/USD*
     */
    Instrument["pltrususd"] = "pltrususd";
    /**
     * ### Plug Power Inc
     * *PLUG.US/USD*
     */
    Instrument["plugususd"] = "plugususd";
    /**
     * ### PHILIP MORRIS INTERNATIONAL
     * *PM.US/USD*
     */
    Instrument["pmususd"] = "pmususd";
    /**
     * ### PNC FINANCIAL SERVICES GROUP
     * *PNC.US/USD*
     */
    Instrument["pncususd"] = "pncususd";
    /**
     * ### Pandora A/S
     * *PNDORA.DK/DKK*
     */
    Instrument["pndoradkdkk"] = "pndoradkdkk";
    /**
     * ### PPG INDUSTRIES INC
     * *PPG.US/USD*
     */
    Instrument["ppgususd"] = "ppgususd";
    /**
     * ### Prudential PLC
     * *PRU.GB/GBX*
     */
    Instrument["prugbgbx"] = "prugbgbx";
    /**
     * ### PRUDENTIAL FINANCIAL INC
     * *PRU.US/USD*
     */
    Instrument["pruususd"] = "pruususd";
    /**
     * ### Prysmian Spa
     * *PRY.IT/EUR*
     */
    Instrument["pryiteur"] = "pryiteur";
    /**
     * ### PUBLIC STORAGE
     * *PSA.US/USD*
     */
    Instrument["psaususd"] = "psaususd";
    /**
     * ### ProSiebenSat.1 Media AG
     * *PSM.DE/EUR*
     */
    Instrument["psmdeeur"] = "psmdeeur";
    /**
     * ### Persimmon PLC
     * *PSN.GB/GBX*
     */
    Instrument["psngbgbx"] = "psngbgbx";
    /**
     * ### Pearson PLC
     * *PSON.GB/GBX*
     */
    Instrument["psongbgbx"] = "psongbgbx";
    /**
     * ### PHILLIPS 66
     * *PSX.US/USD*
     */
    Instrument["psxususd"] = "psxususd";
    /**
     * ### Peloton Interactive Inc
     * *PTON.US/USD*
     */
    Instrument["ptonususd"] = "ptonususd";
    /**
     * ### Publicis Groupe SA
     * *PUB.FR/EUR*
     */
    Instrument["pubfreur"] = "pubfreur";
    /**
     * ### PIONEER NATURAL RESOURCES CO
     * *PXD.US/USD*
     */
    Instrument["pxdususd"] = "pxdususd";
    /**
     * ### PAYPAL HOLDINGS INC
     * *PYPL.US/USD*
     */
    Instrument["pyplususd"] = "pyplususd";
    /**
     * ### QUALCOMM INC
     * *QCOM.US/USD*
     */
    Instrument["qcomususd"] = "qcomususd";
    /**
     * ### PowerShares QQQ ETF
     * *QQQ.US/USD*
     */
    Instrument["qqqususd"] = "qqqususd";
    /**
     * ### Ferrari NV
     * *RACE.IT/EUR*
     */
    Instrument["raceiteur"] = "raceiteur";
    /**
     * ### Randstad Holding NV
     * *RAND.NL/EUR*
     */
    Instrument["randnleur"] = "randnleur";
    /**
     * ### Reckitt Benckiser Group PLC
     * *RB.GB/GBX*
     */
    Instrument["rbgbgbx"] = "rbgbgbx";
    /**
     * ### Raiffeisen Bank International AG
     * *RBI.AT/EUR*
     */
    Instrument["rbiateur"] = "rbiateur";
    /**
     * ### Royal Bank of Scotland Group PLC
     * *RBS.GB/GBX*
     */
    Instrument["rbsgbgbx"] = "rbsgbgbx";
    /**
     * ### Royal Dutch Shell PLC
     * *RDSA.NL/EUR*
     */
    Instrument["rdsanleur"] = "rdsanleur";
    /**
     * ### Royal Dutch Shell PLC
     * *RDSB.GB/GBX*
     */
    Instrument["rdsbgbgbx"] = "rdsbgbgbx";
    /**
     * ### Recordati Industria Chimica e Farma Spa
     * *REC.IT/EUR*
     */
    Instrument["reciteur"] = "reciteur";
    /**
     * ### Red Electrica Corp SA
     * *REE.ES/EUR*
     */
    Instrument["reeeseur"] = "reeeseur";
    /**
     * ### REGENERON PHARMACEUTICALS
     * *REGN.US/USD*
     */
    Instrument["regnususd"] = "regnususd";
    /**
     * ### Reed Elsevier PLC
     * *REL.GB/GBX*
     */
    Instrument["relgbgbx"] = "relgbgbx";
    /**
     * ### RELX NV
     * *REN.NL/EUR*
     */
    Instrument["rennleur"] = "rennleur";
    /**
     * ### Repsol SA
     * *REP.ES/EUR*
     */
    Instrument["repeseur"] = "repeseur";
    /**
     * ### REGIONS FINANCIAL CORP
     * *RF.US/USD*
     */
    Instrument["rfususd"] = "rfususd";
    /**
     * ### Pernod-Ricard SA
     * *RI.FR/EUR*
     */
    Instrument["rifreur"] = "rifreur";
    /**
     * ### Rio Tinto PLC
     * *RIO.GB/GBX*
     */
    Instrument["riogbgbx"] = "riogbgbx";
    /**
     * ### Royal Mail PLC
     * *RMG.GB/GBX*
     */
    Instrument["rmggbgbx"] = "rmggbgbx";
    /**
     * ### Renault SA
     * *RNO.FR/EUR*
     */
    Instrument["rnofreur"] = "rnofreur";
    /**
     * ### Roche Holding AG
     * *ROG.CH/CHF*
     */
    Instrument["rogchchf"] = "rogchchf";
    /**
     * ### Roku Inc
     * *ROKU.US/USD*
     */
    Instrument["rokuususd"] = "rokuususd";
    /**
     * ### ROSS STORES INC
     * *ROST.US/USD*
     */
    Instrument["rostususd"] = "rostususd";
    /**
     * ### Rolls-Royce Holdings PLC
     * *RR.GB/GBX*
     */
    Instrument["rrgbgbx"] = "rrgbgbx";
    /**
     * ### RANGE RESOURCES CORP
     * *RRC.US/USD*
     */
    Instrument["rrcususd"] = "rrcususd";
    /**
     * ### RSA Insurance Group PLC
     * *RSA.GB/GBX*
     */
    Instrument["rsagbgbx"] = "rsagbgbx";
    /**
     * ### RWE AG
     * *RWE.DE/EUR*
     */
    Instrument["rwedeeur"] = "rwedeeur";
    /**
     * ### Ryanair Holdings Plc
     * *RY4C.IE/EUR*
     */
    Instrument["ry4cieeur"] = "ry4cieeur";
    /**
     * ### Safran SA
     * *SAF.FR/EUR*
     */
    Instrument["saffreur"] = "saffreur";
    /**
     * ### Banco Santander SA
     * *SAN.ES/EUR*
     */
    Instrument["saneseur"] = "saneseur";
    /**
     * ### Sanofi
     * *SAN.FR/EUR*
     */
    Instrument["sanfreur"] = "sanfreur";
    /**
     * ### Sandvik AB
     * *SAND.SE/SEK*
     */
    Instrument["sandsesek"] = "sandsesek";
    /**
     * ### SAP AG
     * *SAP.DE/EUR*
     */
    Instrument["sapdeeur"] = "sapdeeur";
    /**
     * ### J Sainsbury PLC
     * *SBRY.GB/GBX*
     */
    Instrument["sbrygbgbx"] = "sbrygbgbx";
    /**
     * ### STARBUCKS CORP
     * *SBUX.US/USD*
     */
    Instrument["sbuxususd"] = "sbuxususd";
    /**
     * ### Svenska Cellulosa AB
     * *SCAB.SE/SEK*
     */
    Instrument["scabsesek"] = "scabsesek";
    /**
     * ### SCHWAB (CHARLES) CORP
     * *SCHW.US/USD*
     */
    Instrument["schwususd"] = "schwususd";
    /**
     * ### Swisscom AG
     * *SCMN.CH/CHF*
     */
    Instrument["scmnchchf"] = "scmnchchf";
    /**
     * ### K+S AG
     * *SDF.DE/EUR*
     */
    Instrument["sdfdeeur"] = "sdfdeeur";
    /**
     * ### Skandinaviska Enskilda Banken AB
     * *SEBA.SE/SEK*
     */
    Instrument["sebasesek"] = "sebasesek";
    /**
     * ### Securitas AB
     * *SECUB.SE/SEK*
     */
    Instrument["secubsesek"] = "secubsesek";
    /**
     * ### Salvat Ferragamo Spa
     * *SFER.IT/EUR*
     */
    Instrument["sferiteur"] = "sferiteur";
    /**
     * ### Singapore Blue Chip Cash Index
     * *SGD.IDX/SGD*
     */
    Instrument["sgdidxsgd"] = "sgdidxsgd";
    /**
     * ### Singapore Dollar vs Japanese Yen
     * *SGD/JPY*
     */
    Instrument["sgdjpy"] = "sgdjpy";
    /**
     * ### Sage Group PLC/The
     * *SGE.GB/GBX*
     */
    Instrument["sgegbgbx"] = "sgegbgbx";
    /**
     * ### Cie de St-Gobain
     * *SGO.FR/EUR*
     */
    Instrument["sgofreur"] = "sgofreur";
    /**
     * ### SGS SA
     * *SGSN.CH/CHF*
     */
    Instrument["sgsnchchf"] = "sgsnchchf";
    /**
     * ### SHERWIN-WILLIAMS COMPANY
     * *SHW.US/USD*
     */
    Instrument["shwususd"] = "shwususd";
    /**
     * ### Siemens AG
     * *SIE.DE/EUR*
     */
    Instrument["siedeeur"] = "siedeeur";
    /**
     * ### JM SMUCKER COMPANY
     * *SJM.US/USD*
     */
    Instrument["sjmususd"] = "sjmususd";
    /**
     * ### Skanska AB
     * *SKAB.SE/SEK*
     */
    Instrument["skabsesek"] = "skabsesek";
    /**
     * ### SKF AB
     * *SKFB.SE/SEK*
     */
    Instrument["skfbsesek"] = "skfbsesek";
    /**
     * ### Sky Plc
     * *SKY.GB/GBP*
     */
    Instrument["skygbgbx"] = "skygbgbx";
    /**
     * ### Standard Life Aberdeen Plc
     * *SLA.GB/GBX*
     */
    Instrument["slagbgbx"] = "slagbgbx";
    /**
     * ### Swiss Life Holding AG
     * *SLHN.CH/CHF*
     */
    Instrument["slhnchchf"] = "slhnchchf";
    /**
     * ### iShares Silver Trust ETF
     * *SLV.US/USD*
     */
    Instrument["slvususd"] = "slvususd";
    /**
     * ### Smiths Group PLC
     * *SMIN.GB/GBX*
     */
    Instrument["smingbgbx"] = "smingbgbx";
    /**
     * ### Smith & Nephew PLC
     * *SN.GB/GBX*
     */
    Instrument["sngbgbx"] = "sngbgbx";
    /**
     * ### SNAP Inc
     * *SNAP.US/USD*
     */
    Instrument["snapususd"] = "snapususd";
    /**
     * ### Snowflake Inc Class A
     * *SNOW.US/USD*
     */
    Instrument["snowususd"] = "snowususd";
    /**
     * ### SOUTHERN CO/THE
     * *SO.US/USD*
     */
    Instrument["soususd"] = "soususd";
    /**
     * ### Solvay SA
     * *SOLB.BE/EUR*
     */
    Instrument["solbbeeur"] = "solbbeeur";
    /**
     * ### Sonova Holding AG
     * *SOON.CH/CHF*
     */
    Instrument["soonchchf"] = "soonchchf";
    /**
     * ### Soybean
     * *SOYBEAN.CMD/USX*
     */
    Instrument["soybeancmdusx"] = "soybeancmdusx";
    /**
     * ### SIMON PROPERTY GROUP INC
     * *SPG.US/USD*
     */
    Instrument["spgususd"] = "spgususd";
    /**
     * ### SAIPEM Spa
     * *SPM.IT/EUR*
     */
    Instrument["spmiteur"] = "spmiteur";
    /**
     * ### SPDR S&P 500 ETF
     * *SPY.US/USD*
     */
    Instrument["spyususd"] = "spyususd";
    /**
     * ### Square Inc
     * *SQ.US/USD*
     */
    Instrument["sqususd"] = "sqususd";
    /**
     * ### Swiss Re AG
     * *SREN.CH/CHF*
     */
    Instrument["srenchchf"] = "srenchchf";
    /**
     * ### Snam Spa
     * *SRG.IT/EUR*
     */
    Instrument["srgiteur"] = "srgiteur";
    /**
     * ### Saras Spa
     * *SRS.IT/EUR*
     */
    Instrument["srsiteur"] = "srsiteur";
    /**
     * ### SSE PLC
     * *SSE.GB/GBX*
     */
    Instrument["ssegbgbx"] = "ssegbgbx";
    /**
     * ### Standard Chartered PLC
     * *STAN.GB/GBX*
     */
    Instrument["stangbgbx"] = "stangbgbx";
    /**
     * ### Stora Enso OYJ
     * *STERV.FI/EUR*
     */
    Instrument["stervfieur"] = "stervfieur";
    /**
     * ### Statoil ASA
     * *STL.NO/NOK*
     */
    Instrument["stlnonok"] = "stlnonok";
    /**
     * ### STMicroelectronics NV
     * *STM.IT/EUR*
     */
    Instrument["stmiteur"] = "stmiteur";
    /**
     * ### STATE STREET CORP
     * *STT.US/USD*
     */
    Instrument["sttususd"] = "sttususd";
    /**
     * ### CONSTELLATION BRANDS INC-A
     * *STZ.US/USD*
     */
    Instrument["stzususd"] = "stzususd";
    /**
     * ### Schneider Electric SA
     * *SU.FR/EUR*
     */
    Instrument["sufreur"] = "sufreur";
    /**
     * ### London Sugar No.5
     * *SUGAR.CMD/USD*
     */
    Instrument["sugarcmdusd"] = "sugarcmdusd";
    /**
     * ### Severn Trent PLC
     * *SVT.GB/GBX*
     */
    Instrument["svtgbgbx"] = "svtgbgbx";
    /**
     * ### Swedbank AB
     * *SWEDA.SE/SEK*
     */
    Instrument["swedasesek"] = "swedasesek";
    /**
     * ### STANLEY BLACK & DECKER INC
     * *SWK.US/USD*
     */
    Instrument["swkususd"] = "swkususd";
    /**
     * ### Swedish Match AB
     * *SWMA.SE/SEK*
     */
    Instrument["swmasesek"] = "swmasesek";
    /**
     * ### STRYKER CORP
     * *SYK.US/USD*
     */
    Instrument["sykususd"] = "sykususd";
    /**
     * ### SYSCO CORP
     * *SYY.US/USD*
     */
    Instrument["syyususd"] = "syyususd";
    /**
     * ### AT&T INC
     * *T.US/USD*
     */
    Instrument["tususd"] = "tususd";
    /**
     * ### MOLSON COORS BREWING CO -B
     * *TAP.US/USD*
     */
    Instrument["tapususd"] = "tapususd";
    /**
     * ### Tate & Lyle PLC
     * *TATE.GB/GBX*
     */
    Instrument["tategbgbx"] = "tategbgbx";
    /**
     * ### iShares TecDAX UCITS DE ETF
     * *TECDAXE.DE/EUR*
     */
    Instrument["tecdaxedeeur"] = "tecdaxedeeur";
    /**
     * ### Telefonica SA
     * *TEF.ES/EUR*
     */
    Instrument["tefeseur"] = "tefeseur";
    /**
     * ### Telenor ASA
     * *TEL.NO/NOK*
     */
    Instrument["telnonok"] = "telnonok";
    /**
     * ### Tele2 AB
     * *TEL2B.SE/SEK*
     */
    Instrument["tel2bsesek"] = "tel2bsesek";
    /**
     * ### Tenaris SA
     * *TEN.IT/EUR*
     */
    Instrument["teniteur"] = "teniteur";
    /**
     * ### TEVA PHARMACEUTICAL-SP ADR
     * *TEVA.US/USD*
     */
    Instrument["tevaususd"] = "tevaususd";
    /**
     * ### TARGET CORP
     * *TGT.US/USD*
     */
    Instrument["tgtususd"] = "tgtususd";
    /**
     * ### Tiscali Spa
     * *TIS.IT/EUR*
     */
    Instrument["tisiteur"] = "tisiteur";
    /**
     * ### Telecom Italia Spa
     * *TIT.IT/EUR*
     */
    Instrument["tititeur"] = "tititeur";
    /**
     * ### TJX COMPANIES INC
     * *TJX.US/USD*
     */
    Instrument["tjxususd"] = "tjxususd";
    /**
     * ### ThyssenKrupp AG
     * *TKA.DE/EUR*
     */
    Instrument["tkadeeur"] = "tkadeeur";
    /**
     * ### Telia Company AB
     * *TLS1V.FI/EUR*
     */
    Instrument["tls1vfieur"] = "tls1vfieur";
    /**
     * ### Telia Company AB
     * *TLSN.SE/SEK*
     */
    Instrument["tlsnsesek"] = "tlsnsesek";
    /**
     * ### iShares 20+ Year Treasury Bond ETF
     * *TLT.US/USD*
     */
    Instrument["tltususd"] = "tltususd";
    /**
     * ### Tullow Oil PLC
     * *TLW.GB/GBX*
     */
    Instrument["tlwgbgbx"] = "tlwgbgbx";
    /**
     * ### THERMO FISHER SCIENTIFIC INC
     * *TMO.US/USD*
     */
    Instrument["tmoususd"] = "tmoususd";
    /**
     * ### Tods Spa
     * *TOD.IT/EUR*
     */
    Instrument["toditeur"] = "toditeur";
    /**
     * ### Travis Perkins PLC
     * *TPK.GB/GBX*
     */
    Instrument["tpkgbgbx"] = "tpkgbgbx";
    /**
     * ### Terna Spa
     * *TRN.IT/EUR*
     */
    Instrument["trniteur"] = "trniteur";
    /**
     * ### T ROWE PRICE GROUP INC
     * *TROW.US/USD*
     */
    Instrument["trowususd"] = "trowususd";
    /**
     * ### TRAVELERS COS INC/THE
     * *TRV.US/USD*
     */
    Instrument["trvususd"] = "trvususd";
    /**
     * ### TRON vs US Dollar
     * *TRX/USD*
     */
    Instrument["trxusd"] = "trxusd";
    /**
     * ### Turkish Lira vs Japanese Yen
     * *TRY/JPY*
     */
    Instrument["tryjpy"] = "tryjpy";
    /**
     * ### Tesco PLC
     * *TSCO.GB/GBX*
     */
    Instrument["tscogbgbx"] = "tscogbgbx";
    /**
     * ### TESLA MOTORS INC
     * *TSLA.US/USD*
     */
    Instrument["tslaususd"] = "tslaususd";
    /**
     * ### Taiwan Semiconductor Manufacturing Company Limited
     * *TSM.US/USD*
     */
    Instrument["tsmususd"] = "tsmususd";
    /**
     * ### TYSON FOODS INC-CL A
     * *TSN.US/USD*
     */
    Instrument["tsnususd"] = "tsnususd";
    /**
     * ### TUI AG
     * *TUI1.DE/EUR*
     */
    Instrument["tui1deeur"] = "tui1deeur";
    /**
     * ### TWITTER INC
     * *TWTR.US/USD*
     */
    Instrument["twtrususd"] = "twtrususd";
    /**
     * ### TEXAS INSTRUMENTS INC
     * *TXN.US/USD*
     */
    Instrument["txnususd"] = "txnususd";
    /**
     * ### Uber Inc
     * *UBER.US/USD*
     */
    Instrument["uberususd"] = "uberususd";
    /**
     * ### UBS Group AG
     * *UBSG.CH/CHF*
     */
    Instrument["ubsgchchf"] = "ubsgchchf";
    /**
     * ### UCB SA
     * *UCB.BE/EUR*
     */
    Instrument["ucbbeeur"] = "ucbbeeur";
    /**
     * ### UniCredit Spa
     * *UCG.IT/EUR*
     */
    Instrument["ucgiteur"] = "ucgiteur";
    /**
     * ### Peugeot SA
     * *UG.FR/EUR*
     */
    Instrument["ugfreur"] = "ugfreur";
    /**
     * ### Swatch Group AG/The
     * *UHR.CH/CHF*
     */
    Instrument["uhrchchf"] = "uhrchchf";
    /**
     * ### UK Long Gilt
     * *UKGILT.TR/GBP*
     */
    Instrument["ukgilttrgbp"] = "ukgilttrgbp";
    /**
     * ### ULTA SALON COSMETICS & FRAGR
     * *ULTA.US/USD*
     */
    Instrument["ultaususd"] = "ultaususd";
    /**
     * ### Unilever PLC
     * *ULVR.GB/GBX*
     */
    Instrument["ulvrgbgbx"] = "ulvrgbgbx";
    /**
     * ### Umicore SA
     * *UMI.BE/EUR*
     */
    Instrument["umibeeur"] = "umibeeur";
    /**
     * ### Unilever NV
     * *UNA.NL/EUR*
     */
    Instrument["unanleur"] = "unanleur";
    /**
     * ### UNITEDHEALTH GROUP INC
     * *UNH.US/USD*
     */
    Instrument["unhususd"] = "unhususd";
    /**
     * ### UNION PACIFIC CORP
     * *UNP.US/USD*
     */
    Instrument["unpususd"] = "unpususd";
    /**
     * ### UNITED PARCEL SERVICE-CL B
     * *UPS.US/USD*
     */
    Instrument["upsususd"] = "upsususd";
    /**
     * ### Unipolsai Assicurazioni Spa
     * *US.IT/EUR*
     */
    Instrument["usiteur"] = "usiteur";
    /**
     * ### US BANCORP
     * *USB.US/USD*
     */
    Instrument["usbususd"] = "usbususd";
    /**
     * ### US Dollar vs Canadian Dollar
     * *USD/CAD*
     */
    Instrument["usdcad"] = "usdcad";
    /**
     * ### US Dollar vs Swiss Franc
     * *USD/CHF*
     */
    Instrument["usdchf"] = "usdchf";
    /**
     * ### US Dollar vs Offshore Chinese Renminbi
     * *USD/CNH*
     */
    Instrument["usdcnh"] = "usdcnh";
    /**
     * ### US Dollar vs Czech Koruna
     * *USD/CZK*
     */
    Instrument["usdczk"] = "usdczk";
    /**
     * ### US Dollar vs Danish Krone
     * *USD/DKK*
     */
    Instrument["usddkk"] = "usddkk";
    /**
     * ### US Dollar vs Hong Kong Dollar
     * *USD/HKD*
     */
    Instrument["usdhkd"] = "usdhkd";
    /**
     * ### US Dollar vs Hungarian Forint
     * *USD/HUF*
     */
    Instrument["usdhuf"] = "usdhuf";
    /**
     * ### US Dollar vs Israeli Shekel
     * *USD/ILS*
     */
    Instrument["usdils"] = "usdils";
    /**
     * ### US Dollar vs Japanese Yen
     * *USD/JPY*
     */
    Instrument["usdjpy"] = "usdjpy";
    /**
     * ### US Dollar vs Mexican Peso
     * *USD/MXN*
     */
    Instrument["usdmxn"] = "usdmxn";
    /**
     * ### US Dollar vs Norwegian Krone
     * *USD/NOK*
     */
    Instrument["usdnok"] = "usdnok";
    /**
     * ### US Dollar vs Polish Zloty
     * *USD/PLN*
     */
    Instrument["usdpln"] = "usdpln";
    /**
     * ### US Dollar vs Romanian Leu
     * *USD/RON*
     */
    Instrument["usdron"] = "usdron";
    /**
     * ### US Dollar vs Russian Ruble
     * *USD/RUB*
     */
    Instrument["usdrub"] = "usdrub";
    /**
     * ### US Dollar vs Swedish Krona
     * *USD/SEK*
     */
    Instrument["usdsek"] = "usdsek";
    /**
     * ### US Dollar vs Singapore Dollar
     * *USD/SGD*
     */
    Instrument["usdsgd"] = "usdsgd";
    /**
     * ### US Dollar vs Thai Baht
     * *USD/THB*
     */
    Instrument["usdthb"] = "usdthb";
    /**
     * ### US Dollar vs Turkish Lira
     * *USD/TRY*
     */
    Instrument["usdtry"] = "usdtry";
    /**
     * ### US Dollar vs South African Rand
     * *USD/ZAR*
     */
    Instrument["usdzar"] = "usdzar";
    /**
     * ### United States Oil
     * *USO.US/USD*
     */
    Instrument["usoususd"] = "usoususd";
    /**
     * ### US Small Cap 2000
     * *USSC2000.IDX/USD*
     */
    Instrument["ussc2000idxusd"] = "ussc2000idxusd";
    /**
     * ### US T-Bond
     * *USTBOND.TR/USD*
     */
    Instrument["ustbondtrusd"] = "ustbondtrusd";
    /**
     * ### United Utilities Group PLC
     * *UU.GB/GBX*
     */
    Instrument["uugbgbx"] = "uugbgbx";
    /**
     * ### VISA INC-CLASS A SHARES
     * *V.US/USD*
     */
    Instrument["vususd"] = "vususd";
    /**
     * ### Vale S.A.
     * *VALE.US/USD*
     */
    Instrument["valeususd"] = "valeususd";
    /**
     * ### Vanguard FTSE Developed Markets ETF
     * *VEA.US/USD*
     */
    Instrument["veaususd"] = "veaususd";
    /**
     * ### VF CORP
     * *VFC.US/USD*
     */
    Instrument["vfcususd"] = "vfcususd";
    /**
     * ### Vanguard FTSE Europe ETF
     * *VGK.US/USD*
     */
    Instrument["vgkususd"] = "vgkususd";
    /**
     * ### Veolia Environnement SA
     * *VIE.FR/EUR*
     */
    Instrument["viefreur"] = "viefreur";
    /**
     * ### Vivendi SA
     * *VIV.FR/EUR*
     */
    Instrument["vivfreur"] = "vivfreur";
    /**
     * ### Vallourec SA
     * *VK.FR/EUR*
     */
    Instrument["vkfreur"] = "vkfreur";
    /**
     * ### VALERO ENERGY CORP
     * *VLO.US/USD*
     */
    Instrument["vloususd"] = "vloususd";
    /**
     * ### VULCAN MATERIALS CO
     * *VMC.US/USD*
     */
    Instrument["vmcususd"] = "vmcususd";
    /**
     * ### Vonovia SE
     * *VNA.DE/EUR*
     */
    Instrument["vnadeeur"] = "vnadeeur";
    /**
     * ### Vanguard REIT ETF
     * *VNQ.US/USD*
     */
    Instrument["vnqususd"] = "vnqususd";
    /**
     * ### Vodafone Group PLC
     * *VOD.GB/GBX*
     */
    Instrument["vodgbgbx"] = "vodgbgbx";
    /**
     * ### Voestalpine AG
     * *VOE.AT/EUR*
     */
    Instrument["voeateur"] = "voeateur";
    /**
     * ### Volvo AB
     * *VOLVB.SE/SEK*
     */
    Instrument["volvbsesek"] = "volvbsesek";
    /**
     * ### Volkswagen AG
     * *VOW3.DE/EUR*
     */
    Instrument["vow3deeur"] = "vow3deeur";
    /**
     * ### Koninklijke Vopak NV
     * *VPK.NL/EUR*
     */
    Instrument["vpknleur"] = "vpknleur";
    /**
     * ### VERTEX PHARMACEUTICALS INC
     * *VRTX.US/USD*
     */
    Instrument["vrtxususd"] = "vrtxususd";
    /**
     * ### Vestas Wind Systems A/S
     * *VWS.DK/DKK*
     */
    Instrument["vwsdkdkk"] = "vwsdkdkk";
    /**
     * ### iPath S&P 500 VIX ST Futures ETN
     * *VXX.US/USD*
     */
    Instrument["vxxususd"] = "vxxususd";
    /**
     * ### VERIZON COMMUNICATIONS INC
     * *VZ.US/USD*
     */
    Instrument["vzususd"] = "vzususd";
    /**
     * ### WALGREENS BOOTS ALLIANCE INC
     * *WBA.US/USD*
     */
    Instrument["wbaususd"] = "wbaususd";
    /**
     * ### WeBuild Spa
     * *WBD.IT/EUR*
     */
    Instrument["wbditeur"] = "wbditeur";
    /**
     * ### WESTERN DIGITAL CORP
     * *WDC.US/USD*
     */
    Instrument["wdcususd"] = "wdcususd";
    /**
     * ### Weir Group PLC/The
     * *WEIR.GB/GBX*
     */
    Instrument["weirgbgbx"] = "weirgbgbx";
    /**
     * ### WELLS FARGO & CO
     * *WFC.US/USD*
     */
    Instrument["wfcususd"] = "wfcususd";
    /**
     * ### WHIRLPOOL CORP
     * *WHR.US/USD*
     */
    Instrument["whrususd"] = "whrususd";
    /**
     * ### Wolters Kluwer NV
     * *WKL.NL/EUR*
     */
    Instrument["wklnleur"] = "wklnleur";
    /**
     * ### WAL-MART STORES INC
     * *WMT.US/USD*
     */
    Instrument["wmtususd"] = "wmtususd";
    /**
     * ### Wolseley PLC
     * *WOS.GB/GBX*
     */
    Instrument["wosgbgbx"] = "wosgbgbx";
    /**
     * ### WPP PLC
     * *WPP.GB/GBX*
     */
    Instrument["wppgbgbx"] = "wppgbgbx";
    /**
     * ### Whitbread PLC
     * *WTB.GB/GBX*
     */
    Instrument["wtbgbgbx"] = "wtbgbgbx";
    /**
     * ### WYNN RESORTS LTD
     * *WYNN.US/USD*
     */
    Instrument["wynnususd"] = "wynnususd";
    /**
     * ### UNITED STATES STEEL CORP
     * *X.US/USD*
     */
    Instrument["xususd"] = "xususd";
    /**
     * ### Spot silver
     * *XAG/USD*
     */
    Instrument["xagusd"] = "xagusd";
    /**
     * ### Spot gold
     * *XAU/USD*
     */
    Instrument["xauusd"] = "xauusd";
    /**
     * ### Energy Select Sector SPDR Fund
     * *XLE.US/USD*
     */
    Instrument["xleususd"] = "xleususd";
    /**
     * ### Financial Select Sector SPDR Fund
     * *XLF.US/USD*
     */
    Instrument["xlfususd"] = "xlfususd";
    /**
     * ### Industrial Select Sector SPDR Fund
     * *XLI.US/USD*
     */
    Instrument["xliususd"] = "xliususd";
    /**
     * ### Technology Select Sector SPDR Fund
     * *XLK.US/USD*
     */
    Instrument["xlkususd"] = "xlkususd";
    /**
     * ### Stellar vs US Dollar
     * *XLM/USD*
     */
    Instrument["xlmusd"] = "xlmusd";
    /**
     * ### XILINX INC
     * *XLNX.US/USD*
     */
    Instrument["xlnxususd"] = "xlnxususd";
    /**
     * ### Consumer Staples Select Sector SPDR Fund
     * *XLP.US/USD*
     */
    Instrument["xlpususd"] = "xlpususd";
    /**
     * ### Utilities Select Sector SPDR Fund
     * *XLU.US/USD*
     */
    Instrument["xluususd"] = "xluususd";
    /**
     * ### Health Care Select Sector SPDR Fund
     * *XLV.US/USD*
     */
    Instrument["xlvususd"] = "xlvususd";
    /**
     * ### Consumer Discretionary Select Sector SPDR Fund
     * *XLY.US/USD*
     */
    Instrument["xlyususd"] = "xlyususd";
    /**
     * ### Monero vs US Dollar
     * *XMR/USD*
     */
    Instrument["xmrusd"] = "xmrusd";
    /**
     * ### EXXON MOBIL CORP
     * *XOM.US/USD*
     */
    Instrument["xomususd"] = "xomususd";
    /**
     * ### SPDR S&P Oil & Gas Explor & Prodtn ETF
     * *XOP.US/USD*
     */
    Instrument["xopususd"] = "xopususd";
    /**
     * ### Xpeng Inc ADR
     * *XPEV.US/USD*
     */
    Instrument["xpevususd"] = "xpevususd";
    /**
     * ### YUM! BRANDS INC
     * *YUM.US/USD*
     */
    Instrument["yumususd"] = "yumususd";
    /**
     * ### South African Rand vs Japanese Yen
     * *ZAR/JPY*
     */
    Instrument["zarjpy"] = "zarjpy";
    /**
     * ### ZIMMER BIOMET HOLDINGS INC
     * *ZBH.US/USD*
     */
    Instrument["zbhususd"] = "zbhususd";
    /**
     * ### Zoom Video Communications (A Class)
     * *ZM.US/USD*
     */
    Instrument["zmususd"] = "zmususd";
    /**
     * ### Zurich Insurance Group AG
     * *ZURN.CH/CHF*
     */
    Instrument["zurnchchf"] = "zurnchchf";
})(exports.Instrument || (exports.Instrument = {}));

(function (Timeframe) {
    /**
     * Every single price change. No aggregation of OHLC price data
     */
    Timeframe["tick"] = "tick";
    /**
     *  minutely `(1 minute)` aggregation of OHLC price data
     */
    Timeframe["m1"] = "m1";
    /**
     *  15-minute `(15 minutes)` aggregation of OHLC price data
     */
    Timeframe["m15"] = "m15";
    /**
     *  half-hour `(30 minutes)` aggregation of OHLC price data
     */
    Timeframe["m30"] = "m30";
    /**
     *  hourly `(1 hour)` aggregation of OHLC price data
     */
    Timeframe["h1"] = "h1";
    /**
     *  daily `(1 day)` aggregation of OHLC price data
     */
    Timeframe["d1"] = "d1";
    /**
     *  monthly `(1 month)` aggregation of OHLC price data
     */
    Timeframe["mn1"] = "mn1";
})(exports.Timeframe || (exports.Timeframe = {}));

(function (Price) {
    /**
     * A `bid` is an offer made by an investor, trader, or dealer in an effort to buy a security, commodity, or currency.
     */
    Price["bid"] = "bid";
    /**
     * The `ask` is the price a seller is willing to accept for a security, commodity, or currency, which is often referred to as the offer price
     */
    Price["ask"] = "ask";
})(exports.Price || (exports.Price = {}));

(function (Format) {
    /**
     * Data will be returned in a shape of array of arrays of numbers
     * ***
     * `m1`, `m30`, `h1`, `d1`, `mn1`:
     * ```
     * // t-stamp open  high  low   close volume
     * [[1000000, 1.01, 1.02, 1.03, 1.04, 1111],
     * [20000000, 2.01, 2.02, 2.03, 2.04, 2222],
     * [30000000, 3.01, 3.02, 3.03, 3.04, 3333]]
     * ```
     * ***
     * `tick`:
     * ```
     * // t-stamp ask   bid   askV. bidV.
     * [[1000000, 1.01, 1.02, 1111, 9999],
     * [20000000, 2.01, 2.02, 2222, 8888],
     * [30000000, 3.01, 3.02, 3333, 7777]]
     * ```
     */
    Format["array"] = "array";
    /**
     * Data will be returned as **JSON**
     * ***
     * `m1`, `m30`, `h1`, `d1`, `mn1`:
     * ```
     * {
     *   timestamp: 1000000000000,
     *   open: 1.00001,
     *   high: 1.00002,
     *   low: 1.00003,
     *   close: 1.00004,
     *   volume: 1111
     * }
     * ```
     *  ***
     * `tick`:
     * ```
     * {
     *  timestamp: 1000000000000,
     *  askPrice: 1.00001,
     *  bidPrice: 1.00002,
     *  askVolume: 1111,
     *  bidVolume: 9999
     * }
     * ```
     */
    Format["json"] = "json";
    /**
     * Data will be returned as a **CSV** string
     * ***
     * `m1`, `m30`, `h1`, `d1`, `mn1`:
     * ```
     * `
     * timestamp,open,high,low,close,volume
     * 10000000,1.01,1.02,1.03,1.04,1111,
     * 20000000,2.01,2.02,2.03,2.04,2222,
     * 30000000,3.01,3.02,3.03,3.04,3333
     * `
     * ```
     * ***
     * `tick`:
     * ```
     * `
     * timestamp,askPrice,bidPrice,askVolume,bidVolume
     * 10000000,1.01,1.02,1111,9999
     * 20000000,2.01,2.02,2222,8888
     * 30000000,3.01,3.02,3333,7777
     * `
     * ```
     */
    Format["csv"] = "csv";
})(exports.Format || (exports.Format = {}));

const defaultConfig = {
    timeframe: exports.Timeframe.d1,
    priceType: exports.Price.bid,
    utcOffset: 0,
    volumes: true,
    ignoreFlats: true,
    format: exports.Format.array,
    batchSize: 10,
    pauseBetweenBatchesMs: 1000,
    useCache: false,
    cacheFolderPath: '',
    retryCount: 0,
    pauseBetweenRetriesMs: 500
};

const schema = {
    instrument: { type: 'string', enum: Object.keys(exports.Instrument), required: true },
    dates: {
        type: 'object',
        required: true,
        props: {
            from: { type: 'date', convert: true, required: true },
            to: { type: 'date', convert: true, required: true }
        }
    },
    timeframe: {
        type: 'string',
        enum: Object.keys(exports.Timeframe),
        optional: true,
        default: defaultConfig.timeframe
    },
    priceType: {
        type: 'string',
        enum: Object.keys(exports.Price),
        optional: true,
        default: defaultConfig.priceType
    },
    utcOffset: {
        type: 'number',
        integer: true,
        optional: true,
        default: defaultConfig.utcOffset
    },
    volumes: { type: 'boolean', optional: true, default: defaultConfig.volumes },
    ignoreFlats: {
        type: 'boolean',
        optional: true,
        default: defaultConfig.ignoreFlats
    },
    format: {
        type: 'string',
        enum: Object.keys(exports.Format),
        optional: true,
        default: defaultConfig.format
    },
    batchSize: {
        type: 'number',
        integer: true,
        optional: true,
        default: defaultConfig.batchSize
    },
    pauseBetweenBatchesMs: {
        type: 'number',
        integer: true,
        optional: true,
        default: defaultConfig.pauseBetweenBatchesMs
    },
    useCache: { type: 'boolean', optional: true, default: defaultConfig.useCache },
    cacheFolderPath: {
        type: 'string',
        optional: true,
        default: defaultConfig.cacheFolderPath
    },
    retryCount: {
        type: 'number',
        integer: true,
        optional: true,
        default: defaultConfig.retryCount
    },
    pauseBetweenRetriesMs: {
        type: 'number',
        integer: true,
        optional: true,
        default: defaultConfig.pauseBetweenRetriesMs
    }
};

const validator = new Validator__default['default']();
/**
 *
 * Validates the config and sanitizes some of the params
 *
 */
function validateConfig(input, schema) {
    const check = validator.compile(schema);
    const validationResult = check(input);
    const isValid = validationResult === true;
    const sanitaizedInput = input;
    return {
        input: sanitaizedInput,
        isValid,
        validationErrors: !isValid && Array.isArray(validationResult)
            ? validationResult.map(({ message, expected, actual }) => ({ message, expected, actual }))
            : []
    };
}
function validateConfigNode(input) {
    return validateConfig(input, schema);
}

var aususd = {
	name: "A.US/USD",
	description: "AGILENT TECHNOLOGIES INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-25T14:30:00.057Z",
	startDayForMinuteCandles: "2017-05-25T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-25T14:00:00.000Z",
	startYearForDailyCandles: "2017-05-25T00:00:00.000Z"
};
var a2aiteur = {
	name: "A2A.IT/EUR",
	description: "A2A Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T07:00:01.130Z",
	startDayForMinuteCandles: "2020-06-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var aaususd = {
	name: "AA.US/USD",
	description: "ALCOA INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-30T17:32:23.400Z",
	startDayForMinuteCandles: "2018-01-30T17:32:00.000Z",
	startMonthForHourlyCandles: "2018-01-30T17:00:00.000Z",
	startYearForDailyCandles: "2018-01-30T00:00:00.000Z"
};
var aabvususd = {
	name: "AABV.US/USD",
	description: "AbbVie Inc",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-01T13:30:00.004Z",
	startDayForMinuteCandles: "2020-10-01T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-10-01T14:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var aalgbgbx = {
	name: "AAL.GB/GBX",
	description: "Anglo American PLC",
	decimalFactor: 1000,
	startHourForTicks: "2015-08-25T07:00:26.006Z",
	startDayForMinuteCandles: "2016-08-10T08:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var aalususd = {
	name: "AAL.US/USD",
	description: "AMERICAN AIRLINES GROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.002Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var aaplususd = {
	name: "AAPL.US/USD",
	description: "APPLE INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.325Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var abbsesek = {
	name: "ABB.SE/SEK",
	description: "ABB Ltd",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T16:09:04.708Z",
	startDayForMinuteCandles: "2016-11-14T16:09:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var abbnchchf = {
	name: "ABBN.CH/CHF",
	description: "ABB Ltd",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:50.097Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var abcususd = {
	name: "ABC.US/USD",
	description: "AMERISOURCEBERGEN CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-30T16:01:31.349Z",
	startDayForMinuteCandles: "2018-01-30T16:01:00.000Z",
	startMonthForHourlyCandles: "2018-01-30T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-30T00:00:00.000Z"
};
var abevususd = {
	name: "ABEV.US/USD",
	description: "Ambev S.A.",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:00.107Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var abfgbgbx = {
	name: "ABF.GB/GBX",
	description: "Associated British Foods PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:11.322Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var abibeeur = {
	name: "ABI.BE/EUR",
	description: "Anheuser-Busch InBev NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-21T08:00:06.376Z",
	startDayForMinuteCandles: "2016-11-21T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var abtususd = {
	name: "ABT.US/USD",
	description: "ABBOTT LABORATORIES",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:39.284Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var acfreur = {
	name: "AC.FR/EUR",
	description: "Accor SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-11T08:59:52.334Z",
	startDayForMinuteCandles: "2016-08-11T08:59:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var acafreur = {
	name: "ACA.FR/EUR",
	description: "Credit Agricole SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T07:00:19.978Z",
	startDayForMinuteCandles: "2016-09-30T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var acseseur = {
	name: "ACS.ES/EUR",
	description: "ACS Actividades de Construccion y Servicios SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:20.562Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var acxeseur = {
	name: "ACX.ES/EUR",
	description: "Acerinox SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:18.558Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var adbeususd = {
	name: "ADBE.US/USD",
	description: "ADOBE SYSTEMS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:10.165Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var adenchchf = {
	name: "ADEN.CH/CHF",
	description: "Adecco SA",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:50.091Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var adiususd = {
	name: "ADI.US/USD",
	description: "ANALOG DEVICES INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-30T16:05:35.585Z",
	startDayForMinuteCandles: "2018-01-30T16:05:00.000Z",
	startMonthForHourlyCandles: "2018-01-30T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-30T00:00:00.000Z"
};
var admgbgbx = {
	name: "ADM.GB/GBX",
	description: "Admiral Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:06.151Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var adpususd = {
	name: "ADP.US/USD",
	description: "AUTOMATIC DATA PROCESSING",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.569Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var adsdeeur = {
	name: "ADS.DE/EUR",
	description: "Adidas AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-13T08:00:16.248Z",
	startDayForMinuteCandles: "2015-03-13T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var adskususd = {
	name: "ADSK.US/USD",
	description: "AUTODESK INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-30T16:19:51.890Z",
	startDayForMinuteCandles: "2018-01-30T16:19:00.000Z",
	startMonthForHourlyCandles: "2018-01-30T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-30T00:00:00.000Z"
};
var aenaeseur = {
	name: "AENA.ES/EUR",
	description: "Aena SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:18.962Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2015-02-11T11:00:00.000Z",
	startYearForDailyCandles: "2015-02-11T00:00:00.000Z"
};
var aepususd = {
	name: "AEP.US/USD",
	description: "AMERICAN ELECTRIC POWER",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-26T14:30:34.288Z",
	startDayForMinuteCandles: "2016-09-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2016-09-26T14:00:00.000Z",
	startYearForDailyCandles: "2016-09-26T00:00:00.000Z"
};
var affreur = {
	name: "AF.FR/EUR",
	description: "Air France-KLM",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-27T07:53:59.324Z",
	startDayForMinuteCandles: "2016-09-27T07:53:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var agkgbgbx = {
	name: "AGK.GB/GBX",
	description: "Aggreko PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:28.482Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var agliteur = {
	name: "AGL.IT/EUR",
	description: "Autogrill Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T07:00:00.084Z",
	startDayForMinuteCandles: "2020-06-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var agnnleur = {
	name: "AGN.NL/EUR",
	description: "Aegon NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.526Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var agsbeeur = {
	name: "AGS.BE/EUR",
	description: "Ageas",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-21T08:00:06.391Z",
	startDayForMinuteCandles: "2016-11-21T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ahnleur = {
	name: "AH.NL/EUR",
	description: "Koninklijke Ahold Delhaize NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.021Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ahtgbgbx = {
	name: "AHT.GB/GBX",
	description: "Ashtead Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:06.263Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var aifreur = {
	name: "AI.FR/EUR",
	description: "Air Liquide SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T08:06:30.108Z",
	startDayForMinuteCandles: "2016-09-30T08:06:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var aigususd = {
	name: "AIG.US/USD",
	description: "AMERICAN INTERNATIONAL GROUP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:33.872Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var airfreur = {
	name: "AIR.FR/EUR",
	description: "Airbus Group SE",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:34:32.866Z",
	startDayForMinuteCandles: "2016-09-30T09:34:00.000Z",
	startMonthForHourlyCandles: "2014-01-02T08:00:00.000Z",
	startYearForDailyCandles: "2014-01-02T00:00:00.000Z"
};
var akzanleur = {
	name: "AKZA.NL/EUR",
	description: "Akzo Nobel NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.526Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var alfasesek = {
	name: "ALFA.SE/SEK",
	description: "Alfa Laval AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:35.856Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var allususd = {
	name: "ALL.US/USD",
	description: "ALLSTATE CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T15:21:15.151Z",
	startDayForMinuteCandles: "2018-01-31T15:21:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T15:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var alofreur = {
	name: "ALO.FR/EUR",
	description: "Alstom SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-27T07:53:59.336Z",
	startDayForMinuteCandles: "2016-09-27T07:53:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var alvdeeur = {
	name: "ALV.DE/EUR",
	description: "Allianz SE",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-09T07:00:27.004Z",
	startDayForMinuteCandles: "2015-04-09T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var alxnususd = {
	name: "ALXN.US/USD",
	description: "ALEXION PHARMACEUTICALS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.025Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var amatususd = {
	name: "AMAT.US/USD",
	description: "APPLIED MATERIALS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:03.833Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var amdususd = {
	name: "AMD.US/USD",
	description: "ADVANCED MICRO DEVICES",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:41:48.274Z",
	startDayForMinuteCandles: "2017-11-02T13:41:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var amgnususd = {
	name: "AMGN.US/USD",
	description: "AMGEN INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.440Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var ampiteur = {
	name: "AMP.IT/EUR",
	description: "Amplifon Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T07:00:00.277Z",
	startDayForMinuteCandles: "2020-06-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var ampususd = {
	name: "AMP.US/USD",
	description: "AMERIPRISE FINANCIAL INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:29:54.894Z",
	startDayForMinuteCandles: "2018-01-31T16:29:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var amseseur = {
	name: "AMS.ES/EUR",
	description: "Amadeus IT Holding SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:28.687Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var amtususd = {
	name: "AMT.US/USD",
	description: "AMERICAN TOWER CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:43:08.709Z",
	startDayForMinuteCandles: "2017-11-02T13:43:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var amwlususd = {
	name: "AMWL.US/USD",
	description: "American Well Corp Class A",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-01T13:30:00.007Z",
	startDayForMinuteCandles: "2020-10-01T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-10-01T14:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var amznususd = {
	name: "AMZN.US/USD",
	description: "AMAZON.COM INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.221Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var antmususd = {
	name: "ANTM.US/USD",
	description: "ANTHEM INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:44:13.129Z",
	startDayForMinuteCandles: "2017-11-02T13:44:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var antogbgbx = {
	name: "ANTO.GB/GBX",
	description: "Antofagasta PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:11.108Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var apaususd = {
	name: "APA.US/USD",
	description: "APACHE CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:35:03.716Z",
	startDayForMinuteCandles: "2018-01-31T16:35:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var apdususd = {
	name: "APD.US/USD",
	description: "AIR PRODUCTS & CHEMICALS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:47:10.790Z",
	startDayForMinuteCandles: "2017-11-02T13:47:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var asmlnleur = {
	name: "ASML.NL/EUR",
	description: "ASML Holding NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.729Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var atcoasesek = {
	name: "ATCOA.SE/SEK",
	description: "Atlas Copco AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T16:09:03.402Z",
	startDayForMinuteCandles: "2016-11-14T16:09:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var atliteur = {
	name: "ATL.IT/EUR",
	description: "Atlantia Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T07:00:00.064Z",
	startDayForMinuteCandles: "2020-06-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var atviususd = {
	name: "ATVI.US/USD",
	description: "ACTIVISION BLIZZARD INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:07.909Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var audcad = {
	name: "AUD/CAD",
	description: "Australian Dollar vs Canadian Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2006-01-03T00:00:05.860Z",
	startDayForMinuteCandles: "2006-01-03T00:00:00.000Z",
	startMonthForHourlyCandles: "2006-01-03T00:00:00.000Z",
	startYearForDailyCandles: "1992-11-18T00:00:00.000Z"
};
var audchf = {
	name: "AUD/CHF",
	description: "Australian Dollar vs Swiss Franc",
	decimalFactor: 100000,
	startHourForTicks: "2006-03-01T00:01:00.898Z",
	startDayForMinuteCandles: "2006-03-01T00:01:00.000Z",
	startMonthForHourlyCandles: "2006-03-01T00:00:00.000Z",
	startYearForDailyCandles: "1991-11-22T00:00:00.000Z"
};
var audjpy = {
	name: "AUD/JPY",
	description: "Australian Dollar vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2003-11-30T22:00:00.662Z",
	startDayForMinuteCandles: "2003-11-30T22:00:00.000Z",
	startMonthForHourlyCandles: "2003-11-30T21:00:00.000Z",
	startYearForDailyCandles: "1991-02-04T00:00:00.000Z"
};
var audnzd = {
	name: "AUD/NZD",
	description: "Australian Dollar vs New Zealand Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2006-12-12T00:01:02.665Z",
	startDayForMinuteCandles: "2006-12-12T00:01:00.000Z",
	startMonthForHourlyCandles: "2006-12-12T00:00:00.000Z",
	startYearForDailyCandles: "1993-12-21T00:00:00.000Z"
};
var audsgd = {
	name: "AUD/SGD",
	description: "Australian Dollar vs Singapore Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-14T00:00:20.923Z",
	startDayForMinuteCandles: "2007-03-13T05:10:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T05:00:00.000Z",
	startYearForDailyCandles: "1999-06-04T00:00:00.000Z"
};
var audusd = {
	name: "AUD/USD",
	description: "Australian Dollar vs US Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-03T21:00:05.044Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1993-01-04T00:00:00.000Z"
};
var avgbgbx = {
	name: "AV.GB/GBX",
	description: "Aviva PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:10.112Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var avbususd = {
	name: "AVB.US/USD",
	description: "AVALONBAY COMMUNITIES INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:35:58.320Z",
	startDayForMinuteCandles: "2018-01-31T16:35:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var avgoususd = {
	name: "AVGO.US/USD",
	description: "Broadcom Limited",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.440Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var axpususd = {
	name: "AXP.US/USD",
	description: "AMERICAN EXPRESS CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.157Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var azmiteur = {
	name: "AZM.IT/EUR",
	description: "Azimut Holding Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T12:00:12.628Z",
	startDayForMinuteCandles: "2020-06-01T12:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T12:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var azngbgbx = {
	name: "AZN.GB/GBX",
	description: "AstraZeneca PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:22.212Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var aznususd = {
	name: "AZN.US/USD",
	description: "AstraZeneca PLC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.437Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var azoususd = {
	name: "AZO.US/USD",
	description: "AUTOZONE INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:49:57.400Z",
	startDayForMinuteCandles: "2017-11-02T13:49:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var bagbgbx = {
	name: "BA.GB/GBX",
	description: "BAE Systems PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:02.302Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var baususd = {
	name: "BA.US/USD",
	description: "Boeing Co",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.524Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var babgbgbx = {
	name: "BAB.GB/GBX",
	description: "Babcock International Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:26.612Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var babaususd = {
	name: "BABA.US/USD",
	description: "ALIBABA GROUP HOLDING-SP ADR",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:00.107Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var bacususd = {
	name: "BAC.US/USD",
	description: "BANK OF AMERICA CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.580Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var baerchchf = {
	name: "BAER.CH/CHF",
	description: "Julius Baer Group Ltd",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:50.061Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var bamiiteur = {
	name: "BAMI.IT/EUR",
	description: "Banco BPM Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-08-10T12:05:04.367Z",
	startDayForMinuteCandles: "2020-08-10T12:05:00.000Z",
	startMonthForHourlyCandles: "2020-08-10T12:00:00.000Z",
	startYearForDailyCandles: "2020-08-10T00:00:00.000Z"
};
var barcgbgbx = {
	name: "BARC.GB/GBX",
	description: "Barclays PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:29.582Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var basdeeur = {
	name: "BAS.DE/EUR",
	description: "BASF SE",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-22T07:00:27.260Z",
	startDayForMinuteCandles: "2015-04-22T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var batsgbgbx = {
	name: "BATS.GB/GBX",
	description: "British American Tobacco PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:28.156Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var bayndeeur = {
	name: "BAYN.DE/EUR",
	description: "Bayer AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-20T08:00:11.003Z",
	startDayForMinuteCandles: "2015-03-20T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var bbdususd = {
	name: "BBD.US/USD",
	description: "Banco Bradesco S.A.",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.345Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var bbvaeseur = {
	name: "BBVA.ES/EUR",
	description: "Banco Bilbao Vizcaya Argentaria SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:14.051Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var bbyususd = {
	name: "BBY.US/USD",
	description: "BEST BUY CO INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:12.538Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var bciteur = {
	name: "BC.IT/EUR",
	description: "Brunello Cucinelli Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-11-02T12:00:15.054Z",
	startDayForMinuteCandles: "2020-11-02T12:00:00.000Z",
	startMonthForHourlyCandles: "2020-11-02T12:00:00.000Z",
	startYearForDailyCandles: "2020-11-02T00:00:00.000Z"
};
var bchusd = {
	name: "BCH/USD",
	description: "Bitcoin Cash vs US dollar",
	decimalFactor: 10,
	startHourForTicks: "2021-05-17T12:09:25.871Z",
	startDayForMinuteCandles: "2021-06-09T14:38:00.000Z",
	startMonthForHourlyCandles: "2021-06-09T15:00:00.000Z",
	startYearForDailyCandles: "2021-06-10T00:00:00.000Z"
};
var bdxususd = {
	name: "BDX.US/USD",
	description: "BECTON DICKINSON AND CO",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:41:01.409Z",
	startDayForMinuteCandles: "2018-01-31T16:40:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var beideeur = {
	name: "BEI.DE/EUR",
	description: "Beiersdorf AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-08T07:00:13.023Z",
	startDayForMinuteCandles: "2015-04-08T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var belgbeeur = {
	name: "BELG.BE/EUR",
	description: "Proximus",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:02:01.221Z",
	startDayForMinuteCandles: "2016-11-07T08:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var biduususd = {
	name: "BIDU.US/USD",
	description: "BAIDU INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.827Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var biibususd = {
	name: "BIIB.US/USD",
	description: "BIOGEN INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:07.519Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var birgieeur = {
	name: "BIRG.IE/EUR",
	description: "Bank Of Ireland Plc",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T07:00:00.217Z",
	startDayForMinuteCandles: "2020-06-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var bkususd = {
	name: "BK.US/USD",
	description: "BANK OF NEW YORK MELLON CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.374Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var blndgbgbx = {
	name: "BLND.GB/GBX",
	description: "British Land Co PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:26.942Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var bltgbgbx = {
	name: "BLT.GB/GBX",
	description: "BHP Billiton PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:00.321Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var bmpsiteur = {
	name: "BMPS.IT/EUR",
	description: "Banca Monte dei Paschi di Siena Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:20:47.472Z",
	startDayForMinuteCandles: "2020-12-17T14:20:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var bmwdeeur = {
	name: "BMW.DE/EUR",
	description: "Bayerische Motoren Werke AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-24T08:00:27.027Z",
	startDayForMinuteCandles: "2015-03-24T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var bmyususd = {
	name: "BMY.US/USD",
	description: "BRISTOL-MYERS SQUIBB CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:31:06.514Z",
	startDayForMinuteCandles: "2017-05-11T13:31:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var bnfreur = {
	name: "BN.FR/EUR",
	description: "Danone SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:23:42.399Z",
	startDayForMinuteCandles: "2016-09-30T09:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var bnpfreur = {
	name: "BNP.FR/EUR",
	description: "BNP Paribas SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:23:42.196Z",
	startDayForMinuteCandles: "2016-09-30T09:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var bnzlgbgbx = {
	name: "BNZL.GB/GBX",
	description: "Bunzl PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:26.502Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var bossdeeur = {
	name: "BOSS.DE/EUR",
	description: "HUGO BOSS AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-09T07:02:07.157Z",
	startDayForMinuteCandles: "2015-04-09T07:02:00.000Z",
	startMonthForHourlyCandles: "2012-06-18T07:00:00.000Z",
	startYearForDailyCandles: "2012-06-18T00:00:00.000Z"
};
var bpgbgbx = {
	name: "BP.GB/GBX",
	description: "BP PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-06T07:00:11.431Z",
	startDayForMinuteCandles: "2016-09-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var bpususd = {
	name: "BP.US/USD",
	description: "BP p.l.c.",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:45:44.596Z",
	startDayForMinuteCandles: "2018-01-31T16:45:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var bpeiteur = {
	name: "BPE.IT/EUR",
	description: "Bper Banca Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:19:03.931Z",
	startDayForMinuteCandles: "2020-12-17T14:19:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var brbygbgbx = {
	name: "BRBY.GB/GBX",
	description: "Burberry Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:48:38.593Z",
	startDayForMinuteCandles: "2016-07-08T14:48:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var breiteur = {
	name: "BRE.IT/EUR",
	description: "Brembo Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:20.627Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var brkbususd = {
	name: "BRKB.US/USD",
	description: "BERKSHIRE HATHAWAY INC-CL B",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-06T14:30:01.318Z",
	startDayForMinuteCandles: "2017-11-06T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-06T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-06T00:00:00.000Z"
};
var bsxususd = {
	name: "BSX.US/USD",
	description: "BOSTON SCIENTIFIC CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:08.946Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var btgbgbx = {
	name: "BT.GB/GBX",
	description: "BT Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:19:45.705Z",
	startDayForMinuteCandles: "2016-07-07T09:19:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var btcusd = {
	name: "BTC/USD",
	description: "Bitcoin vs US Dollar",
	decimalFactor: 10,
	startHourForTicks: "2017-05-07T23:59:59.058Z",
	startDayForMinuteCandles: "2017-05-07T23:59:00.000Z",
	startMonthForHourlyCandles: "2017-05-07T23:00:00.000Z",
	startYearForDailyCandles: "2017-05-07T00:00:00.000Z"
};
var bundtreur = {
	name: "BUND.TR/EUR",
	description: "Euro Bund",
	decimalFactor: 1000,
	startHourForTicks: "2016-05-02T06:01:02.736Z",
	startDayForMinuteCandles: "2016-05-02T06:01:00.000Z",
	startMonthForHourlyCandles: "2016-05-02T06:00:00.000Z",
	startYearForDailyCandles: "2016-05-02T00:00:00.000Z"
};
var bzuiteur = {
	name: "BZU.IT/EUR",
	description: "Buzzi Unicem Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:14.533Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var cususd = {
	name: "C.US/USD",
	description: "CITIGROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.589Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var cafreur = {
	name: "CA.FR/EUR",
	description: "Carrefour SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.937Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var cabkeseur = {
	name: "CABK.ES/EUR",
	description: "CaixaBank",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:16.354Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-07-01T07:00:00.000Z",
	startYearForDailyCandles: "2011-07-01T00:00:00.000Z"
};
var cadchf = {
	name: "CAD/CHF",
	description: "Canadian Dollar vs Swiss Franc",
	decimalFactor: 100000,
	startHourForTicks: "2006-01-02T22:38:05.365Z",
	startDayForMinuteCandles: "2006-01-02T22:38:00.000Z",
	startMonthForHourlyCandles: "2006-01-02T22:00:00.000Z",
	startYearForDailyCandles: "1991-11-22T00:00:00.000Z"
};
var cadhkd = {
	name: "CAD/HKD",
	description: "Canadian Dollar vs Hong Kong Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T05:44:28.143Z",
	startDayForMinuteCandles: "2007-03-13T05:44:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T05:00:00.000Z",
	startYearForDailyCandles: "1999-06-16T00:00:00.000Z"
};
var cadjpy = {
	name: "CAD/JPY",
	description: "Canadian Dollar vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2004-10-25T00:01:01.974Z",
	startDayForMinuteCandles: "2004-10-25T00:01:00.000Z",
	startMonthForHourlyCandles: "2004-10-25T00:00:00.000Z",
	startYearForDailyCandles: "1993-02-23T00:00:00.000Z"
};
var cagususd = {
	name: "CAG.US/USD",
	description: "CONAGRA FOODS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:46:49.372Z",
	startDayForMinuteCandles: "2018-01-31T16:46:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var cahususd = {
	name: "CAH.US/USD",
	description: "CARDINAL HEALTH INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:47:57.384Z",
	startDayForMinuteCandles: "2018-01-31T16:47:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var capfreur = {
	name: "CAP.FR/EUR",
	description: "Cap Gemini SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.534Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var carlbdkdkk = {
	name: "CARLB.DK/DKK",
	description: "Carlsberg A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T08:00:03.065Z",
	startDayForMinuteCandles: "2016-11-08T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var cassiteur = {
	name: "CASS.IT/EUR",
	description: "Cattolica Ass Coop A",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:20:47.514Z",
	startDayForMinuteCandles: "2020-12-17T14:17:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var catususd = {
	name: "CAT.US/USD",
	description: "CATERPILLAR INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.283Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var cbkdeeur = {
	name: "CBK.DE/EUR",
	description: "Commerzbank AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-26T08:00:16.027Z",
	startDayForMinuteCandles: "2015-03-26T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var cclgbgbx = {
	name: "CCL.GB/GBX",
	description: "Carnival PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:08:16.948Z",
	startDayForMinuteCandles: "2016-07-06T07:08:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var cernususd = {
	name: "CERN.US/USD",
	description: "CERNER CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-05-18T13:30:00.043Z",
	startDayForMinuteCandles: "2018-05-18T13:30:00.000Z",
	startMonthForHourlyCandles: "2018-05-18T13:00:00.000Z",
	startYearForDailyCandles: "2018-05-18T00:00:00.000Z"
};
var cerviteur = {
	name: "CERV.IT/EUR",
	description: "Cerved Information Solutions SPA",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:19:52.321Z",
	startDayForMinuteCandles: "2020-12-17T14:19:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var cfususd = {
	name: "CF.US/USD",
	description: "CF INDUSTRIES HOLDINGS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T16:49:59.027Z",
	startDayForMinuteCandles: "2018-01-31T16:49:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T16:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var chfjpy = {
	name: "CHF/JPY",
	description: "Swiss Franc vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2003-08-03T21:00:14.329Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1990-12-03T00:00:00.000Z"
};
var chfsgd = {
	name: "CHF/SGD",
	description: "Swiss Franc vs Singapore Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2007-06-04T09:31:10.450Z",
	startDayForMinuteCandles: "2007-06-04T09:31:00.000Z",
	startMonthForHourlyCandles: "2007-06-04T09:00:00.000Z",
	startYearForDailyCandles: "1998-04-29T00:00:00.000Z"
};
var chiidxusd = {
	name: "CHI.IDX/USD",
	description: "China A50 Index",
	decimalFactor: 1000,
	startHourForTicks: "2017-07-17T19:30:02.600Z",
	startDayForMinuteCandles: "2017-07-17T19:30:00.000Z",
	startMonthForHourlyCandles: "2017-07-17T19:00:00.000Z",
	startYearForDailyCandles: "2017-07-17T00:00:00.000Z"
};
var ciususd = {
	name: "CI.US/USD",
	description: "CIGNA CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:06.241Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var clususd = {
	name: "CL.US/USD",
	description: "COLGATE-PALMOLIVE CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:56:31.162Z",
	startDayForMinuteCandles: "2017-11-02T13:56:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var clnchchf = {
	name: "CLN.CH/CHF",
	description: "Clariant AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:51.006Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var cmcsaususd = {
	name: "CMCSA.US/USD",
	description: "COMCAST CORP-CLASS A",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.604Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var cmeususd = {
	name: "CME.US/USD",
	description: "CME GROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:08.751Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var cmgususd = {
	name: "CMG.US/USD",
	description: "CHIPOTLE MEXICAN GRILL INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.614Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var cmiususd = {
	name: "CMI.US/USD",
	description: "CUMMINS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:34:59.066Z",
	startDayForMinuteCandles: "2018-02-01T14:34:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var cnagbgbx = {
	name: "CNA.GB/GBX",
	description: "Centrica PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:19:47.034Z",
	startDayForMinuteCandles: "2016-07-07T09:19:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var cocoacmdusd = {
	name: "COCOA.CMD/USD",
	description: "NY Cocoa",
	decimalFactor: 1000,
	startHourForTicks: "2017-10-20T08:45:00.010Z",
	startDayForMinuteCandles: "2017-10-20T08:45:00.000Z",
	startMonthForHourlyCandles: "2017-10-20T08:00:00.000Z",
	startYearForDailyCandles: "2017-10-20T00:00:00.000Z"
};
var cofususd = {
	name: "COF.US/USD",
	description: "CAPITAL ONE FINANCIAL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-05-18T13:30:02.145Z",
	startDayForMinuteCandles: "2018-05-18T13:30:00.000Z",
	startMonthForHourlyCandles: "2018-05-18T13:00:00.000Z",
	startYearForDailyCandles: "2018-05-18T00:00:00.000Z"
};
var coffeecmdusx = {
	name: "COFFEE.CMD/USX",
	description: "Coffee Arabica",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-04T09:15:00.003Z",
	startDayForMinuteCandles: "2017-12-04T09:15:00.000Z",
	startMonthForHourlyCandles: "2017-12-04T10:00:00.000Z",
	startYearForDailyCandles: "2017-12-04T00:00:00.000Z"
};
var colobdkdkk = {
	name: "COLOB.DK/DKK",
	description: "Coloplast A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T08:00:04.171Z",
	startDayForMinuteCandles: "2016-11-08T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var condeeur = {
	name: "CON.DE/EUR",
	description: "Continental AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-08T07:00:27.003Z",
	startDayForMinuteCandles: "2015-04-08T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var copususd = {
	name: "COP.US/USD",
	description: "CONOCOPHILLIPS",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:57:41.436Z",
	startDayForMinuteCandles: "2017-11-02T13:57:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var coppercmdusd = {
	name: "COPPER.CMD/USD",
	description: "High Grade Copper",
	decimalFactor: 10000,
	startHourForTicks: "2012-03-02T00:00:07.445Z",
	startDayForMinuteCandles: "2012-03-02T00:00:00.000Z",
	startMonthForHourlyCandles: "2012-03-02T00:00:00.000Z",
	startYearForDailyCandles: "2012-03-02T00:00:00.000Z"
};
var costususd = {
	name: "COST.US/USD",
	description: "COSTCO WHOLESALE CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.352Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var cottoncmdusx = {
	name: "COTTON.CMD/USX",
	description: "Cotton",
	decimalFactor: 1000,
	startHourForTicks: "2017-10-20T08:44:16.204Z",
	startDayForMinuteCandles: "2017-10-20T08:44:00.000Z",
	startMonthForHourlyCandles: "2017-10-20T08:00:00.000Z",
	startYearForDailyCandles: "2017-10-20T00:00:00.000Z"
};
var cpggbgbx = {
	name: "CPG.GB/GBX",
	description: "Compass Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:48:50.716Z",
	startDayForMinuteCandles: "2016-07-08T14:48:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var cpigbgbx = {
	name: "CPI.GB/GBX",
	description: "Capita PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:19:50.707Z",
	startDayForMinuteCandles: "2016-07-07T09:19:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var cpriteur = {
	name: "CPR.IT/EUR",
	description: "Davide Campari-Milano Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:00.286Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var crdagbgbx = {
	name: "CRDA.GB/GBX",
	description: "Croda International PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-01T10:17:55.985Z",
	startDayForMinuteCandles: "2016-11-01T10:17:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var crgieeur = {
	name: "CRG.IE/EUR",
	description: "CRH Plc",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-01T07:00:00.835Z",
	startDayForMinuteCandles: "2020-10-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-10-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var crhgbgbx = {
	name: "CRH.GB/GBX",
	description: "CRH PLC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-05T08:02:03.422Z",
	startDayForMinuteCandles: "2017-01-05T08:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var crmususd = {
	name: "CRM.US/USD",
	description: "SALESFORCE.COM INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:14.053Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var csfreur = {
	name: "CS.FR/EUR",
	description: "AXA SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.836Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var csususd = {
	name: "CS.US/USD",
	description: "Credit Suisse Group AG",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.720Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var cscoususd = {
	name: "CSCO.US/USD",
	description: "CISCO SYSTEMS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.331Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var csgnchchf = {
	name: "CSGN.CH/CHF",
	description: "Credit Suisse Group AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:50.140Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var csxususd = {
	name: "CSX.US/USD",
	description: "CSX CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:58:24.427Z",
	startDayForMinuteCandles: "2017-11-02T13:58:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var ctlususd = {
	name: "CTL.US/USD",
	description: "CENTURYLINK INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:59:30.521Z",
	startDayForMinuteCandles: "2017-11-02T13:59:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var ctshususd = {
	name: "CTSH.US/USD",
	description: "COGNIZANT TECH SOLUTIONS-A",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.003Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var ctxsususd = {
	name: "CTXS.US/USD",
	description: "CITRIX SYSTEMS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-05-18T13:30:00.581Z",
	startDayForMinuteCandles: "2018-05-18T13:30:00.000Z",
	startMonthForHourlyCandles: "2018-05-18T13:00:00.000Z",
	startYearForDailyCandles: "2018-05-18T00:00:00.000Z"
};
var cvaliteur = {
	name: "CVAL.IT/EUR",
	description: "Credito Valtellinese Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:23:52.014Z",
	startDayForMinuteCandles: "2020-12-17T14:23:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var cvsususd = {
	name: "CVS.US/USD",
	description: "CVS HEALTH CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:04:03.485Z",
	startDayForMinuteCandles: "2017-11-02T14:04:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var cvxususd = {
	name: "CVX.US/USD",
	description: "CHEVRON CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.325Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var dususd = {
	name: "D.US/USD",
	description: "DOMINION RESOURCES INC/VA",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:00.201Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var daideeur = {
	name: "DAI.DE/EUR",
	description: "Daimler AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-27T08:02:31.058Z",
	startDayForMinuteCandles: "2015-03-27T08:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var dalususd = {
	name: "DAL.US/USD",
	description: "DELTA AIR LINES INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:04:58.001Z",
	startDayForMinuteCandles: "2017-11-02T14:04:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var daniteur = {
	name: "DAN.IT/EUR",
	description: "Danieli & Co Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:30:04.702Z",
	startDayForMinuteCandles: "2020-12-17T14:17:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var danskedkdkk = {
	name: "DANSKE.DK/DKK",
	description: "Danske Bank A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T13:51:41.538Z",
	startDayForMinuteCandles: "2016-11-08T13:51:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var db1deeur = {
	name: "DB1.DE/EUR",
	description: "Deutsche Boerse AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-14T07:00:18.058Z",
	startDayForMinuteCandles: "2015-04-14T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var dbkdeeur = {
	name: "DBK.DE/EUR",
	description: "Deutsche Bank AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-25T08:00:29.080Z",
	startDayForMinuteCandles: "2015-03-25T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var deususd = {
	name: "DE.US/USD",
	description: "DEERE & CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.353Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var dfsususd = {
	name: "DFS.US/USD",
	description: "DISCOVER FINANCIAL SERVICES",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:02.676Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var dgfreur = {
	name: "DG.FR/EUR",
	description: "Vinci SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:14.172Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var dgususd = {
	name: "DG.US/USD",
	description: "DOLLAR GENERAL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.807Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var dgegbgbx = {
	name: "DGE.GB/GBX",
	description: "Diageo PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:08:09.402Z",
	startDayForMinuteCandles: "2016-07-06T07:08:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var dhiususd = {
	name: "DHI.US/USD",
	description: "DR HORTON INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:01.588Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var dhrususd = {
	name: "DHR.US/USD",
	description: "DANAHER CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:05:55.155Z",
	startDayForMinuteCandles: "2017-11-02T14:05:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var diaeseur = {
	name: "DIA.ES/EUR",
	description: "Distribuidora Internacional de Alimentacion SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:03.549Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-07-05T10:00:00.000Z",
	startYearForDailyCandles: "2011-07-05T00:00:00.000Z"
};
var diaiteur = {
	name: "DIA.IT/EUR",
	description: "Diasorin Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:15.006Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var diaususd = {
	name: "DIA.US/USD",
	description: "SPDR Dow Jones® Industrial Average ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:01.725Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var dieselcmdusd = {
	name: "DIESEL.CMD/USD",
	description: "Gas oil",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-26T01:00:00.031Z",
	startDayForMinuteCandles: "2017-12-26T01:00:00.000Z",
	startMonthForHourlyCandles: "2017-12-26T01:00:00.000Z",
	startYearForDailyCandles: "2017-12-26T00:00:00.000Z"
};
var disususd = {
	name: "DIS.US/USD",
	description: "WALT DISNEY CO/THE",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.437Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var dltrususd = {
	name: "DLTR.US/USD",
	description: "DOLLAR TREE INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.003Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var dnbnonok = {
	name: "DNB.NO/NOK",
	description: "DNB ASA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:25:59.015Z",
	startDayForMinuteCandles: "2016-11-14T11:25:00.000Z",
	startMonthForHourlyCandles: "2011-11-15T08:00:00.000Z",
	startYearForDailyCandles: "2011-11-15T00:00:00.000Z"
};
var dollaridxusd = {
	name: "DOLLAR.IDX/USD",
	description: "US Dollar Index",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-01T01:00:00.435Z",
	startDayForMinuteCandles: "2017-12-01T01:00:00.000Z",
	startMonthForHourlyCandles: "2017-12-01T00:00:00.000Z",
	startYearForDailyCandles: "2017-12-01T00:00:00.000Z"
};
var dpwdeeur = {
	name: "DPW.DE/EUR",
	description: "Deutsche Post AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-31T07:00:24.221Z",
	startDayForMinuteCandles: "2015-03-31T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var dsbfreur = {
	name: "DSB.FR/EUR",
	description: "LYXOR ETF Daily X2 Short Bund",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-22T07:00:00.220Z",
	startDayForMinuteCandles: "2020-09-22T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-09-22T07:00:00.000Z",
	startYearForDailyCandles: "2020-09-22T00:00:00.000Z"
};
var dshusd = {
	name: "DSH/USD",
	description: "Dashcoin vs US Dollar",
	decimalFactor: 1000,
	startHourForTicks: "2019-08-04T22:00:17.191Z",
	startDayForMinuteCandles: "2019-08-04T22:00:00.000Z",
	startMonthForHourlyCandles: "2019-08-04T22:00:00.000Z",
	startYearForDailyCandles: "2019-08-04T00:00:00.000Z"
};
var dsmnleur = {
	name: "DSM.NL/EUR",
	description: "Koninklijke DSM NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.223Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var dtedeeur = {
	name: "DTE.DE/EUR",
	description: "Deutsche Telekom AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-31T07:00:30.000Z",
	startDayForMinuteCandles: "2015-03-31T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var dukeur = {
	name: "DUK+/EUR",
	description: "Dukascoin vs Euro",
	decimalFactor: 100,
	startHourForTicks: "2019-02-28T13:14:06.000Z",
	startDayForMinuteCandles: "2019-02-28T13:14:00.000Z",
	startMonthForHourlyCandles: "2019-02-28T13:00:00.000Z",
	startYearForDailyCandles: "2019-02-28T00:00:00.000Z"
};
var dukususd = {
	name: "DUK.US/USD",
	description: "DUKE ENERGY CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:08.946Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var dvaususd = {
	name: "DVA.US/USD",
	description: "DAVITA HEALTHCARE PARTNERS I",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:02.978Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var dvnususd = {
	name: "DVN.US/USD",
	description: "DEVON ENERGY CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:10.488Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var dvyususd = {
	name: "DVY.US/USD",
	description: "iShares Select Dividend ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:13.852Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var eaususd = {
	name: "EA.US/USD",
	description: "ELECTRONIC ARTS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.805Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var ebayususd = {
	name: "EBAY.US/USD",
	description: "EBAY INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.049Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var ebsateur = {
	name: "EBS.AT/EUR",
	description: "Erste Group Bank AG",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-15T08:27:59.759Z",
	startDayForMinuteCandles: "2016-11-15T08:27:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var edffreur = {
	name: "EDF.FR/EUR",
	description: "Electricite de France SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:25.470Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var edppteur = {
	name: "EDP.PT/EUR",
	description: "EDP - Energias de Portugal SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T15:55:01.825Z",
	startDayForMinuteCandles: "2016-11-14T15:55:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var eemususd = {
	name: "EEM.US/USD",
	description: "iShares MSCI Emerging Markets ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.122Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var efaususd = {
	name: "EFA.US/USD",
	description: "iShares MSCI EAFE ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.327Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var efxususd = {
	name: "EFX.US/USD",
	description: "EQUIFAX INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:08:24.010Z",
	startDayForMinuteCandles: "2017-11-02T14:08:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var eixususd = {
	name: "EIX.US/USD",
	description: "EDISON INTERNATIONAL",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:00.206Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var elususd = {
	name: "EL.US/USD",
	description: "ESTEE LAUDER COMPANIES-CL A",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:04.606Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var eleeseur = {
	name: "ELE.ES/EUR",
	description: "Endesa SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:18.461Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var eli1vfieur = {
	name: "ELI1V.FI/EUR",
	description: "Elisa OYJ",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-03T08:00:04.659Z",
	startDayForMinuteCandles: "2016-11-03T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var eluxbsesek = {
	name: "ELUXB.SE/SEK",
	description: "Electrolux AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:01.177Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var embususd = {
	name: "EMB.US/USD",
	description: "iShares J.P. Morgan USD Emerging Markets Bond ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:07.469Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var emrususd = {
	name: "EMR.US/USD",
	description: "EMERSON ELECTRIC CO",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:02.979Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var enfreur = {
	name: "EN.FR/EUR",
	description: "Bouygues SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.230Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var eneliteur = {
	name: "ENEL.IT/EUR",
	description: "Enel SpA",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:14.578Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var engeseur = {
	name: "ENG.ES/EUR",
	description: "Enagas SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:13.650Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var engifreur = {
	name: "ENGI.FR/EUR",
	description: "Engie",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.164Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2015-07-31T07:00:00.000Z",
	startYearForDailyCandles: "2015-07-31T00:00:00.000Z"
};
var eniiteur = {
	name: "ENI.IT/EUR",
	description: "ENI Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:11.570Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var eoandeeur = {
	name: "EOAN.DE/EUR",
	description: "E.ON SE",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-20T07:00:28.095Z",
	startDayForMinuteCandles: "2015-04-20T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var eogususd = {
	name: "EOG.US/USD",
	description: "EOG RESOURCES INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:09:26.907Z",
	startDayForMinuteCandles: "2017-11-02T14:09:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var eosusd = {
	name: "EOS/USD",
	description: "EOS vs US Dollar",
	decimalFactor: 10000,
	startHourForTicks: "2019-08-04T22:00:17.191Z",
	startDayForMinuteCandles: "2019-08-04T22:00:00.000Z",
	startMonthForHourlyCandles: "2019-08-04T22:00:00.000Z",
	startYearForDailyCandles: "2019-08-04T00:00:00.000Z"
};
var eqtususd = {
	name: "EQT.US/USD",
	description: "EQT CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:11:45.118Z",
	startDayForMinuteCandles: "2017-11-02T14:11:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var ergiteur = {
	name: "ERG.IT/EUR",
	description: "ERG Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:19:15.126Z",
	startDayForMinuteCandles: "2020-12-17T14:19:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var ericbsesek = {
	name: "ERICB.SE/SEK",
	description: "Telefonaktiebolaget LM Ericsson",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T16:09:02.210Z",
	startDayForMinuteCandles: "2016-11-14T16:09:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ethusd = {
	name: "ETH/USD",
	description: "Ether vs US Dollar",
	decimalFactor: 10,
	startHourForTicks: "2017-12-11T23:51:21.218Z",
	startDayForMinuteCandles: "2017-12-11T23:51:00.000Z",
	startMonthForHourlyCandles: "2017-12-11T23:00:00.000Z",
	startYearForDailyCandles: "2017-12-11T00:00:00.000Z"
};
var euraud = {
	name: "EUR/AUD",
	description: "Euro vs Australian Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2005-10-07T05:54:01.827Z",
	startDayForMinuteCandles: "2005-10-07T05:54:00.000Z",
	startMonthForHourlyCandles: "2005-10-07T05:00:00.000Z",
	startYearForDailyCandles: "1991-10-09T00:00:00.000Z"
};
var eurcad = {
	name: "EUR/CAD",
	description: "Euro vs Canadian Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2004-10-25T00:00:05.846Z",
	startDayForMinuteCandles: "2004-10-25T00:00:00.000Z",
	startMonthForHourlyCandles: "2004-10-25T00:00:00.000Z",
	startYearForDailyCandles: "1991-10-09T00:00:00.000Z"
};
var eurchf = {
	name: "EUR/CHF",
	description: "Euro vs Swiss Franc",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-03T21:00:00.609Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1991-01-14T00:00:00.000Z"
};
var eurczk = {
	name: "EUR/CZK",
	description: "Euro vs Czech Koruna",
	decimalFactor: 10000,
	startHourForTicks: "2016-01-03T23:00:39.923Z",
	startDayForMinuteCandles: "2017-01-02T00:00:00.000Z",
	startMonthForHourlyCandles: "2017-01-02T00:00:00.000Z",
	startYearForDailyCandles: "2017-01-02T00:00:00.000Z"
};
var eurdkk = {
	name: "EUR/DKK",
	description: "Euro vs Danish Krone",
	decimalFactor: 100000,
	startHourForTicks: "2004-10-25T00:33:06.743Z",
	startDayForMinuteCandles: "2004-10-25T00:33:00.000Z",
	startMonthForHourlyCandles: "2004-10-25T00:00:00.000Z",
	startYearForDailyCandles: "1993-02-26T00:00:00.000Z"
};
var eurgbp = {
	name: "EUR/GBP",
	description: "Euro vs Pound Sterling",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-03T21:00:00.158Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1995-04-14T00:00:00.000Z"
};
var eurhkd = {
	name: "EUR/HKD",
	description: "Euro vs Hong Kong Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T04:52:10.251Z",
	startDayForMinuteCandles: "2007-03-13T04:52:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1999-06-03T00:00:00.000Z"
};
var eurhuf = {
	name: "EUR/HUF",
	description: "Euro vs Hungarian Forint",
	decimalFactor: 1000,
	startHourForTicks: "2007-03-14T06:13:37.708Z",
	startDayForMinuteCandles: "2007-03-13T08:03:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T08:00:00.000Z",
	startYearForDailyCandles: "1999-06-30T00:00:00.000Z"
};
var eurjpy = {
	name: "EUR/JPY",
	description: "Euro vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2003-08-03T21:00:01.007Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1989-06-28T00:00:00.000Z"
};
var eurnok = {
	name: "EUR/NOK",
	description: "Euro vs Norwegian Krone",
	decimalFactor: 100000,
	startHourForTicks: "2004-10-25T00:18:08.311Z",
	startDayForMinuteCandles: "2004-10-25T00:18:00.000Z",
	startMonthForHourlyCandles: "2004-10-25T00:00:00.000Z",
	startYearForDailyCandles: "1991-06-03T00:00:00.000Z"
};
var eurnzd = {
	name: "EUR/NZD",
	description: "Euro vs New Zealand Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2006-01-02T22:38:22.520Z",
	startDayForMinuteCandles: "2006-01-02T22:38:00.000Z",
	startMonthForHourlyCandles: "2006-01-02T22:00:00.000Z",
	startYearForDailyCandles: "1999-01-05T00:00:00.000Z"
};
var eurpln = {
	name: "EUR/PLN",
	description: "Euro vs Polish Zloty",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-14T00:00:03.095Z",
	startDayForMinuteCandles: "2007-03-13T04:45:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1999-06-03T00:00:00.000Z"
};
var eurrub = {
	name: "EUR/RUB",
	description: "Euro vs Russian Rouble",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T07:00:04.066Z",
	startDayForMinuteCandles: "2007-03-13T07:00:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T07:00:00.000Z",
	startYearForDailyCandles: "1999-06-03T00:00:00.000Z"
};
var eursek = {
	name: "EUR/SEK",
	description: "Euro vs Swedish Krona",
	decimalFactor: 100000,
	startHourForTicks: "2004-10-27T17:16:02.596Z",
	startDayForMinuteCandles: "2004-10-27T17:16:00.000Z",
	startMonthForHourlyCandles: "2004-10-27T17:00:00.000Z",
	startYearForDailyCandles: "1992-11-20T00:00:00.000Z"
};
var eursgd = {
	name: "EUR/SGD",
	description: "Euro vs Singapore Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T04:42:05.186Z",
	startDayForMinuteCandles: "2007-03-13T04:42:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1998-04-29T00:00:00.000Z"
};
var eurtry = {
	name: "EUR/TRY",
	description: "Euro vs Turkish Lira",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T04:54:03.245Z",
	startDayForMinuteCandles: "2007-03-13T04:54:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "2005-01-03T00:00:00.000Z"
};
var eurusd = {
	name: "EUR/USD",
	description: "Euro vs US Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2003-05-04T21:00:00.914Z",
	startDayForMinuteCandles: "2003-05-04T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-05-04T21:00:00.000Z",
	startYearForDailyCandles: "1973-03-01T00:00:00.000Z"
};
var ewhususd = {
	name: "EWH.US/USD",
	description: "iShares MSCI Hong Kong ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-06T14:30:01.544Z",
	startDayForMinuteCandles: "2017-11-06T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-06T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-06T00:00:00.000Z"
};
var ewjususd = {
	name: "EWJ.US/USD",
	description: "iShares MSCI Japan ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.203Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var ewwususd = {
	name: "EWW.US/USD",
	description: "iShares MSCI Mexico Capped",
	decimalFactor: 1000,
	startHourForTicks: "2017-03-13T14:25:17.008Z",
	startDayForMinuteCandles: "2017-03-13T14:25:00.000Z",
	startMonthForHourlyCandles: "2017-03-13T14:00:00.000Z",
	startYearForDailyCandles: "2017-03-13T00:00:00.000Z"
};
var ewzususd = {
	name: "EWZ.US/USD",
	description: "iShares MSCI Brazil Capped",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.601Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var excususd = {
	name: "EXC.US/USD",
	description: "EXELON CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:00.085Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var expeususd = {
	name: "EXPE.US/USD",
	description: "EXPEDIA INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.078Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var expngbgbx = {
	name: "EXPN.GB/GBX",
	description: "Experian PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:49:01.779Z",
	startDayForMinuteCandles: "2016-07-08T14:49:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var ezjgbgbx = {
	name: "EZJ.GB/GBX",
	description: "easyJet PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:49:03.589Z",
	startDayForMinuteCandles: "2016-07-08T14:49:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var ezuususd = {
	name: "EZU.US/USD",
	description: "iShares MSCI EMU ETF",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:00.090Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var brentcmdusd = {
	name: "BRENT.CMD/USD",
	description: "US Brent Crude Oil",
	decimalFactor: 1000,
	startHourForTicks: "2010-12-02T01:00:33.111Z",
	startDayForMinuteCandles: "2010-12-02T01:00:00.000Z",
	startMonthForHourlyCandles: "2010-12-02T01:00:00.000Z",
	startYearForDailyCandles: "2006-11-17T00:00:00.000Z"
};
var fraidxeur = {
	name: "FRA.IDX/EUR",
	description: "France 40 Index",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-01T17:15:34.496Z",
	startDayForMinuteCandles: "2011-09-19T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-09-19T07:00:00.000Z",
	startYearForDailyCandles: "1987-12-31T00:00:00.000Z"
};
var usa30idxusd = {
	name: "USA30.IDX/USD",
	description: "USA 30 Index",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-01T05:44:03.104Z",
	startDayForMinuteCandles: "2013-09-30T13:34:00.000Z",
	startMonthForHourlyCandles: "2013-09-30T13:00:00.000Z",
	startYearForDailyCandles: "2013-09-30T00:00:00.000Z"
};
var deuidxeur = {
	name: "DEU.IDX/EUR",
	description: "Germany 30 Index",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-01T05:44:03.103Z",
	startDayForMinuteCandles: "2013-09-30T15:13:00.000Z",
	startMonthForHourlyCandles: "2013-09-30T14:00:00.000Z",
	startYearForDailyCandles: "2013-09-30T00:00:00.000Z"
};
var eusidxeur = {
	name: "EUS.IDX/EUR",
	description: "Europe 50 Index",
	decimalFactor: 1000,
	startHourForTicks: "2014-06-02T06:00:57.299Z",
	startDayForMinuteCandles: "2014-06-02T06:00:00.000Z",
	startMonthForHourlyCandles: "2014-06-02T06:00:00.000Z",
	startYearForDailyCandles: "2014-06-02T00:00:00.000Z"
};
var gbridxgbp = {
	name: "GBR.IDX/GBP",
	description: "UK 100 Index",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-01T03:51:37.835Z",
	startDayForMinuteCandles: "2011-09-19T02:06:00.000Z",
	startMonthForHourlyCandles: "2011-09-18T21:00:00.000Z",
	startYearForDailyCandles: "1988-04-05T00:00:00.000Z"
};
var hkgidxhkd = {
	name: "HKG.IDX/HKD",
	description: "Hong Kong 40 Index",
	decimalFactor: 1000,
	startHourForTicks: "2013-06-03T01:15:21.916Z",
	startDayForMinuteCandles: "2013-06-03T01:15:00.000Z",
	startMonthForHourlyCandles: "2013-06-03T01:00:00.000Z",
	startYearForDailyCandles: "2013-06-03T00:00:00.000Z"
};
var espidxeur = {
	name: "ESP.IDX/EUR",
	description: "Spain 35 Index",
	decimalFactor: 1000,
	startHourForTicks: "2014-06-02T07:01:09.603Z",
	startDayForMinuteCandles: "2014-06-02T07:01:00.000Z",
	startMonthForHourlyCandles: "2014-06-02T07:00:00.000Z",
	startYearForDailyCandles: "2014-06-02T00:00:00.000Z"
};
var lightcmdusd = {
	name: "LIGHT.CMD/USD",
	description: "US Light Crude Oil",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-01T05:44:02.453Z",
	startDayForMinuteCandles: "2011-09-23T07:09:00.000Z",
	startMonthForHourlyCandles: "2011-09-23T07:00:00.000Z",
	startYearForDailyCandles: "1983-04-20T00:00:00.000Z"
};
var jpnidxjpy = {
	name: "JPN.IDX/JPY",
	description: "Japan 225",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-01T05:44:03.106Z",
	startDayForMinuteCandles: "2011-09-19T02:06:00.000Z",
	startMonthForHourlyCandles: "2011-09-18T21:00:00.000Z",
	startYearForDailyCandles: "1986-09-04T00:00:00.000Z"
};
var usatechidxusd = {
	name: "USATECH.IDX/USD",
	description: "USA 100 Technical Index",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-01T05:44:03.105Z",
	startDayForMinuteCandles: "2011-09-19T13:30:00.000Z",
	startMonthForHourlyCandles: "2011-09-18T21:00:00.000Z",
	startYearForDailyCandles: "1990-11-07T00:00:00.000Z"
};
var usa500idxusd = {
	name: "USA500.IDX/USD",
	description: "USA 500 Index",
	decimalFactor: 1000,
	startHourForTicks: "2012-01-16T00:00:07.771Z",
	startDayForMinuteCandles: "2011-09-19T06:31:00.000Z",
	startMonthForHourlyCandles: "2011-09-18T21:00:00.000Z",
	startYearForDailyCandles: "1980-01-02T00:00:00.000Z"
};
var cheidxchf = {
	name: "CHE.IDX/CHF",
	description: "Switzerland 20 Index",
	decimalFactor: 1000,
	startHourForTicks: "2013-01-03T08:02:00.257Z",
	startDayForMinuteCandles: "2011-09-19T07:02:00.000Z",
	startMonthForHourlyCandles: "2011-09-19T07:00:00.000Z",
	startYearForDailyCandles: "1992-01-03T00:00:00.000Z"
};
var ausidxaud = {
	name: "AUS.IDX/AUD",
	description: "Australia 200 Index",
	decimalFactor: 1000,
	startHourForTicks: "2014-06-01T23:50:09.337Z",
	startDayForMinuteCandles: "2014-06-01T23:50:00.000Z",
	startMonthForHourlyCandles: "2014-06-01T23:00:00.000Z",
	startYearForDailyCandles: "2014-06-01T00:00:00.000Z"
};
var fususd = {
	name: "F.US/USD",
	description: "FORD MOTOR CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:13:09.640Z",
	startDayForMinuteCandles: "2017-11-02T14:13:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var fbususd = {
	name: "FB.US/USD",
	description: "FACEBOOK INC-A",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.438Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var fbkiteur = {
	name: "FBK.IT/EUR",
	description: "FinecoBank Banca Fineco Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:18.795Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var fcaiteur = {
	name: "FCA.IT/EUR",
	description: "Fiat Chrysler Auto NV",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:14.077Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var fcxususd = {
	name: "FCX.US/USD",
	description: "FREEPORT-MCMORAN INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:13:48.101Z",
	startDayForMinuteCandles: "2017-11-02T14:13:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var fdxususd = {
	name: "FDX.US/USD",
	description: "FEDEX CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:14:46.085Z",
	startDayForMinuteCandles: "2017-11-02T14:14:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var feususd = {
	name: "FE.US/USD",
	description: "FIRSTENERGY CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:04.189Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var fereseur = {
	name: "FER.ES/EUR",
	description: "Ferrovial SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:12.349Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var fitbususd = {
	name: "FITB.US/USD",
	description: "FIFTH THIRD BANCORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T15:28:01.534Z",
	startDayForMinuteCandles: "2018-01-31T15:28:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T15:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var fmedeeur = {
	name: "FME.DE/EUR",
	description: "Fresenius Medical Care AG & Co KGaA",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-01T07:00:17.046Z",
	startDayForMinuteCandles: "2015-04-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var foxaususd = {
	name: "FOXA.US/USD",
	description: "TWENTY-FIRST CENTURY FOX-A",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-31T15:28:22.575Z",
	startDayForMinuteCandles: "2018-01-31T15:28:00.000Z",
	startMonthForHourlyCandles: "2018-01-31T15:00:00.000Z",
	startYearForDailyCandles: "2018-01-31T00:00:00.000Z"
};
var fpfreur = {
	name: "FP.FR/EUR",
	description: "Total SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.129Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var frfreur = {
	name: "FR.FR/EUR",
	description: "Valeo SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.280Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var fredeeur = {
	name: "FRE.DE/EUR",
	description: "Fresenius SE & Co KGaA",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-10T07:00:25.112Z",
	startDayForMinuteCandles: "2015-04-10T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var fresgbgbx = {
	name: "FRES.GB/GBX",
	description: "Fresnillo PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:18.962Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var fxiususd = {
	name: "FXI.US/USD",
	description: "iShares China Large-Cap ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.323Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var giteur = {
	name: "DLG.IT/EUR",
	description: "Assicurazioni Generali Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:17:44.284Z",
	startDayForMinuteCandles: "2020-12-17T14:17:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var galppteur = {
	name: "GALP.PT/EUR",
	description: "Galp Energia SGPS SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T15:55:01.009Z",
	startDayForMinuteCandles: "2016-11-14T15:54:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var gameseur = {
	name: "GAM.ES/EUR",
	description: "Gamesa Corporacion Tecnologica SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:13.149Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var gascmdusd = {
	name: "GAS.CMD/USD",
	description: "Natural Gas",
	decimalFactor: 10000,
	startHourForTicks: "2012-09-02T22:02:33.889Z",
	startDayForMinuteCandles: "2012-09-02T22:02:00.000Z",
	startMonthForHourlyCandles: "2012-09-02T22:00:00.000Z",
	startYearForDailyCandles: "2012-09-02T00:00:00.000Z"
};
var gaseseur = {
	name: "GAS.ES/EUR",
	description: "Gas Natural SDG SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:15.989Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var gbpaud = {
	name: "GBP/AUD",
	description: "Pound Sterling vs Australian Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2006-03-22T00:00:08.802Z",
	startDayForMinuteCandles: "2006-03-22T00:00:00.000Z",
	startMonthForHourlyCandles: "2006-03-22T00:00:00.000Z",
	startYearForDailyCandles: "1991-01-30T00:00:00.000Z"
};
var gbpcad = {
	name: "GBP/CAD",
	description: "Pound Sterling vs Canadian Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2006-01-02T22:38:05.784Z",
	startDayForMinuteCandles: "2006-01-02T22:38:00.000Z",
	startMonthForHourlyCandles: "2006-01-02T22:00:00.000Z",
	startYearForDailyCandles: "1990-10-25T00:00:00.000Z"
};
var gbpchf = {
	name: "GBP/CHF",
	description: "Pound Sterling vs Swiss Franc",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-04T10:00:05.092Z",
	startDayForMinuteCandles: "2003-08-04T10:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-04T10:00:00.000Z",
	startYearForDailyCandles: "1990-09-06T00:00:00.000Z"
};
var gbpjpy = {
	name: "GBP/JPY",
	description: "Pound Sterling vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2003-08-03T21:00:00.015Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1991-01-02T00:00:00.000Z"
};
var gbpnzd = {
	name: "GBP/NZD",
	description: "Pound Sterling vs New Zealand Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2006-01-02T22:38:05.298Z",
	startDayForMinuteCandles: "2006-01-02T22:38:00.000Z",
	startMonthForHourlyCandles: "2006-01-02T22:00:00.000Z",
	startYearForDailyCandles: "1997-01-20T00:00:00.000Z"
};
var gbpusd = {
	name: "GBP/USD",
	description: "Pound Sterling vs US Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2003-05-04T21:00:00.773Z",
	startDayForMinuteCandles: "2003-05-04T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-05-04T20:00:00.000Z",
	startYearForDailyCandles: "1986-02-10T00:00:00.000Z"
};
var gdxususd = {
	name: "GDX.US/USD",
	description: "VanEck Vectors Gold Miners ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.219Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var gdxjususd = {
	name: "GDXJ.US/USD",
	description: "VanEck Vectors Junior Gold Miners ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.437Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var geususd = {
	name: "GE.US/USD",
	description: "GENERAL ELECTRIC CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.829Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var getibsesek = {
	name: "GETIB.SE/SEK",
	description: "Getinge AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:05.356Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var gfsgbgbx = {
	name: "GFS.GB/GBX",
	description: "G4S PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:10.705Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var gildususd = {
	name: "GILD.US/USD",
	description: "GILEAD SCIENCES INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.327Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var gisususd = {
	name: "GIS.US/USD",
	description: "GENERAL MILLS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:09.496Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var givnchchf = {
	name: "GIVN.CH/CHF",
	description: "Givaudan SA",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:50.223Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var gldususd = {
	name: "GLD.US/USD",
	description: "SPDR Gold Shares ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.329Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var glefreur = {
	name: "GLE.FR/EUR",
	description: "Societe Generale SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:10.845Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var glengbgbx = {
	name: "GLEN.GB/GBX",
	description: "Glencore PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:44:38.924Z",
	startDayForMinuteCandles: "2016-07-07T09:44:00.000Z",
	startMonthForHourlyCandles: "2011-05-19T08:00:00.000Z",
	startYearForDailyCandles: "2011-05-19T00:00:00.000Z"
};
var glwususd = {
	name: "GLW.US/USD",
	description: "CORNING INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:47.470Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var gmususd = {
	name: "GM.US/USD",
	description: "GENERAL MOTORS CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:16:22.646Z",
	startDayForMinuteCandles: "2017-11-02T14:16:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var googususd = {
	name: "GOOG.US/USD",
	description: "ALPHABET INC-CL C",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.581Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var googlususd = {
	name: "GOOGL.US/USD",
	description: "ALPHABET INC-CL A",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.580Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var gpsususd = {
	name: "GPS.US/USD",
	description: "GAP INC/THE",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:24.147Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var gsususd = {
	name: "GS.US/USD",
	description: "GOLDMAN SACHS GROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.327Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var gskgbgbx = {
	name: "GSK.GB/GBX",
	description: "GlaxoSmithKline PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:00:45.442Z",
	startDayForMinuteCandles: "2016-07-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var gwwususd = {
	name: "GWW.US/USD",
	description: "WW GRAINGER INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:31:12.310Z",
	startDayForMinuteCandles: "2018-02-01T14:31:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var halususd = {
	name: "HAL.US/USD",
	description: "HALLIBURTON CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:18:18.095Z",
	startDayForMinuteCandles: "2017-11-02T14:18:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var hcnususd = {
	name: "HCN.US/USD",
	description: "WELLTOWER INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:00.204Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var hdususd = {
	name: "HD.US/USD",
	description: "HOME DEPOT INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.325Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var heideeur = {
	name: "HEI.DE/EUR",
	description: "HeidelbergCement AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-02T07:00:30.229Z",
	startDayForMinuteCandles: "2015-04-02T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var heianleur = {
	name: "HEIA.NL/EUR",
	description: "Heineken NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:14.502Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var hen3deeur = {
	name: "HEN3.DE/EUR",
	description: "Henkel AG & Co KGaA",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-21T07:00:12.128Z",
	startDayForMinuteCandles: "2015-04-21T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var hesususd = {
	name: "HES.US/USD",
	description: "HESS CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:50:59.066Z",
	startDayForMinuteCandles: "2017-11-02T14:50:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var hkdjpy = {
	name: "HKD/JPY",
	description: "Hong Kong Dollar vs Japanese Yen",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T04:30:00.096Z",
	startDayForMinuteCandles: "2007-03-13T04:30:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1998-11-04T00:00:00.000Z"
};
var hmbsesek = {
	name: "HMB.SE/SEK",
	description: "Hennes & Mauritz AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:34.373Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var hmsogbgbx = {
	name: "HMSO.GB/GBX",
	description: "Hammerson PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:09.823Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var honususd = {
	name: "HON.US/USD",
	description: "HONEYWELL INTERNATIONAL INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:52:10.585Z",
	startDayForMinuteCandles: "2017-11-02T14:52:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var hpqususd = {
	name: "HPQ.US/USD",
	description: "HP INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:10.611Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var hsbagbgbx = {
	name: "HSBA.GB/GBX",
	description: "HSBC Holdings PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:08.454Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var humususd = {
	name: "HUM.US/USD",
	description: "HUMANA INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:53:32.729Z",
	startDayForMinuteCandles: "2017-11-02T14:53:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var iaggbgbx = {
	name: "IAG.GB/GBX",
	description: "International Consolidated Airlines Grou",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T13:50:55.229Z",
	startDayForMinuteCandles: "2016-11-08T13:50:00.000Z",
	startMonthForHourlyCandles: "2011-01-24T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-24T00:00:00.000Z"
};
var ibbususd = {
	name: "IBB.US/USD",
	description: "iShares Nasdaq Biotechnology ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.981Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var ibeeseur = {
	name: "IBE.ES/EUR",
	description: "Iberdrola SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:15.653Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ibmususd = {
	name: "IBM.US/USD",
	description: "INTL BUSINESS MACHINES CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.437Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var iceususd = {
	name: "ICE.US/USD",
	description: "INTERCONTINENTAL EXCHANGE IN",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-06T14:30:02.181Z",
	startDayForMinuteCandles: "2017-11-06T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-06T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-06T00:00:00.000Z"
};
var iefususd = {
	name: "IEF.US/USD",
	description: "iShares 7-10 Year Treasury Bond ETF",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:00.422Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var ifxdeeur = {
	name: "IFX.DE/EUR",
	description: "Infineon Technologies AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-13T07:00:12.186Z",
	startDayForMinuteCandles: "2015-04-13T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var igiteur = {
	name: "IG.IT/EUR",
	description: "Italgas Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:19:04.636Z",
	startDayForMinuteCandles: "2020-12-17T14:19:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var ihggbgbx = {
	name: "IHG.GB/GBX",
	description: "InterContinental Hotels Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-01T08:37:29.422Z",
	startDayForMinuteCandles: "2016-11-01T08:37:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var ijhususd = {
	name: "IJH.US/USD",
	description: "iShares Core S&P Mid-Cap ETF",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:00.063Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var ijrususd = {
	name: "IJR.US/USD",
	description: "iShares Core S&P Small-Cap ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:04.642Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var ilmnususd = {
	name: "ILMN.US/USD",
	description: "ILLUMINA INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:03.855Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var imtgbgbx = {
	name: "IMT.GB/GBX",
	description: "Imperial Brands Plc",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:03:22.722Z",
	startDayForMinuteCandles: "2016-07-06T07:03:00.000Z",
	startMonthForHourlyCandles: "2016-02-08T08:00:00.000Z",
	startYearForDailyCandles: "2016-02-08T00:00:00.000Z"
};
var indidxusd = {
	name: "IND.IDX/USD",
	description: "India 50 Index",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-01T02:36:15.307Z",
	startDayForMinuteCandles: "2017-12-01T02:36:00.000Z",
	startMonthForHourlyCandles: "2017-12-01T02:00:00.000Z",
	startYearForDailyCandles: "2017-12-01T00:00:00.000Z"
};
var inganleur = {
	name: "INGA.NL/EUR",
	description: "ING Groep NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.672Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2016-07-22T07:00:00.000Z",
	startYearForDailyCandles: "2016-07-22T00:00:00.000Z"
};
var intcususd = {
	name: "INTC.US/USD",
	description: "INTEL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.438Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var intuususd = {
	name: "INTU.US/USD",
	description: "INTUIT INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:01.401Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var invebsesek = {
	name: "INVEB.SE/SEK",
	description: "Investor AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T16:09:08.695Z",
	startDayForMinuteCandles: "2016-11-14T16:09:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var inwiteur = {
	name: "INW.IT/EUR",
	description: "Infrastrutture Wireless Italiane Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:17:54.367Z",
	startDayForMinuteCandles: "2020-12-17T14:17:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var ipgususd = {
	name: "IPG.US/USD",
	description: "INTERPUBLIC GROUP OF COS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:12.733Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var ispiteur = {
	name: "ISP.IT/EUR",
	description: "Intesa Sanpaolo Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:00.173Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var isrgususd = {
	name: "ISRG.US/USD",
	description: "INTUITIVE SURGICAL INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:31.999Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var itrkgbgbx = {
	name: "ITRK.GB/GBX",
	description: "Intertek Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:14:52.125Z",
	startDayForMinuteCandles: "2016-07-06T07:14:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var itubususd = {
	name: "ITUB.US/USD",
	description: "Itau Unibanco Holding S.A.",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.318Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var itvgbgbx = {
	name: "ITV.GB/GBX",
	description: "ITV PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:45.708Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var itwususd = {
	name: "ITW.US/USD",
	description: "ILLINOIS TOOL WORKS",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.551Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var itxeseur = {
	name: "ITX.ES/EUR",
	description: "Inditex SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:13.750Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var iveususd = {
	name: "IVE.US/USD",
	description: "iShares S&P 500 Value ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.806Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var ivwususd = {
	name: "IVW.US/USD",
	description: "iShares S&P 500 Growth ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:06.635Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var iwdususd = {
	name: "IWD.US/USD",
	description: "iShares Russell 1000 Value ETF",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:09.288Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var iwfususd = {
	name: "IWF.US/USD",
	description: "iShares Russell 1000 Growth ETF",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:09.295Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var iwmususd = {
	name: "IWM.US/USD",
	description: "iShares Russell 2000 ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:00.116Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var iyrususd = {
	name: "IYR.US/USD",
	description: "iShares U.S. Real Estate ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.437Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var jciususd = {
	name: "JCI.US/USD",
	description: "JOHNSON CONTROLS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:54:23.594Z",
	startDayForMinuteCandles: "2017-11-02T14:54:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var jnjususd = {
	name: "JNJ.US/USD",
	description: "JOHNSON & JOHNSON",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.137Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var jnkususd = {
	name: "JNK.US/USD",
	description: "SPDR Barclays Capital High Yield Bond ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:00.117Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var jpmususd = {
	name: "JPM.US/USD",
	description: "JPMORGAN CHASE & CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.636Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var juveiteur = {
	name: "JUVE.IT/EUR",
	description: "Juventus Football Club Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:22.516Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var jwnususd = {
	name: "JWN.US/USD",
	description: "NORDSTROM INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:53.414Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var kususd = {
	name: "K.US/USD",
	description: "KELLOGG CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:15.645Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var kbcbeeur = {
	name: "KBC.BE/EUR",
	description: "KBC Groep NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:01.234Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var kerfreur = {
	name: "KER.FR/EUR",
	description: "Kering",
	decimalFactor: 1000,
	startHourForTicks: "2016-09-30T09:31:09.332Z",
	startDayForMinuteCandles: "2016-09-30T09:31:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var keyususd = {
	name: "KEY.US/USD",
	description: "KEYCORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:37:57.247Z",
	startDayForMinuteCandles: "2017-11-02T15:37:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var kgfgbgbx = {
	name: "KGF.GB/GBX",
	description: "Kingfisher PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:37.038Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var khcususd = {
	name: "KHC.US/USD",
	description: "KRAFT HEINZ CO/THE",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:09.831Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var kmbususd = {
	name: "KMB.US/USD",
	description: "KIMBERLY-CLARK CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.391Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var kmiususd = {
	name: "KMI.US/USD",
	description: "KINDER MORGAN INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:40:20.093Z",
	startDayForMinuteCandles: "2017-11-02T15:40:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var kninchchf = {
	name: "KNIN.CH/CHF",
	description: "Kuehne + Nagel International AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-17T07:01:14.023Z",
	startDayForMinuteCandles: "2015-06-17T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var koususd = {
	name: "KO.US/USD",
	description: "COCA-COLA CO/THE",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.437Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var kpnnleur = {
	name: "KPN.NL/EUR",
	description: "Koninklijke KPN NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:21.288Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var krususd = {
	name: "KR.US/USD",
	description: "KROGER CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:41:03.130Z",
	startDayForMinuteCandles: "2017-11-02T15:41:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var krxieeur = {
	name: "KRX.IE/EUR",
	description: "Kingspan Group Plc",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T07:00:01.239Z",
	startDayForMinuteCandles: "2020-06-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var krzieeur = {
	name: "KRZ.IE/EUR",
	description: "Kerry Group Plc",
	decimalFactor: 1000,
	startHourForTicks: "2020-06-01T07:00:01.175Z",
	startDayForMinuteCandles: "2020-06-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-06-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-06-01T00:00:00.000Z"
};
var kssususd = {
	name: "KSS.US/USD",
	description: "KOHLS CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:10.093Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var lususd = {
	name: "L.US/USD",
	description: "LOEWS CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:05.315Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var landgbgbx = {
	name: "LAND.GB/GBX",
	description: "Land Securities Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:55.706Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var ldoiteur = {
	name: "LDO.IT/EUR",
	description: "Leonardo Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:09.930Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var lenususd = {
	name: "LEN.US/USD",
	description: "LENNAR CORP-A",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:15.190Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var lgengbgbx = {
	name: "LGEN.GB/GBX",
	description: "Legal & General Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:20:45.708Z",
	startDayForMinuteCandles: "2016-07-07T09:20:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var lhadeeur = {
	name: "LHA.DE/EUR",
	description: "Deutsche Lufthansa AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-21T07:00:16.007Z",
	startDayForMinuteCandles: "2015-04-21T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var lhnchchf = {
	name: "LHN.CH/CHF",
	description: "Lafarge Holcim Ltd",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-17T07:01:14.016Z",
	startDayForMinuteCandles: "2015-06-17T07:01:00.000Z",
	startMonthForHourlyCandles: "2015-06-17T07:00:00.000Z",
	startYearForDailyCandles: "2015-06-17T00:00:00.000Z"
};
var lifreur = {
	name: "LI.FR/EUR",
	description: "Klepierre",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:00.927Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var lindeeur = {
	name: "LIN.DE/EUR",
	description: "Linde AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-21T07:00:04.108Z",
	startDayForMinuteCandles: "2015-04-21T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var lloygbgbx = {
	name: "LLOY.GB/GBX",
	description: "Lloyds Banking Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:50:03.598Z",
	startDayForMinuteCandles: "2016-07-08T14:50:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var llyususd = {
	name: "LLY.US/USD",
	description: "ELI LILLY & CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:31:11.536Z",
	startDayForMinuteCandles: "2017-05-11T13:31:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var lmtususd = {
	name: "LMT.US/USD",
	description: "LOCKHEED MARTIN CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:06.360Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var lonnchchf = {
	name: "LONN.CH/CHF",
	description: "Lonza Group AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:50.156Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var lowususd = {
	name: "LOW.US/USD",
	description: "LOWE'S COS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:41:42.185Z",
	startDayForMinuteCandles: "2017-11-02T15:41:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var lrfreur = {
	name: "LR.FR/EUR",
	description: "Legrand SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T14:50:11.216Z",
	startDayForMinuteCandles: "2016-08-05T14:50:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var lrcxususd = {
	name: "LRCX.US/USD",
	description: "LAM RESEARCH CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.810Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var lsegbgbx = {
	name: "LSE.GB/GBX",
	description: "London Stock Exchange Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:34:44.462Z",
	startDayForMinuteCandles: "2016-07-06T07:34:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var ltcusd = {
	name: "LTC/USD",
	description: "Litecoin vs US Dollar",
	decimalFactor: 10,
	startHourForTicks: "2018-09-03T00:00:00.500Z",
	startDayForMinuteCandles: "2018-09-03T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-03T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-03T00:00:00.000Z"
};
var luvususd = {
	name: "LUV.US/USD",
	description: "SOUTHWEST AIRLINES CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:43:21.067Z",
	startDayForMinuteCandles: "2017-11-02T15:43:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var lvcfreur = {
	name: "LVC.FR/EUR",
	description: "Lyxor ETF Leverage CAC 40",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-22T07:00:00.000Z",
	startDayForMinuteCandles: "2020-09-22T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-09-22T07:00:00.000Z",
	startYearForDailyCandles: "2020-09-22T00:00:00.000Z"
};
var lvsususd = {
	name: "LVS.US/USD",
	description: "Las Vegas Sands Corp.",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.585Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var lxsdeeur = {
	name: "LXS.DE/EUR",
	description: "Lanxess AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-21T07:00:13.046Z",
	startDayForMinuteCandles: "2015-04-21T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var lyxbnkfreur = {
	name: "LYXBNK.FR/EUR",
	description: "Lyxor UCITS ETF STOXX EUROPE 600 Banks",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-22T07:00:12.572Z",
	startDayForMinuteCandles: "2020-09-22T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-09-22T07:00:00.000Z",
	startYearForDailyCandles: "2020-09-22T00:00:00.000Z"
};
var mususd = {
	name: "M.US/USD",
	description: "MACY'S INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:44:11.976Z",
	startDayForMinuteCandles: "2017-11-02T15:44:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var maususd = {
	name: "MA.US/USD",
	description: "MASTERCARD INC-CLASS A",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:06.426Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var maerskbdkdkk = {
	name: "MAERSKB.DK/DKK",
	description: "AP Moeller - Maersk A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T14:36:37.318Z",
	startDayForMinuteCandles: "2016-11-08T14:36:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var marususd = {
	name: "MAR.US/USD",
	description: "MARRIOTT INTERNATIONAL -CL A",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.086Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var matususd = {
	name: "MAT.US/USD",
	description: "MATTEL INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:10.108Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var mbiteur = {
	name: "MB.IT/EUR",
	description: "Mediobanca Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:19:04.825Z",
	startDayForMinuteCandles: "2020-12-17T14:17:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var mcfreur = {
	name: "MC.FR/EUR",
	description: "LVMH Moet Hennessy Louis Vuitton SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:00.621Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var mcdususd = {
	name: "MCD.US/USD",
	description: "MCDONALD'S CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.334Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var mchpususd = {
	name: "MCHP.US/USD",
	description: "MICROCHIP TECHNOLOGY INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:30:09.599Z",
	startDayForMinuteCandles: "2018-02-01T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var mckususd = {
	name: "MCK.US/USD",
	description: "MCKESSON CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:45:32.074Z",
	startDayForMinuteCandles: "2017-11-02T15:45:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var mdlzususd = {
	name: "MDLZ.US/USD",
	description: "MONDELEZ INTERNATIONAL INC-A",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.092Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var metususd = {
	name: "MET.US/USD",
	description: "METLIFE INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:47:15.437Z",
	startDayForMinuteCandles: "2017-11-02T15:47:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var mgmususd = {
	name: "MGM.US/USD",
	description: "MGM RESORTS INTERNATIONAL",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T14:16:50.961Z",
	startDayForMinuteCandles: "2017-11-02T14:16:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var mhgnonok = {
	name: "MHG.NO/NOK",
	description: "Marine Harvest ASA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:26:00.898Z",
	startDayForMinuteCandles: "2016-11-14T11:26:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var mksgbgbx = {
	name: "MKS.GB/GBX",
	description: "Marks & Spencer Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:21:52.042Z",
	startDayForMinuteCandles: "2016-07-07T09:21:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var mmmususd = {
	name: "MMM.US/USD",
	description: "3M CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:32:14.712Z",
	startDayForMinuteCandles: "2017-05-11T13:32:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var mndigbgbx = {
	name: "MNDI.GB/GBX",
	description: "Mondi PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:50:16.087Z",
	startDayForMinuteCandles: "2016-07-08T14:50:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var moususd = {
	name: "MO.US/USD",
	description: "ALTRIA GROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:48:43.510Z",
	startDayForMinuteCandles: "2017-11-02T15:48:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var monciteur = {
	name: "MONC.IT/EUR",
	description: "Moncler Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:12.016Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var mpcususd = {
	name: "MPC.US/USD",
	description: "MARATHON PETROLEUM CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:40:50.923Z",
	startDayForMinuteCandles: "2018-02-01T14:40:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var mrkdeeur = {
	name: "MRK.DE/EUR",
	description: "Merck KGaA",
	decimalFactor: 1000,
	startHourForTicks: "2015-03-24T08:00:14.130Z",
	startDayForMinuteCandles: "2015-03-24T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var mrkususd = {
	name: "MRK.US/USD",
	description: "MERCK & CO. INC.",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:01.242Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var mrnaususd = {
	name: "MRNA.US/USD",
	description: "Moderna",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-01T13:30:00.004Z",
	startDayForMinuteCandles: "2020-10-01T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-10-01T14:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var mroususd = {
	name: "MRO.US/USD",
	description: "MARATHON OIL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:41:34.986Z",
	startDayForMinuteCandles: "2018-02-01T14:41:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var mrwgbgbx = {
	name: "MRW.GB/GBX",
	description: "WM Morrison Supermarkets PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:22:39.273Z",
	startDayForMinuteCandles: "2016-07-07T09:22:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var msiteur = {
	name: "MS.IT/EUR",
	description: "Mediaset Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:22:59.823Z",
	startDayForMinuteCandles: "2020-12-17T14:22:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var msususd = {
	name: "MS.US/USD",
	description: "MORGAN STANLEY",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:50:21.497Z",
	startDayForMinuteCandles: "2017-11-02T15:50:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var msftususd = {
	name: "MSFT.US/USD",
	description: "MICROSOFT CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.717Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var mtnleur = {
	name: "MT.NL/EUR",
	description: "ArcelorMittal",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.070Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var muususd = {
	name: "MU.US/USD",
	description: "MICRON TECHNOLOGY INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.026Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var muv2deeur = {
	name: "MUV2.DE/EUR",
	description: "Muenchener Rueckversicherungs AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-21T07:02:19.013Z",
	startDayForMinuteCandles: "2015-04-21T07:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ndasesek = {
	name: "NDA.SE/SEK",
	description: "Nordea Bank AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:06.017Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var neeususd = {
	name: "NEE.US/USD",
	description: "NEXTERA ENERGY INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:47:23.334Z",
	startDayForMinuteCandles: "2018-02-01T14:47:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var nemususd = {
	name: "NEM.US/USD",
	description: "NEWMONT MINING CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:15.223Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var nes1vfieur = {
	name: "NES1V.FI/EUR",
	description: "Neste OYJ",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-03T08:02:00.653Z",
	startDayForMinuteCandles: "2016-11-03T08:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var nesnchchf = {
	name: "NESN.CH/CHF",
	description: "Nestle SA",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:52.100Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var nflxususd = {
	name: "NFLX.US/USD",
	description: "NETFLIX INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.582Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var nggbgbx = {
	name: "NG.GB/GBX",
	description: "National Grid PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:21:30.382Z",
	startDayForMinuteCandles: "2016-07-07T09:21:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var nhynonok = {
	name: "NHY.NO/NOK",
	description: "Norsk Hydro ASA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:25:59.089Z",
	startDayForMinuteCandles: "2016-11-14T11:25:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var nioususd = {
	name: "NIO.US/USD",
	description: "Nio INC",
	decimalFactor: 1000,
	startHourForTicks: "2020-11-27T17:59:59.041Z",
	startDayForMinuteCandles: "2020-11-27T17:59:00.000Z",
	startMonthForHourlyCandles: "2020-11-27T17:00:00.000Z",
	startYearForDailyCandles: "2020-11-23T00:00:00.000Z"
};
var nkeususd = {
	name: "NKE.US/USD",
	description: "NIKE INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.809Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var nldidxeur = {
	name: "NLD.IDX/EUR",
	description: "Netherlands 25 Index",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-01T08:00:23.780Z",
	startDayForMinuteCandles: "2017-12-01T08:00:00.000Z",
	startMonthForHourlyCandles: "2017-12-01T08:00:00.000Z",
	startYearForDailyCandles: "2017-12-01T00:00:00.000Z"
};
var nocususd = {
	name: "NOC.US/USD",
	description: "NORTHROP GRUMMAN CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:31:47.575Z",
	startDayForMinuteCandles: "2017-05-11T13:31:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var novnchchf = {
	name: "NOVN.CH/CHF",
	description: "Novartis AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-16T07:01:51.059Z",
	startDayForMinuteCandles: "2015-06-16T07:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var novobdkdkk = {
	name: "NOVOB.DK/DKK",
	description: "Novo Nordisk A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T08:01:00.667Z",
	startDayForMinuteCandles: "2016-11-08T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var nre1vfieur = {
	name: "NRE1V.FI/EUR",
	description: "Nokian Renkaat OYJ",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-03T08:02:00.856Z",
	startDayForMinuteCandles: "2016-11-03T08:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var nrgususd = {
	name: "NRG.US/USD",
	description: "NRG ENERGY INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:48:29.100Z",
	startDayForMinuteCandles: "2018-02-01T14:47:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var nscususd = {
	name: "NSC.US/USD",
	description: "NORFOLK SOUTHERN CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:49:48.837Z",
	startDayForMinuteCandles: "2018-02-01T14:49:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var nvdaususd = {
	name: "NVDA.US/USD",
	description: "NVIDIA CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.603Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var nwlususd = {
	name: "NWL.US/USD",
	description: "NEWELL BRANDS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:52:26.541Z",
	startDayForMinuteCandles: "2017-11-02T15:52:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var nxtgbgbx = {
	name: "NXT.GB/GBX",
	description: "Next PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:00:20.632Z",
	startDayForMinuteCandles: "2016-07-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var nzdcad = {
	name: "NZD/CAD",
	description: "New Zealand Dollar vs Canadian Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2006-01-02T22:38:06.805Z",
	startDayForMinuteCandles: "2006-01-02T22:38:00.000Z",
	startMonthForHourlyCandles: "2006-01-02T22:00:00.000Z",
	startYearForDailyCandles: "2002-03-25T00:00:00.000Z"
};
var nzdchf = {
	name: "NZD/CHF",
	description: "New Zealand Dollar vs Swiss Franc",
	decimalFactor: 100000,
	startHourForTicks: "2006-01-02T22:38:04.259Z",
	startDayForMinuteCandles: "2006-01-02T22:38:00.000Z",
	startMonthForHourlyCandles: "2006-01-02T22:00:00.000Z",
	startYearForDailyCandles: "1999-01-07T00:00:00.000Z"
};
var nzdjpy = {
	name: "NZD/JPY",
	description: "New Zealand Dollar vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2006-01-02T22:39:04.109Z",
	startDayForMinuteCandles: "2006-01-02T22:39:00.000Z",
	startMonthForHourlyCandles: "2006-01-02T22:00:00.000Z",
	startYearForDailyCandles: "1998-10-01T00:00:00.000Z"
};
var nzdusd = {
	name: "NZD/USD",
	description: "New Zealand Dollar vs US Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-03T21:00:00.203Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1991-07-08T00:00:00.000Z"
};
var nzymbdkdkk = {
	name: "NZYMB.DK/DKK",
	description: "Novozymes A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T08:01:05.718Z",
	startDayForMinuteCandles: "2016-11-08T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ojuicecmdusx = {
	name: "OJUICE.CMD/USX",
	description: "Orange Juice",
	decimalFactor: 1000,
	startHourForTicks: "2017-10-20T12:00:00.245Z",
	startDayForMinuteCandles: "2017-10-20T12:00:00.000Z",
	startMonthForHourlyCandles: "2017-10-20T12:00:00.000Z",
	startYearForDailyCandles: "2017-10-20T00:00:00.000Z"
};
var okeususd = {
	name: "OKE.US/USD",
	description: "ONEOK INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:50:08.654Z",
	startDayForMinuteCandles: "2018-02-01T14:50:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var omcususd = {
	name: "OMC.US/USD",
	description: "OMNICOM GROUP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:50:50.441Z",
	startDayForMinuteCandles: "2018-02-01T14:50:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var orfreur = {
	name: "OR.FR/EUR",
	description: "L'Oreal SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:00.722Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var orafreur = {
	name: "ORA.FR/EUR",
	description: "Orange SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:01.126Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2013-07-01T07:00:00.000Z",
	startYearForDailyCandles: "2013-07-01T00:00:00.000Z"
};
var orclususd = {
	name: "ORCL.US/USD",
	description: "ORACLE CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:53:19.505Z",
	startDayForMinuteCandles: "2017-11-02T15:53:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var orknonok = {
	name: "ORK.NO/NOK",
	description: "Orkla ASA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:25:58.910Z",
	startDayForMinuteCandles: "2016-11-14T11:25:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var orlyususd = {
	name: "ORLY.US/USD",
	description: "O'REILLY AUTOMOTIVE INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.517Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var ote1vfieur = {
	name: "OTE1V.FI/EUR",
	description: "Outotec OYJ",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-03T08:00:01.431Z",
	startDayForMinuteCandles: "2016-11-03T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var out1vfieur = {
	name: "OUT1V.FI/EUR",
	description: "Outokumpu OYJ",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-03T08:03:24.813Z",
	startDayForMinuteCandles: "2016-11-03T08:03:00.000Z",
	startMonthForHourlyCandles: "2014-03-03T08:00:00.000Z",
	startYearForDailyCandles: "2014-03-03T00:00:00.000Z"
};
var oxyususd = {
	name: "OXY.US/USD",
	description: "OCCIDENTAL PETROLEUM CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-05-11T13:30:16.415Z",
	startDayForMinuteCandles: "2017-05-11T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-05-11T13:00:00.000Z",
	startYearForDailyCandles: "2017-05-11T00:00:00.000Z"
};
var pah3deeur = {
	name: "PAH3.DE/EUR",
	description: "Porsche Automobil Holding SE",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-21T07:02:08.110Z",
	startDayForMinuteCandles: "2015-04-21T07:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var payxususd = {
	name: "PAYX.US/USD",
	description: "PAYCHEX INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:50:48.897Z",
	startDayForMinuteCandles: "2018-02-01T14:50:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var pbrususd = {
	name: "PBR.US/USD",
	description: "Petroleo Brasileiro S.A.",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.224Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var pcarususd = {
	name: "PCAR.US/USD",
	description: "PACCAR INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:50:58.811Z",
	startDayForMinuteCandles: "2018-02-01T14:50:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var pcgususd = {
	name: "PCG.US/USD",
	description: "P G & E CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:54:09.664Z",
	startDayForMinuteCandles: "2017-11-02T15:54:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var pclnususd = {
	name: "PCLN.US/USD",
	description: "PRICELINE GROUP INC/THE",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:14.016Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var pepususd = {
	name: "PEP.US/USD",
	description: "PEPSICO INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:55:51.094Z",
	startDayForMinuteCandles: "2017-11-02T15:55:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var pfcgbgbx = {
	name: "PFC.GB/GBX",
	description: "Petrofac Ltd",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:50:28.912Z",
	startDayForMinuteCandles: "2016-07-08T14:50:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var pfeususd = {
	name: "PFE.US/USD",
	description: "PFIZER INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.582Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var pgususd = {
	name: "PG.US/USD",
	description: "PROCTER & GAMBLE CO/THE",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.599Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var pgrususd = {
	name: "PGR.US/USD",
	description: "PROGRESSIVE CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:52:03.790Z",
	startDayForMinuteCandles: "2018-02-01T14:51:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var phususd = {
	name: "PH.US/USD",
	description: "PARKER HANNIFIN CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:52:46.514Z",
	startDayForMinuteCandles: "2018-02-01T14:52:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var phianleur = {
	name: "PHIA.NL/EUR",
	description: "Koninklijke Philips NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-09T14:27:19.825Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var piaiteur = {
	name: "PIA.IT/EUR",
	description: "Piaggio & C. Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:15.006Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var plnidxpln = {
	name: "PLN.IDX/PLN",
	description: "Poland 20 Index",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-01T07:45:00.681Z",
	startDayForMinuteCandles: "2017-12-01T07:45:00.000Z",
	startMonthForHourlyCandles: "2017-12-01T07:00:00.000Z",
	startYearForDailyCandles: "2017-12-01T00:00:00.000Z"
};
var pltrususd = {
	name: "PLTR.US/USD",
	description: "Palantir Tech Inc A",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-05T17:59:59.109Z",
	startDayForMinuteCandles: "2020-10-05T17:59:00.000Z",
	startMonthForHourlyCandles: "2020-10-05T17:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var plugususd = {
	name: "PLUG.US/USD",
	description: "Plug Power Inc",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-02T13:30:00.000Z",
	startDayForMinuteCandles: "2020-10-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-10-02T14:00:00.000Z",
	startYearForDailyCandles: "2020-10-02T00:00:00.000Z"
};
var pmususd = {
	name: "PM.US/USD",
	description: "PHILIP MORRIS INTERNATIONAL",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:56:40.164Z",
	startDayForMinuteCandles: "2017-11-02T15:56:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var pncususd = {
	name: "PNC.US/USD",
	description: "PNC FINANCIAL SERVICES GROUP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:57:29.704Z",
	startDayForMinuteCandles: "2017-11-02T15:57:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var pndoradkdkk = {
	name: "PNDORA.DK/DKK",
	description: "Pandora A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T14:36:49.486Z",
	startDayForMinuteCandles: "2016-11-08T14:36:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ppgususd = {
	name: "PPG.US/USD",
	description: "PPG INDUSTRIES INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-02T14:30:14.637Z",
	startDayForMinuteCandles: "2018-02-02T14:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-02T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-02T00:00:00.000Z"
};
var prugbgbx = {
	name: "PRU.GB/GBX",
	description: "Prudential PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:21:12.039Z",
	startDayForMinuteCandles: "2016-07-07T09:21:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var pruususd = {
	name: "PRU.US/USD",
	description: "PRUDENTIAL FINANCIAL INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:57:44.189Z",
	startDayForMinuteCandles: "2018-02-01T14:57:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var pryiteur = {
	name: "PRY.IT/EUR",
	description: "Prysmian Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:00.215Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var psaususd = {
	name: "PSA.US/USD",
	description: "PUBLIC STORAGE",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:58:35.110Z",
	startDayForMinuteCandles: "2018-02-01T14:58:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var psmdeeur = {
	name: "PSM.DE/EUR",
	description: "ProSiebenSat.1 Media AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-20T07:02:21.048Z",
	startDayForMinuteCandles: "2015-04-20T07:02:00.000Z",
	startMonthForHourlyCandles: "2013-08-19T07:00:00.000Z",
	startYearForDailyCandles: "2013-08-19T00:00:00.000Z"
};
var psngbgbx = {
	name: "PSN.GB/GBX",
	description: "Persimmon PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:50:33.592Z",
	startDayForMinuteCandles: "2016-07-08T14:50:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var psongbgbx = {
	name: "PSON.GB/GBX",
	description: "Pearson PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:23:09.303Z",
	startDayForMinuteCandles: "2016-07-07T09:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var psxususd = {
	name: "PSX.US/USD",
	description: "PHILLIPS 66",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T14:59:08.293Z",
	startDayForMinuteCandles: "2018-02-01T14:59:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T14:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var ptonususd = {
	name: "PTON.US/USD",
	description: "Peloton Interactive Inc",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-01T13:30:00.000Z",
	startDayForMinuteCandles: "2020-10-01T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-10-01T14:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var pubfreur = {
	name: "PUB.FR/EUR",
	description: "Publicis Groupe SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:01.330Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var pxdususd = {
	name: "PXD.US/USD",
	description: "PIONEER NATURAL RESOURCES CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T15:58:40.516Z",
	startDayForMinuteCandles: "2017-11-02T15:58:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var pyplususd = {
	name: "PYPL.US/USD",
	description: "PAYPAL HOLDINGS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:00:27.120Z",
	startDayForMinuteCandles: "2017-11-02T16:00:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var qcomususd = {
	name: "QCOM.US/USD",
	description: "QUALCOMM INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.002Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var qqqususd = {
	name: "QQQ.US/USD",
	description: "PowerShares QQQ ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.228Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var raceiteur = {
	name: "RACE.IT/EUR",
	description: "Ferrari NV",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:05.906Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var randnleur = {
	name: "RAND.NL/EUR",
	description: "Randstad Holding NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:34.512Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var rbgbgbx = {
	name: "RB.GB/GBX",
	description: "Reckitt Benckiser Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:03:30.228Z",
	startDayForMinuteCandles: "2016-07-06T07:03:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var rbiateur = {
	name: "RBI.AT/EUR",
	description: "Raiffeisen Bank International AG",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-15T08:28:00.076Z",
	startDayForMinuteCandles: "2016-11-15T08:28:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var rbsgbgbx = {
	name: "RBS.GB/GBX",
	description: "Royal Bank of Scotland Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T11:42:35.340Z",
	startDayForMinuteCandles: "2016-07-08T11:42:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var rdsanleur = {
	name: "RDSA.NL/EUR",
	description: "Royal Dutch Shell PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.671Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var rdsbgbgbx = {
	name: "RDSB.GB/GBX",
	description: "Royal Dutch Shell PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-01T10:04:45.257Z",
	startDayForMinuteCandles: "2016-11-01T10:04:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var reciteur = {
	name: "REC.IT/EUR",
	description: "Recordati Industria Chimica e Farma Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:26.529Z",
	startDayForMinuteCandles: "2020-12-17T14:17:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var reeeseur = {
	name: "REE.ES/EUR",
	description: "Red Electrica Corp SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:34.088Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var regnususd = {
	name: "REGN.US/USD",
	description: "REGENERON PHARMACEUTICALS",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.823Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var relgbgbx = {
	name: "REL.GB/GBX",
	description: "Reed Elsevier PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:50:53.371Z",
	startDayForMinuteCandles: "2016-07-08T14:50:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var rennleur = {
	name: "REN.NL/EUR",
	description: "RELX NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.021Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2015-07-20T07:00:00.000Z",
	startYearForDailyCandles: "2015-07-20T00:00:00.000Z"
};
var repeseur = {
	name: "REP.ES/EUR",
	description: "Repsol SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:14.952Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var rfususd = {
	name: "RF.US/USD",
	description: "REGIONS FINANCIAL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:01:00.589Z",
	startDayForMinuteCandles: "2018-02-01T15:00:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var rifreur = {
	name: "RI.FR/EUR",
	description: "Pernod-Ricard SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:00.924Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var riogbgbx = {
	name: "RIO.GB/GBX",
	description: "Rio Tinto PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:08:00.342Z",
	startDayForMinuteCandles: "2016-07-06T07:08:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var rmggbgbx = {
	name: "RMG.GB/GBX",
	description: "Royal Mail PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:24:51.000Z",
	startDayForMinuteCandles: "2016-07-07T09:24:00.000Z",
	startMonthForHourlyCandles: "2013-10-11T08:00:00.000Z",
	startYearForDailyCandles: "2013-10-11T00:00:00.000Z"
};
var rnofreur = {
	name: "RNO.FR/EUR",
	description: "Renault SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-08T07:00:15.715Z",
	startDayForMinuteCandles: "2016-08-08T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var rogchchf = {
	name: "ROG.CH/CHF",
	description: "Roche Holding AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-07-03T07:00:16.063Z",
	startDayForMinuteCandles: "2015-07-03T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var rokuususd = {
	name: "ROKU.US/USD",
	description: "Roku Inc",
	decimalFactor: 1000,
	startHourForTicks: "2020-11-23T14:30:00.013Z",
	startDayForMinuteCandles: "2020-11-23T14:30:00.000Z",
	startMonthForHourlyCandles: "2020-11-23T15:00:00.000Z",
	startYearForDailyCandles: "2020-11-23T00:00:00.000Z"
};
var rostususd = {
	name: "ROST.US/USD",
	description: "ROSS STORES INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:19:13.389Z",
	startDayForMinuteCandles: "2018-02-01T15:19:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var rrgbgbx = {
	name: "RR.GB/GBX",
	description: "Rolls-Royce Holdings PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:51:03.596Z",
	startDayForMinuteCandles: "2016-07-08T14:51:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var rrcususd = {
	name: "RRC.US/USD",
	description: "RANGE RESOURCES CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:19:58.652Z",
	startDayForMinuteCandles: "2018-02-01T15:19:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var rsagbgbx = {
	name: "RSA.GB/GBX",
	description: "RSA Insurance Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:21:45.992Z",
	startDayForMinuteCandles: "2016-07-07T09:21:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var rwedeeur = {
	name: "RWE.DE/EUR",
	description: "RWE AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-16T07:00:22.010Z",
	startDayForMinuteCandles: "2015-04-16T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ry4cieeur = {
	name: "RY4C.IE/EUR",
	description: "Ryanair Holdings Plc",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-01T07:00:00.845Z",
	startDayForMinuteCandles: "2020-10-01T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-10-01T07:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var saffreur = {
	name: "SAF.FR/EUR",
	description: "Safran SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:05.268Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var saneseur = {
	name: "SAN.ES/EUR",
	description: "Banco Santander SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:12.749Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sanfreur = {
	name: "SAN.FR/EUR",
	description: "Sanofi",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:00.520Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sandsesek = {
	name: "SAND.SE/SEK",
	description: "Sandvik AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:02.610Z",
	startDayForMinuteCandles: "2016-11-08T08:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sapdeeur = {
	name: "SAP.DE/EUR",
	description: "SAP AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-16T07:00:26.013Z",
	startDayForMinuteCandles: "2015-04-16T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sbrygbgbx = {
	name: "SBRY.GB/GBX",
	description: "J Sainsbury PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:22:39.275Z",
	startDayForMinuteCandles: "2016-07-07T09:22:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var sbuxususd = {
	name: "SBUX.US/USD",
	description: "STARBUCKS CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.335Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var scabsesek = {
	name: "SCAB.SE/SEK",
	description: "Svenska Cellulosa AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:00.847Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var schwususd = {
	name: "SCHW.US/USD",
	description: "SCHWAB (CHARLES) CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:02:24.299Z",
	startDayForMinuteCandles: "2017-11-02T16:02:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var scmnchchf = {
	name: "SCMN.CH/CHF",
	description: "Swisscom AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-07-03T07:00:16.053Z",
	startDayForMinuteCandles: "2015-07-03T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sdfdeeur = {
	name: "SDF.DE/EUR",
	description: "K+S AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-15T07:00:08.089Z",
	startDayForMinuteCandles: "2015-04-15T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-08-08T07:00:00.000Z",
	startYearForDailyCandles: "2011-08-08T00:00:00.000Z"
};
var sebasesek = {
	name: "SEBA.SE/SEK",
	description: "Skandinaviska Enskilda Banken AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T16:09:02.218Z",
	startDayForMinuteCandles: "2016-11-14T16:09:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var secubsesek = {
	name: "SECUB.SE/SEK",
	description: "Securitas AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:21.856Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sferiteur = {
	name: "SFER.IT/EUR",
	description: "Salvat Ferragamo Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:20:56.484Z",
	startDayForMinuteCandles: "2020-12-17T14:20:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var sgdidxsgd = {
	name: "SGD.IDX/SGD",
	description: "Singapore Blue Chip Cash Index",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-01T00:58:48.384Z",
	startDayForMinuteCandles: "2017-12-01T00:58:00.000Z",
	startMonthForHourlyCandles: "2017-12-01T00:00:00.000Z",
	startYearForDailyCandles: "2017-12-01T00:00:00.000Z"
};
var sgdjpy = {
	name: "SGD/JPY",
	description: "Singapore Dollar vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2007-03-13T04:01:00.144Z",
	startDayForMinuteCandles: "2007-03-13T04:01:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1999-05-31T00:00:00.000Z"
};
var sgegbgbx = {
	name: "SGE.GB/GBX",
	description: "Sage Group PLC/The",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:51:23.596Z",
	startDayForMinuteCandles: "2016-07-08T14:51:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var sgofreur = {
	name: "SGO.FR/EUR",
	description: "Cie de St-Gobain",
	decimalFactor: 1000,
	startHourForTicks: "2016-10-31T09:47:37.180Z",
	startDayForMinuteCandles: "2016-10-31T09:47:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sgsnchchf = {
	name: "SGSN.CH/CHF",
	description: "SGS SA",
	decimalFactor: 1000,
	startHourForTicks: "2015-08-06T07:00:11.123Z",
	startDayForMinuteCandles: "2015-08-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var shwususd = {
	name: "SHW.US/USD",
	description: "SHERWIN-WILLIAMS COMPANY",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:21:33.991Z",
	startDayForMinuteCandles: "2018-02-01T15:21:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var siedeeur = {
	name: "SIE.DE/EUR",
	description: "Siemens AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-20T07:00:01.026Z",
	startDayForMinuteCandles: "2015-04-20T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sjmususd = {
	name: "SJM.US/USD",
	description: "JM SMUCKER COMPANY",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:26:16.448Z",
	startDayForMinuteCandles: "2018-02-01T15:26:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var skabsesek = {
	name: "SKAB.SE/SEK",
	description: "Skanska AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:21.306Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var skfbsesek = {
	name: "SKFB.SE/SEK",
	description: "SKF AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:00.959Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var skygbgbx = {
	name: "SKY.GB/GBP",
	description: "Sky Plc",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:22:29.817Z",
	startDayForMinuteCandles: "2016-07-07T09:22:00.000Z",
	startMonthForHourlyCandles: "2014-11-14T08:00:00.000Z",
	startYearForDailyCandles: "2014-11-14T00:00:00.000Z"
};
var slagbgbx = {
	name: "SLA.GB/GBX",
	description: "Standard Life Aberdeen Plc",
	decimalFactor: 1000,
	startHourForTicks: "2017-09-05T12:47:07.382Z",
	startDayForMinuteCandles: "2017-09-05T12:47:00.000Z",
	startMonthForHourlyCandles: "2017-09-05T12:00:00.000Z",
	startYearForDailyCandles: "2017-09-05T00:00:00.000Z"
};
var slhnchchf = {
	name: "SLHN.CH/CHF",
	description: "Swiss Life Holding AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-08-06T07:00:11.069Z",
	startDayForMinuteCandles: "2015-08-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var slvususd = {
	name: "SLV.US/USD",
	description: "iShares Silver Trust ETF",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:27:00.011Z",
	startDayForMinuteCandles: "2018-02-01T15:26:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var smingbgbx = {
	name: "SMIN.GB/GBX",
	description: "Smiths Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:51:38.466Z",
	startDayForMinuteCandles: "2016-07-08T14:51:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var sngbgbx = {
	name: "SN.GB/GBX",
	description: "Smith & Nephew PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:51:42.485Z",
	startDayForMinuteCandles: "2016-07-08T14:51:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var snapususd = {
	name: "SNAP.US/USD",
	description: "SNAP Inc",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:03:48.322Z",
	startDayForMinuteCandles: "2017-11-02T16:03:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var snowususd = {
	name: "SNOW.US/USD",
	description: "Snowflake Inc Class A",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-22T13:30:00.025Z",
	startDayForMinuteCandles: "2020-09-22T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-09-22T14:00:00.000Z",
	startYearForDailyCandles: "2020-09-22T00:00:00.000Z"
};
var soususd = {
	name: "SO.US/USD",
	description: "SOUTHERN CO/THE",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:04:52.403Z",
	startDayForMinuteCandles: "2017-11-02T16:04:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var solbbeeur = {
	name: "SOLB.BE/EUR",
	description: "Solvay SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:05.070Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var soonchchf = {
	name: "SOON.CH/CHF",
	description: "Sonova Holding AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-08-07T07:00:48.012Z",
	startDayForMinuteCandles: "2015-08-07T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var soybeancmdusx = {
	name: "SOYBEAN.CMD/USX",
	description: "Soybean",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-01T02:00:00.385Z",
	startDayForMinuteCandles: "2017-12-01T02:00:00.000Z",
	startMonthForHourlyCandles: "2017-12-01T02:00:00.000Z",
	startYearForDailyCandles: "2017-12-01T00:00:00.000Z"
};
var spgususd = {
	name: "SPG.US/USD",
	description: "SIMON PROPERTY GROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:05:47.400Z",
	startDayForMinuteCandles: "2017-11-02T16:05:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var spmiteur = {
	name: "SPM.IT/EUR",
	description: "SAIPEM Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:19:00.554Z",
	startDayForMinuteCandles: "2020-12-17T14:19:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var spyususd = {
	name: "SPY.US/USD",
	description: "SPDR S&P 500 ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-02-16T15:27:00.989Z",
	startDayForMinuteCandles: "2017-02-16T15:27:00.000Z",
	startMonthForHourlyCandles: "2017-02-16T15:00:00.000Z",
	startYearForDailyCandles: "2017-02-16T00:00:00.000Z"
};
var sqususd = {
	name: "SQ.US/USD",
	description: "Square Inc",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-23T17:59:59.850Z",
	startDayForMinuteCandles: "2020-10-23T17:59:00.000Z",
	startMonthForHourlyCandles: "2020-10-23T17:00:00.000Z",
	startYearForDailyCandles: "2020-10-23T00:00:00.000Z"
};
var srenchchf = {
	name: "SREN.CH/CHF",
	description: "Swiss Re AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-08-06T07:00:11.033Z",
	startDayForMinuteCandles: "2015-08-06T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-05-23T07:00:00.000Z",
	startYearForDailyCandles: "2011-05-23T00:00:00.000Z"
};
var srgiteur = {
	name: "SRG.IT/EUR",
	description: "Snam Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:19:04.306Z",
	startDayForMinuteCandles: "2020-12-17T14:17:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var srsiteur = {
	name: "SRS.IT/EUR",
	description: "Saras Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:20:02.647Z",
	startDayForMinuteCandles: "2020-12-17T14:20:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var ssegbgbx = {
	name: "SSE.GB/GBX",
	description: "SSE PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:51:48.490Z",
	startDayForMinuteCandles: "2016-07-08T14:51:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var stangbgbx = {
	name: "STAN.GB/GBX",
	description: "Standard Chartered PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:22:15.996Z",
	startDayForMinuteCandles: "2016-07-07T09:22:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var stervfieur = {
	name: "STERV.FI/EUR",
	description: "Stora Enso OYJ",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-03T08:00:03.652Z",
	startDayForMinuteCandles: "2016-11-03T08:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var stlnonok = {
	name: "STL.NO/NOK",
	description: "Statoil ASA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:25:59.308Z",
	startDayForMinuteCandles: "2016-11-14T11:25:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var stmiteur = {
	name: "STM.IT/EUR",
	description: "STMicroelectronics NV",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:18.961Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var sttususd = {
	name: "STT.US/USD",
	description: "STATE STREET CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:30:02.288Z",
	startDayForMinuteCandles: "2018-02-01T15:29:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var stzususd = {
	name: "STZ.US/USD",
	description: "CONSTELLATION BRANDS INC-A",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:30:22.485Z",
	startDayForMinuteCandles: "2018-02-01T15:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var sufreur = {
	name: "SU.FR/EUR",
	description: "Schneider Electric SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:01.733Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sugarcmdusd = {
	name: "SUGAR.CMD/USD",
	description: "London Sugar No.5",
	decimalFactor: 1000,
	startHourForTicks: "2017-10-02T07:45:00.134Z",
	startDayForMinuteCandles: "2017-10-02T07:45:00.000Z",
	startMonthForHourlyCandles: "2017-10-02T08:00:00.000Z",
	startYearForDailyCandles: "2017-10-02T00:00:00.000Z"
};
var svtgbgbx = {
	name: "SVT.GB/GBX",
	description: "Severn Trent PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:05:34.123Z",
	startDayForMinuteCandles: "2016-07-06T07:05:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var swedasesek = {
	name: "SWEDA.SE/SEK",
	description: "Swedbank AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:59.843Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var swkususd = {
	name: "SWK.US/USD",
	description: "STANLEY BLACK & DECKER INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:31:21.543Z",
	startDayForMinuteCandles: "2018-02-01T15:31:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var swmasesek = {
	name: "SWMA.SE/SEK",
	description: "Swedish Match AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:05.249Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var sykususd = {
	name: "SYK.US/USD",
	description: "STRYKER CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:32:00.272Z",
	startDayForMinuteCandles: "2018-02-01T15:32:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var syyususd = {
	name: "SYY.US/USD",
	description: "SYSCO CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:34:03.204Z",
	startDayForMinuteCandles: "2018-02-01T15:33:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var tususd = {
	name: "T.US/USD",
	description: "AT&T INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.438Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var tapususd = {
	name: "TAP.US/USD",
	description: "MOLSON COORS BREWING CO -B",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:34:19.515Z",
	startDayForMinuteCandles: "2018-02-01T15:34:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var tategbgbx = {
	name: "TATE.GB/GBX",
	description: "Tate & Lyle PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:51:53.691Z",
	startDayForMinuteCandles: "2016-07-08T14:51:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var tecdaxedeeur = {
	name: "TECDAXE.DE/EUR",
	description: "iShares TecDAX UCITS DE ETF",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-22T07:00:00.500Z",
	startDayForMinuteCandles: "2020-09-22T07:00:00.000Z",
	startMonthForHourlyCandles: "2020-09-22T06:00:00.000Z",
	startYearForDailyCandles: "2020-09-22T00:00:00.000Z"
};
var tefeseur = {
	name: "TEF.ES/EUR",
	description: "Telefonica SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:23:23.370Z",
	startDayForMinuteCandles: "2016-11-14T11:23:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var telnonok = {
	name: "TEL.NO/NOK",
	description: "Telenor ASA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:26:39.306Z",
	startDayForMinuteCandles: "2016-11-14T11:26:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var tel2bsesek = {
	name: "TEL2B.SE/SEK",
	description: "Tele2 AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:03.818Z",
	startDayForMinuteCandles: "2016-11-08T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var teniteur = {
	name: "TEN.IT/EUR",
	description: "Tenaris SA",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:18.227Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var tevaususd = {
	name: "TEVA.US/USD",
	description: "TEVA PHARMACEUTICAL-SP ADR",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:06:40.574Z",
	startDayForMinuteCandles: "2017-11-02T16:06:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var tgtususd = {
	name: "TGT.US/USD",
	description: "TARGET CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:17:00.244Z",
	startDayForMinuteCandles: "2017-11-02T16:17:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var tisiteur = {
	name: "TIS.IT/EUR",
	description: "Tiscali Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:30:05.024Z",
	startDayForMinuteCandles: "2020-12-17T14:30:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var tititeur = {
	name: "TIT.IT/EUR",
	description: "Telecom Italia Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:16.942Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var tjxususd = {
	name: "TJX.US/USD",
	description: "TJX COMPANIES INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:17:42.318Z",
	startDayForMinuteCandles: "2017-11-02T16:17:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var tkadeeur = {
	name: "TKA.DE/EUR",
	description: "ThyssenKrupp AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-14T07:00:06.230Z",
	startDayForMinuteCandles: "2015-04-14T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var tls1vfieur = {
	name: "TLS1V.FI/EUR",
	description: "Telia Company AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-09T09:14:30.145Z",
	startDayForMinuteCandles: "2016-11-09T09:14:00.000Z",
	startMonthForHourlyCandles: "2016-04-18T07:00:00.000Z",
	startYearForDailyCandles: "2016-04-18T00:00:00.000Z"
};
var tlsnsesek = {
	name: "TLSN.SE/SEK",
	description: "Telia Company AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T16:09:02.722Z",
	startDayForMinuteCandles: "2016-11-14T16:09:00.000Z",
	startMonthForHourlyCandles: "2016-04-18T07:00:00.000Z",
	startYearForDailyCandles: "2016-04-18T00:00:00.000Z"
};
var tltususd = {
	name: "TLT.US/USD",
	description: "iShares 20+ Year Treasury Bond ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:00.124Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var tlwgbgbx = {
	name: "TLW.GB/GBX",
	description: "Tullow Oil PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:22:26.108Z",
	startDayForMinuteCandles: "2016-07-07T09:22:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var tmoususd = {
	name: "TMO.US/USD",
	description: "THERMO FISHER SCIENTIFIC INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:18:32.510Z",
	startDayForMinuteCandles: "2017-11-02T16:18:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var toditeur = {
	name: "TOD.IT/EUR",
	description: "Tods Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:21:31.004Z",
	startDayForMinuteCandles: "2020-12-17T14:21:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var tpkgbgbx = {
	name: "TPK.GB/GBX",
	description: "Travis Perkins PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:52:02.999Z",
	startDayForMinuteCandles: "2016-07-08T14:52:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var trniteur = {
	name: "TRN.IT/EUR",
	description: "Terna Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:14.186Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var trowususd = {
	name: "TROW.US/USD",
	description: "T ROWE PRICE GROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:35:14.304Z",
	startDayForMinuteCandles: "2018-02-01T15:35:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var trvususd = {
	name: "TRV.US/USD",
	description: "TRAVELERS COS INC/THE",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.418Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var trxusd = {
	name: "TRX/USD",
	description: "TRON vs US Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2019-08-04T22:00:02.269Z",
	startDayForMinuteCandles: "2019-08-04T22:00:00.000Z",
	startMonthForHourlyCandles: "2019-08-04T22:00:00.000Z",
	startYearForDailyCandles: "2019-08-04T00:00:00.000Z"
};
var tryjpy = {
	name: "TRY/JPY",
	description: "Turkish Lira vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2010-05-09T21:43:33.000Z",
	startDayForMinuteCandles: "2010-05-09T21:43:00.000Z",
	startMonthForHourlyCandles: "2010-05-09T21:00:00.000Z",
	startYearForDailyCandles: "2010-05-09T00:00:00.000Z"
};
var tscogbgbx = {
	name: "TSCO.GB/GBX",
	description: "Tesco PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:52:03.507Z",
	startDayForMinuteCandles: "2016-07-08T14:52:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var tslaususd = {
	name: "TSLA.US/USD",
	description: "TESLA MOTORS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.332Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var tsmususd = {
	name: "TSM.US/USD",
	description: "Taiwan Semiconductor Manufacturing Company Limited",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:35:43.655Z",
	startDayForMinuteCandles: "2018-02-01T15:35:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var tsnususd = {
	name: "TSN.US/USD",
	description: "TYSON FOODS INC-CL A",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:37:00.907Z",
	startDayForMinuteCandles: "2018-02-01T15:36:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var tui1deeur = {
	name: "TUI1.DE/EUR",
	description: "TUI AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-15T07:02:21.055Z",
	startDayForMinuteCandles: "2015-04-15T07:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var twtrususd = {
	name: "TWTR.US/USD",
	description: "TWITTER INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:19:20.639Z",
	startDayForMinuteCandles: "2017-11-02T16:19:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var txnususd = {
	name: "TXN.US/USD",
	description: "TEXAS INSTRUMENTS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T13:30:00.095Z",
	startDayForMinuteCandles: "2017-11-02T13:30:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T13:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var uberususd = {
	name: "UBER.US/USD",
	description: "Uber Inc",
	decimalFactor: 1000,
	startHourForTicks: "2020-10-01T13:30:00.018Z",
	startDayForMinuteCandles: "2020-10-01T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-10-01T14:00:00.000Z",
	startYearForDailyCandles: "2020-10-01T00:00:00.000Z"
};
var ubsgchchf = {
	name: "UBSG.CH/CHF",
	description: "UBS Group AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-06-15T07:00:43.072Z",
	startDayForMinuteCandles: "2015-06-15T07:00:00.000Z",
	startMonthForHourlyCandles: "2014-11-28T08:00:00.000Z",
	startYearForDailyCandles: "2014-11-28T00:00:00.000Z"
};
var ucbbeeur = {
	name: "UCB.BE/EUR",
	description: "UCB SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:58.189Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ucgiteur = {
	name: "UCG.IT/EUR",
	description: "UniCredit Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:08.949Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var ugfreur = {
	name: "UG.FR/EUR",
	description: "Peugeot SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:02.035Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var uhrchchf = {
	name: "UHR.CH/CHF",
	description: "Swatch Group AG/The",
	decimalFactor: 1000,
	startHourForTicks: "2015-08-07T03:45:00.598Z",
	startDayForMinuteCandles: "2015-08-07T03:45:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var ukgilttrgbp = {
	name: "UKGILT.TR/GBP",
	description: "UK Long Gilt",
	decimalFactor: 1000,
	startHourForTicks: "2017-12-28T16:18:15.332Z",
	startDayForMinuteCandles: "2017-12-28T16:18:00.000Z",
	startMonthForHourlyCandles: "2017-12-28T16:00:00.000Z",
	startYearForDailyCandles: "2017-12-26T00:00:00.000Z"
};
var ultaususd = {
	name: "ULTA.US/USD",
	description: "ULTA SALON COSMETICS & FRAGR",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:20:40.094Z",
	startDayForMinuteCandles: "2017-11-02T16:20:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var ulvrgbgbx = {
	name: "ULVR.GB/GBX",
	description: "Unilever PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:02:51.642Z",
	startDayForMinuteCandles: "2016-07-06T07:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var umibeeur = {
	name: "UMI.BE/EUR",
	description: "Umicore SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:02.346Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var unanleur = {
	name: "UNA.NL/EUR",
	description: "Unilever NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.069Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var unhususd = {
	name: "UNH.US/USD",
	description: "UNITEDHEALTH GROUP INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-02T16:21:11.460Z",
	startDayForMinuteCandles: "2017-11-02T16:21:00.000Z",
	startMonthForHourlyCandles: "2017-11-02T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-02T00:00:00.000Z"
};
var unpususd = {
	name: "UNP.US/USD",
	description: "UNION PACIFIC CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T14:57:28.070Z",
	startDayForMinuteCandles: "2017-11-15T14:57:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T14:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var upsususd = {
	name: "UPS.US/USD",
	description: "UNITED PARCEL SERVICE-CL B",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:22:15.996Z",
	startDayForMinuteCandles: "2017-11-15T15:22:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var usiteur = {
	name: "US.IT/EUR",
	description: "Unipolsai Assicurazioni Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:22:52.607Z",
	startDayForMinuteCandles: "2020-12-17T14:22:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var usbususd = {
	name: "USB.US/USD",
	description: "US BANCORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:22:56.332Z",
	startDayForMinuteCandles: "2017-11-15T15:22:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var usdcad = {
	name: "USD/CAD",
	description: "US Dollar vs Canadian Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-03T21:00:01.482Z",
	startDayForMinuteCandles: "2003-08-03T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1986-02-10T00:00:00.000Z"
};
var usdchf = {
	name: "USD/CHF",
	description: "US Dollar vs Swiss Franc",
	decimalFactor: 100000,
	startHourForTicks: "2003-05-04T21:00:01.179Z",
	startDayForMinuteCandles: "2003-05-04T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-05-04T20:00:00.000Z",
	startYearForDailyCandles: "1986-02-10T00:00:00.000Z"
};
var usdcnh = {
	name: "USD/CNH",
	description: "US Dollar vs Offshore Chinese Renminbi",
	decimalFactor: 100000,
	startHourForTicks: "2012-06-27T00:07:42.688Z",
	startDayForMinuteCandles: "2012-06-27T00:07:00.000Z",
	startMonthForHourlyCandles: "2012-06-26T21:00:00.000Z",
	startYearForDailyCandles: "2012-01-02T00:00:00.000Z"
};
var usdczk = {
	name: "USD/CZK",
	description: "US Dollar vs Czech Koruna",
	decimalFactor: 10000,
	startHourForTicks: "2016-01-03T22:00:12.197Z",
	startDayForMinuteCandles: "2016-01-03T22:00:00.000Z",
	startMonthForHourlyCandles: "2016-01-03T22:00:00.000Z",
	startYearForDailyCandles: "2016-01-03T00:00:00.000Z"
};
var usddkk = {
	name: "USD/DKK",
	description: "US Dollar vs Danish Krone",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-04T00:00:09.907Z",
	startDayForMinuteCandles: "2003-08-04T00:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1990-04-12T00:00:00.000Z"
};
var usdhkd = {
	name: "USD/HKD",
	description: "US Dollar vs Hong Kong Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T04:01:10.075Z",
	startDayForMinuteCandles: "2007-03-13T04:01:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1986-03-17T00:00:00.000Z"
};
var usdhuf = {
	name: "USD/HUF",
	description: "US Dollar vs Hungarian Forint",
	decimalFactor: 1000,
	startHourForTicks: "2007-03-13T04:58:03.671Z",
	startDayForMinuteCandles: "2007-03-13T04:58:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1998-07-14T00:00:00.000Z"
};
var usdils = {
	name: "USD/ILS",
	description: "US Dollar vs Israeli Shekel",
	decimalFactor: 100000,
	startHourForTicks: "2016-12-15T06:00:00.081Z",
	startDayForMinuteCandles: "2016-12-15T06:00:00.000Z",
	startMonthForHourlyCandles: "2016-12-15T06:00:00.000Z",
	startYearForDailyCandles: "2016-12-15T00:00:00.000Z"
};
var usdjpy = {
	name: "USD/JPY",
	description: "US Dollar vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2003-05-04T21:00:00.626Z",
	startDayForMinuteCandles: "2003-05-04T21:00:00.000Z",
	startMonthForHourlyCandles: "2003-05-04T21:00:00.000Z",
	startYearForDailyCandles: "1986-02-10T00:00:00.000Z"
};
var usdmxn = {
	name: "USD/MXN",
	description: "US Dollar vs Mexican Peso",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T07:01:04.762Z",
	startDayForMinuteCandles: "2007-03-13T07:01:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T07:00:00.000Z",
	startYearForDailyCandles: "1995-03-31T00:00:00.000Z"
};
var usdnok = {
	name: "USD/NOK",
	description: "US Dollar vs Norwegian Krone",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-04T00:00:08.997Z",
	startDayForMinuteCandles: "2003-08-04T00:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1991-03-27T00:00:00.000Z"
};
var usdpln = {
	name: "USD/PLN",
	description: "US Dollar vs Polish Zloty",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T04:56:04.776Z",
	startDayForMinuteCandles: "2007-03-13T04:56:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T04:00:00.000Z",
	startYearForDailyCandles: "1999-03-22T00:00:00.000Z"
};
var usdron = {
	name: "USD/RON",
	description: "US Dollar vs Romanian Leu",
	decimalFactor: 10000,
	startHourForTicks: "2016-12-19T06:30:00.212Z",
	startDayForMinuteCandles: "2016-12-19T06:30:00.000Z",
	startMonthForHourlyCandles: "2016-12-19T07:00:00.000Z",
	startYearForDailyCandles: "2016-12-20T00:00:00.000Z"
};
var usdrub = {
	name: "USD/RUB",
	description: "US Dollar vs Russian Ruble",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T07:03:01.766Z",
	startDayForMinuteCandles: "2007-03-13T07:03:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T07:00:00.000Z",
	startYearForDailyCandles: "1999-03-22T00:00:00.000Z"
};
var usdsek = {
	name: "USD/SEK",
	description: "US Dollar vs Swedish Krona",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-04T00:00:01.201Z",
	startDayForMinuteCandles: "2003-08-04T00:00:00.000Z",
	startMonthForHourlyCandles: "2003-08-03T21:00:00.000Z",
	startYearForDailyCandles: "1991-07-16T00:00:00.000Z"
};
var usdsgd = {
	name: "USD/SGD",
	description: "US Dollar vs Singapore Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2004-11-16T18:03:02.644Z",
	startDayForMinuteCandles: "2004-11-16T18:03:00.000Z",
	startMonthForHourlyCandles: "2004-11-16T18:00:00.000Z",
	startYearForDailyCandles: "1991-01-21T00:00:00.000Z"
};
var usdthb = {
	name: "USD/THB",
	description: "US Dollar vs Thai Baht",
	decimalFactor: 10000,
	startHourForTicks: "2017-02-13T06:00:01.232Z",
	startDayForMinuteCandles: "2017-02-13T06:00:00.000Z",
	startMonthForHourlyCandles: "2017-02-13T06:00:00.000Z",
	startYearForDailyCandles: "2017-02-13T00:00:00.000Z"
};
var usdtry = {
	name: "USD/TRY",
	description: "US Dollar vs Turkish Lira",
	decimalFactor: 100000,
	startHourForTicks: "2007-03-13T07:01:00.664Z",
	startDayForMinuteCandles: "2007-03-13T07:01:00.000Z",
	startMonthForHourlyCandles: "2007-03-13T07:00:00.000Z",
	startYearForDailyCandles: "2001-10-18T00:00:00.000Z"
};
var usdzar = {
	name: "USD/ZAR",
	description: "US Dollar vs South African Rand",
	decimalFactor: 100000,
	startHourForTicks: "2003-08-04T10:03:02.837Z",
	startDayForMinuteCandles: "2003-08-04T10:03:00.000Z",
	startMonthForHourlyCandles: "2003-08-04T10:00:00.000Z",
	startYearForDailyCandles: "1991-11-25T00:00:00.000Z"
};
var usoususd = {
	name: "USO.US/USD",
	description: "United States Oil",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:17.170Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var ussc2000idxusd = {
	name: "USSC2000.IDX/USD",
	description: "US Small Cap 2000",
	decimalFactor: 1000,
	startHourForTicks: "2018-08-08T13:30:05.021Z",
	startDayForMinuteCandles: "2018-08-08T13:30:00.000Z",
	startMonthForHourlyCandles: "2018-08-08T13:00:00.000Z",
	startYearForDailyCandles: "2018-08-08T00:00:00.000Z"
};
var ustbondtrusd = {
	name: "USTBOND.TR/USD",
	description: "US T-Bond",
	decimalFactor: 1000,
	startHourForTicks: "2018-12-18T20:02:08.781Z",
	startDayForMinuteCandles: "2019-01-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2019-01-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-12-18T00:00:00.000Z"
};
var uugbgbx = {
	name: "UU.GB/GBX",
	description: "United Utilities Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T15:02:48.215Z",
	startDayForMinuteCandles: "2016-07-08T15:02:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var vususd = {
	name: "V.US/USD",
	description: "VISA INC-CLASS A SHARES",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.038Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var valeususd = {
	name: "VALE.US/USD",
	description: "Vale S.A.",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.440Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var veaususd = {
	name: "VEA.US/USD",
	description: "Vanguard FTSE Developed Markets ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:24:37.509Z",
	startDayForMinuteCandles: "2017-11-15T15:24:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var vfcususd = {
	name: "VFC.US/USD",
	description: "VF CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:37:45.651Z",
	startDayForMinuteCandles: "2018-02-01T15:37:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var vgkususd = {
	name: "VGK.US/USD",
	description: "Vanguard FTSE Europe ETF",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:38:22.304Z",
	startDayForMinuteCandles: "2018-02-01T15:38:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var viefreur = {
	name: "VIE.FR/EUR",
	description: "Veolia Environnement SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:00.318Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var vivfreur = {
	name: "VIV.FR/EUR",
	description: "Vivendi SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:00.521Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var vkfreur = {
	name: "VK.FR/EUR",
	description: "Vallourec SA",
	decimalFactor: 1000,
	startHourForTicks: "2016-08-05T15:00:05.369Z",
	startDayForMinuteCandles: "2016-08-05T15:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var vloususd = {
	name: "VLO.US/USD",
	description: "VALERO ENERGY CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:32:06.983Z",
	startDayForMinuteCandles: "2017-11-15T15:32:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var vmcususd = {
	name: "VMC.US/USD",
	description: "VULCAN MATERIALS CO",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:39:44.034Z",
	startDayForMinuteCandles: "2018-02-01T15:39:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var vnadeeur = {
	name: "VNA.DE/EUR",
	description: "Vonovia SE",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-14T07:02:17.186Z",
	startDayForMinuteCandles: "2015-04-14T07:02:00.000Z",
	startMonthForHourlyCandles: "2015-04-14T07:00:00.000Z",
	startYearForDailyCandles: "2015-04-14T00:00:00.000Z"
};
var vnqususd = {
	name: "VNQ.US/USD",
	description: "Vanguard REIT ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:48:16.439Z",
	startDayForMinuteCandles: "2017-11-15T15:48:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var vodgbgbx = {
	name: "VOD.GB/GBX",
	description: "Vodafone Group PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-07T09:22:48.552Z",
	startDayForMinuteCandles: "2016-07-07T09:22:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var voeateur = {
	name: "VOE.AT/EUR",
	description: "Voestalpine AG",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-15T08:27:58.433Z",
	startDayForMinuteCandles: "2016-11-15T08:27:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var volvbsesek = {
	name: "VOLVB.SE/SEK",
	description: "Volvo AB",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-07T08:01:18.337Z",
	startDayForMinuteCandles: "2016-11-07T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var vow3deeur = {
	name: "VOW3.DE/EUR",
	description: "Volkswagen AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-04-14T07:00:21.092Z",
	startDayForMinuteCandles: "2015-04-14T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var vpknleur = {
	name: "VPK.NL/EUR",
	description: "Koninklijke Vopak NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:14.177Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var vrtxususd = {
	name: "VRTX.US/USD",
	description: "VERTEX PHARMACEUTICALS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:48:41.349Z",
	startDayForMinuteCandles: "2017-11-15T15:48:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var vwsdkdkk = {
	name: "VWS.DK/DKK",
	description: "Vestas Wind Systems A/S",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-08T08:01:02.171Z",
	startDayForMinuteCandles: "2016-11-08T08:01:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var vxxususd = {
	name: "VXX.US/USD",
	description: "iPath S&P 500 VIX ST Futures ETN",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.220Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var vzususd = {
	name: "VZ.US/USD",
	description: "VERIZON COMMUNICATIONS INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:49:15.137Z",
	startDayForMinuteCandles: "2017-11-15T15:49:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var wbaususd = {
	name: "WBA.US/USD",
	description: "WALGREENS BOOTS ALLIANCE INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T15:56:02.555Z",
	startDayForMinuteCandles: "2017-11-15T15:56:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T15:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var wbditeur = {
	name: "WBD.IT/EUR",
	description: "WeBuild Spa",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-17T14:18:28.518Z",
	startDayForMinuteCandles: "2020-12-17T14:18:00.000Z",
	startMonthForHourlyCandles: "2020-12-17T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-17T00:00:00.000Z"
};
var wdcususd = {
	name: "WDC.US/USD",
	description: "WESTERN DIGITAL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:41:01.401Z",
	startDayForMinuteCandles: "2017-11-15T16:40:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var weirgbgbx = {
	name: "WEIR.GB/GBX",
	description: "Weir Group PLC/The",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T14:52:20.729Z",
	startDayForMinuteCandles: "2016-07-08T14:52:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var wfcususd = {
	name: "WFC.US/USD",
	description: "WELLS FARGO & CO",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:00.110Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var whrususd = {
	name: "WHR.US/USD",
	description: "WHIRLPOOL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:40:10.187Z",
	startDayForMinuteCandles: "2018-02-01T15:40:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var wklnleur = {
	name: "WKL.NL/EUR",
	description: "Wolters Kluwer NV",
	decimalFactor: 1000,
	startHourForTicks: "2016-11-14T11:24:13.527Z",
	startDayForMinuteCandles: "2016-11-14T11:24:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var wmtususd = {
	name: "WMT.US/USD",
	description: "WAL-MART STORES INC",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:41:08.568Z",
	startDayForMinuteCandles: "2017-11-15T16:41:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var wosgbgbx = {
	name: "WOS.GB/GBX",
	description: "Wolseley PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:08:57.085Z",
	startDayForMinuteCandles: "2016-07-06T07:08:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var wppgbgbx = {
	name: "WPP.GB/GBX",
	description: "WPP PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-08T12:41:45.460Z",
	startDayForMinuteCandles: "2016-07-08T12:41:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var wtbgbgbx = {
	name: "WTB.GB/GBX",
	description: "Whitbread PLC",
	decimalFactor: 1000,
	startHourForTicks: "2016-07-06T07:09:30.246Z",
	startDayForMinuteCandles: "2016-07-06T07:09:00.000Z",
	startMonthForHourlyCandles: "2011-01-04T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-04T00:00:00.000Z"
};
var wynnususd = {
	name: "WYNN.US/USD",
	description: "WYNN RESORTS LTD",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:42:00.303Z",
	startDayForMinuteCandles: "2017-11-15T16:41:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var xususd = {
	name: "X.US/USD",
	description: "UNITED STATES STEEL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:45:20.484Z",
	startDayForMinuteCandles: "2017-11-15T16:45:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var xagusd = {
	name: "XAG/USD",
	description: "Spot silver",
	decimalFactor: 1000,
	startHourForTicks: "2003-05-04T23:09:04.025Z",
	startDayForMinuteCandles: "2003-05-04T23:09:00.000Z",
	startMonthForHourlyCandles: "2003-05-04T23:00:00.000Z",
	startYearForDailyCandles: "1999-06-03T00:00:00.000Z"
};
var xauusd = {
	name: "XAU/USD",
	description: "Spot gold",
	decimalFactor: 1000,
	startHourForTicks: "2003-05-05T00:01:03.421Z",
	startDayForMinuteCandles: "2003-05-05T00:01:00.000Z",
	startMonthForHourlyCandles: "2003-05-05T00:00:00.000Z",
	startYearForDailyCandles: "1999-06-03T00:00:00.000Z"
};
var xleususd = {
	name: "XLE.US/USD",
	description: "Energy Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:45:59.735Z",
	startDayForMinuteCandles: "2017-11-15T16:45:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var xlfususd = {
	name: "XLF.US/USD",
	description: "Financial Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.203Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var xliususd = {
	name: "XLI.US/USD",
	description: "Industrial Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.118Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var xlkususd = {
	name: "XLK.US/USD",
	description: "Technology Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:47:43.431Z",
	startDayForMinuteCandles: "2017-11-15T16:47:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var xlmusd = {
	name: "XLM/USD",
	description: "Stellar vs US Dollar",
	decimalFactor: 100000,
	startHourForTicks: "2000-01-01T00:00:00.000Z",
	startDayForMinuteCandles: "2021-05-25T07:58:00.000Z",
	startMonthForHourlyCandles: "2021-05-25T07:00:00.000Z",
	startYearForDailyCandles: "2021-05-25T00:00:00.000Z"
};
var xlnxususd = {
	name: "XLNX.US/USD",
	description: "XILINX INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:40:19.061Z",
	startDayForMinuteCandles: "2018-02-01T15:40:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var xlpususd = {
	name: "XLP.US/USD",
	description: "Consumer Staples Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.227Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var xluususd = {
	name: "XLU.US/USD",
	description: "Utilities Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:48:28.915Z",
	startDayForMinuteCandles: "2017-11-15T16:48:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var xlvususd = {
	name: "XLV.US/USD",
	description: "Health Care Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:48:53.443Z",
	startDayForMinuteCandles: "2017-11-15T16:48:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var xlyususd = {
	name: "XLY.US/USD",
	description: "Consumer Discretionary Select Sector SPDR Fund",
	decimalFactor: 1000,
	startHourForTicks: "2017-11-15T16:49:26.268Z",
	startDayForMinuteCandles: "2017-11-15T16:49:00.000Z",
	startMonthForHourlyCandles: "2017-11-15T16:00:00.000Z",
	startYearForDailyCandles: "2017-11-15T00:00:00.000Z"
};
var xmrusd = {
	name: "XMR/USD",
	description: "Monero vs US Dollar",
	decimalFactor: 100,
	startHourForTicks: "2019-11-25T11:57:28.148Z",
	startDayForMinuteCandles: "2019-11-25T11:57:00.000Z",
	startMonthForHourlyCandles: "2019-11-25T11:00:00.000Z",
	startYearForDailyCandles: "2019-11-25T00:00:00.000Z"
};
var xomususd = {
	name: "XOM.US/USD",
	description: "EXXON MOBIL CORP",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:02.039Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var xopususd = {
	name: "XOP.US/USD",
	description: "SPDR S&P Oil & Gas Explor & Prodtn ETF",
	decimalFactor: 1000,
	startHourForTicks: "2017-01-26T14:30:01.318Z",
	startDayForMinuteCandles: "2017-01-26T14:30:00.000Z",
	startMonthForHourlyCandles: "2017-01-26T14:00:00.000Z",
	startYearForDailyCandles: "2017-01-26T00:00:00.000Z"
};
var xpevususd = {
	name: "XPEV.US/USD",
	description: "Xpeng Inc ADR",
	decimalFactor: 1000,
	startHourForTicks: "2020-12-23T14:41:02.906Z",
	startDayForMinuteCandles: "2020-12-23T14:41:00.000Z",
	startMonthForHourlyCandles: "2020-12-23T14:00:00.000Z",
	startYearForDailyCandles: "2020-12-23T00:00:00.000Z"
};
var yumususd = {
	name: "YUM.US/USD",
	description: "YUM! BRANDS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:40:56.395Z",
	startDayForMinuteCandles: "2018-02-01T15:40:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var zarjpy = {
	name: "ZAR/JPY",
	description: "South African Rand vs Japanese Yen",
	decimalFactor: 1000,
	startHourForTicks: "2007-06-04T00:00:18.146Z",
	startDayForMinuteCandles: "2007-06-04T00:00:00.000Z",
	startMonthForHourlyCandles: "2007-06-04T00:00:00.000Z",
	startYearForDailyCandles: "1999-06-07T00:00:00.000Z"
};
var zbhususd = {
	name: "ZBH.US/USD",
	description: "ZIMMER BIOMET HOLDINGS INC",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T15:41:57.058Z",
	startDayForMinuteCandles: "2018-02-01T15:41:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T15:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
};
var zmususd = {
	name: "ZM.US/USD",
	description: "Zoom Video Communications (A Class)",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-30T13:30:00.024Z",
	startDayForMinuteCandles: "2020-09-30T13:30:00.000Z",
	startMonthForHourlyCandles: "2020-09-30T14:00:00.000Z",
	startYearForDailyCandles: "2020-09-30T00:00:00.000Z"
};
var zurnchchf = {
	name: "ZURN.CH/CHF",
	description: "Zurich Insurance Group AG",
	decimalFactor: 1000,
	startHourForTicks: "2015-08-07T07:00:49.042Z",
	startDayForMinuteCandles: "2015-08-07T07:00:00.000Z",
	startMonthForHourlyCandles: "2011-01-03T08:00:00.000Z",
	startYearForDailyCandles: "2011-01-03T00:00:00.000Z"
};
var metaData = {
	"0005hkhkd": {
	name: "0005.HK/HKD",
	description: "HSBC Holdings",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.012Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0027hkhkd": {
	name: "0027.HK/HKD",
	description: "Galaxy Entertainment Group",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.061Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0175hkhkd": {
	name: "0175.HK/HKD",
	description: "Geely Automobile Holdings",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.010Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0291hkhkd": {
	name: "0291.HK/HKD",
	description: "China Resources Beer Holdings",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.389Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0386hkhkd": {
	name: "0386.HK/HKD",
	description: "Sinopec Corp",
	decimalFactor: 1000,
	startHourForTicks: "2018-03-01T01:30:00.022Z",
	startDayForMinuteCandles: "2018-03-01T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-03-01T01:00:00.000Z",
	startYearForDailyCandles: "2018-03-01T00:00:00.000Z"
},
	"0388hkhkd": {
	name: "0388.HK/HKD",
	description: "HK Exchanges & Clearing",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.014Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0700hkhkd": {
	name: "0700.HK/HKD",
	description: "Tencent Holdings",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.009Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0857hkhkd": {
	name: "0857.HK/HKD",
	description: "PetroChina",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.012Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0883hkhkd": {
	name: "0883.HK/HKD",
	description: "China National Offshore Oil Corporation",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.020Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0939hkhkd": {
	name: "0939.HK/HKD",
	description: "China Construction Bank",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.006Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"0941hkhkd": {
	name: "0941.HK/HKD",
	description: "China Mobile",
	decimalFactor: 1000,
	startHourForTicks: "2018-05-23T01:30:00.011Z",
	startDayForMinuteCandles: "2018-05-23T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-05-23T01:00:00.000Z",
	startYearForDailyCandles: "2018-05-23T00:00:00.000Z"
},
	"0998hkhkd": {
	name: "0998.HK/HKD",
	description: "CITIC Bank International",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T01:30:00.008Z",
	startDayForMinuteCandles: "2018-02-01T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T01:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
},
	"1093hkhkd": {
	name: "1093.HK/HKD",
	description: "CSPC Pharmaceutical Group",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.233Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"1177hkhkd": {
	name: "1177.HK/HKD",
	description: "Sino Biopharmeceutical",
	decimalFactor: 1000,
	startHourForTicks: "2018-07-04T01:30:00.011Z",
	startDayForMinuteCandles: "2018-07-04T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-07-04T01:00:00.000Z",
	startYearForDailyCandles: "2018-07-04T00:00:00.000Z"
},
	"1288hkhkd": {
	name: "1288.HK/HKD",
	description: "Agricultural Bank of China",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.064Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"1299hkhkd": {
	name: "1299.HK/HKD",
	description: "AIA",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.016Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"1398hkhkd": {
	name: "1398.HK/HKD",
	description: "Industrial and Commercial Bank of China",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.015Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"1810hkhkd": {
	name: "1810.HK/HKD",
	description: "Xiaomi Corp",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-28T01:30:00.005Z",
	startDayForMinuteCandles: "2020-09-28T01:30:00.000Z",
	startMonthForHourlyCandles: "2020-09-28T01:00:00.000Z",
	startYearForDailyCandles: "2020-09-28T00:00:00.000Z"
},
	"1918hkhkd": {
	name: "1918.HK/HKD",
	description: "Sunac China Holdings",
	decimalFactor: 1000,
	startHourForTicks: "2018-02-01T01:30:00.192Z",
	startDayForMinuteCandles: "2018-02-01T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-02-01T01:00:00.000Z",
	startYearForDailyCandles: "2018-02-01T00:00:00.000Z"
},
	"2007hkhkd": {
	name: "2007.HK/HKD",
	description: "Country Garden Holdings",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.036Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"2018hkhkd": {
	name: "2018.HK/HKD",
	description: "AAC Technologies Holdings",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.069Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"2318hkhkd": {
	name: "2318.HK/HKD",
	description: "Ping An Insurance",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.009Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"2388hkhkd": {
	name: "2388.HK/HKD",
	description: "BOC Hong Kong (Holdings)",
	decimalFactor: 1000,
	startHourForTicks: "2018-04-10T01:30:00.029Z",
	startDayForMinuteCandles: "2018-04-10T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-04-10T01:00:00.000Z",
	startYearForDailyCandles: "2018-04-10T00:00:00.000Z"
},
	"2502jpjpy": {
	name: "2502.JP/JPY",
	description: "Asahi Group Holdings",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:30.259Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"2503jpjpy": {
	name: "2503.JP/JPY",
	description: "Kirin Brewery Co",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:57.878Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"2628hkhkd": {
	name: "2628.HK/HKD",
	description: "China Life Insurance Company",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.023Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"2822hkhkd": {
	name: "2822.HK/HKD",
	description: "CSOP FTSE China A50 ETF",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-28T01:30:00.082Z",
	startDayForMinuteCandles: "2020-09-28T01:30:00.000Z",
	startMonthForHourlyCandles: "2020-09-28T01:00:00.000Z",
	startYearForDailyCandles: "2020-09-28T00:00:00.000Z"
},
	"2828hkhkd": {
	name: "2828.HK/HKD",
	description: "Hang Seng H-Share Index ETF",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-28T01:30:00.023Z",
	startDayForMinuteCandles: "2020-09-28T01:30:00.000Z",
	startMonthForHourlyCandles: "2020-09-28T01:00:00.000Z",
	startYearForDailyCandles: "2020-09-28T00:00:00.000Z"
},
	"2836hkhkd": {
	name: "2836.HK/HKD",
	description: "iShares Core S&P BSE SENSEX India ETF",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-28T01:30:02.978Z",
	startDayForMinuteCandles: "2020-09-28T01:30:00.000Z",
	startMonthForHourlyCandles: "2020-09-28T01:00:00.000Z",
	startYearForDailyCandles: "2020-09-28T00:00:00.000Z"
},
	"2914jpjpy": {
	name: "2914.JP/JPY",
	description: "Japan Tobacco",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.005Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"3188hkhkd": {
	name: "3188.HK/HKD",
	description: "ChinaAMC CSI 300 Index ETF",
	decimalFactor: 1000,
	startHourForTicks: "2020-09-28T01:30:00.297Z",
	startDayForMinuteCandles: "2020-09-28T01:30:00.000Z",
	startMonthForHourlyCandles: "2020-09-28T01:00:00.000Z",
	startYearForDailyCandles: "2020-09-28T00:00:00.000Z"
},
	"3333hkhkd": {
	name: "3333.HK/HKD",
	description: "China Evergrande Group",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.051Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"3382jpjpy": {
	name: "3382.JP/JPY",
	description: "Seven and I Holdings",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.011Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"3436jpjpy": {
	name: "3436.JP/JPY",
	description: "Sumco Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:00:25.309Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"3968hkhkd": {
	name: "3968.HK/HKD",
	description: "China Merchants Bank",
	decimalFactor: 1000,
	startHourForTicks: "2018-01-02T01:30:00.141Z",
	startDayForMinuteCandles: "2018-01-02T01:30:00.000Z",
	startMonthForHourlyCandles: "2018-01-02T01:00:00.000Z",
	startYearForDailyCandles: "2018-01-02T00:00:00.000Z"
},
	"3988hkhkd": {
	name: "3988.HK/HKD",
	description: "Bank of China",
	decimalFactor: 1000,
	startHourForTicks: "2019-06-04T07:21:06.825Z",
	startDayForMinuteCandles: "2019-06-04T07:21:00.000Z",
	startMonthForHourlyCandles: "2019-06-04T07:00:00.000Z",
	startYearForDailyCandles: "2019-06-04T00:00:00.000Z"
},
	"4004jpjpy": {
	name: "4004.JP/JPY",
	description: "Showa Denko",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.019Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"4005jpjpy": {
	name: "4005.JP/JPY",
	description: "Sumitomo Chemical",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.009Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"4063jpjpy": {
	name: "4063.JP/JPY",
	description: "Shin-Etsu Chemical",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.001Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"4452jpjpy": {
	name: "4452.JP/JPY",
	description: "Kao Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:05:04.202Z",
	startDayForMinuteCandles: "2018-09-26T00:05:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"4502jpjpy": {
	name: "4502.JP/JPY",
	description: "Takeda",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.013Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"4503jpjpy": {
	name: "4503.JP/JPY",
	description: "Astellas Pharma",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:00:39.216Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"4507jpjpy": {
	name: "4507.JP/JPY",
	description: "Shionogi",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:02:19.241Z",
	startDayForMinuteCandles: "2018-09-26T00:02:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"4523jpjpy": {
	name: "4523.JP/JPY",
	description: "Eisai",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.022Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"4543jpjpy": {
	name: "4543.JP/JPY",
	description: "Terumo Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:16.539Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"4689jpjpy": {
	name: "4689.JP/JPY",
	description: "Yahoo Japan Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.009Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"4911jpjpy": {
	name: "4911.JP/JPY",
	description: "Shiseido",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.010Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"5108jpjpy": {
	name: "5108.JP/JPY",
	description: "Bridgestone Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:00:08.402Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"5301jpjpy": {
	name: "5301.JP/JPY",
	description: "Tokai Carbon",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.015Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"5401jpjpy": {
	name: "5401.JP/JPY",
	description: "Nippon Steel Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.007Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"6098jpjpy": {
	name: "6098.JP/JPY",
	description: "Recruit Holdings Co Ltd",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:06:10.197Z",
	startDayForMinuteCandles: "2018-09-26T00:06:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"6301jpjpy": {
	name: "6301.JP/JPY",
	description: "Komatsu",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.002Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"6367jpjpy": {
	name: "6367.JP/JPY",
	description: "Daikin Industries",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:02:03.232Z",
	startDayForMinuteCandles: "2018-09-26T00:02:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"6501jpjpy": {
	name: "6501.JP/JPY",
	description: "Hitachi",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:02:24.488Z",
	startDayForMinuteCandles: "2018-09-26T00:02:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"6502jpjpy": {
	name: "6502.JP/JPY",
	description: "Toshiba Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:42.000Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"6503jpjpy": {
	name: "6503.JP/JPY",
	description: "Mitsubishi Electric Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:06:50.728Z",
	startDayForMinuteCandles: "2018-09-26T00:06:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"6506jpjpy": {
	name: "6506.JP/JPY",
	description: "Yaskawa Electric Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.036Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"6702jpjpy": {
	name: "6702.JP/JPY",
	description: "Fujitsu",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:00:29.999Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"6752jpjpy": {
	name: "6752.JP/JPY",
	description: "Panasonic Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:00:12.619Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"6758jpjpy": {
	name: "6758.JP/JPY",
	description: "Sony Corp Japan",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.011Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"6762jpjpy": {
	name: "6762.JP/JPY",
	description: "TDK Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.001Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"6902jpjpy": {
	name: "6902.JP/JPY",
	description: "Denso Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.001Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"6954jpjpy": {
	name: "6954.JP/JPY",
	description: "Fanuc",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.014Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"6971jpjpy": {
	name: "6971.JP/JPY",
	description: "Kyocera",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.043Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"7201jpjpy": {
	name: "7201.JP/JPY",
	description: "Nissan Motor Co",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:00:11.294Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"7203jpjpy": {
	name: "7203.JP/JPY",
	description: "Toyota Motor Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.001Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"7261jpjpy": {
	name: "7261.JP/JPY",
	description: "Mazda Motor",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:03.630Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"7267jpjpy": {
	name: "7267.JP/JPY",
	description: "Honda Motor Company",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.006Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"7269jpjpy": {
	name: "7269.JP/JPY",
	description: "Suzuki Motor Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:07:44.970Z",
	startDayForMinuteCandles: "2018-09-26T00:07:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"7270jpjpy": {
	name: "7270.JP/JPY",
	description: "Subaru Corporation",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:15.047Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"7751jpjpy": {
	name: "7751.JP/JPY",
	description: "Canon",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.008Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"7974jpjpy": {
	name: "7974.JP/JPY",
	description: "Nintendo Co Ltd",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.015Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"8031jpjpy": {
	name: "8031.JP/JPY",
	description: "Mitsui and Company",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:57.634Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"8035jpjpy": {
	name: "8035.JP/JPY",
	description: "Tokyo Electron",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.001Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"8306jpjpy": {
	name: "8306.JP/JPY",
	description: "Mitsubishi UFJ Financial Group",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.000Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"8316jpjpy": {
	name: "8316.JP/JPY",
	description: "Sumitomo Mitsui Financial Group",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.001Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"8411jpjpy": {
	name: "8411.JP/JPY",
	description: "Mizuho Financial Group",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:02:27.530Z",
	startDayForMinuteCandles: "2018-09-26T00:02:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"8766jpjpy": {
	name: "8766.JP/JPY",
	description: "Tokio Marine Holdings",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:29.118Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"8801jpjpy": {
	name: "8801.JP/JPY",
	description: "Mitsui Fudosan Company",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:01:18.681Z",
	startDayForMinuteCandles: "2018-09-26T00:01:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"8802jpjpy": {
	name: "8802.JP/JPY",
	description: "Mitsubishi Estate Company",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:00:15.068Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"9020jpjpy": {
	name: "9020.JP/JPY",
	description: "East Japan Railway Company",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:05:52.679Z",
	startDayForMinuteCandles: "2018-09-26T00:05:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"9432jpjpy": {
	name: "9432.JP/JPY",
	description: "Nippon Telegraph and Tel",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.006Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"9433jpjpy": {
	name: "9433.JP/JPY",
	description: "KDDI Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-26T00:16:21.994Z",
	startDayForMinuteCandles: "2018-09-26T00:16:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	"9501jpjpy": {
	name: "9501.JP/JPY",
	description: "Tokyo Electric Power Company",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.000Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"9983jpjpy": {
	name: "9983.JP/JPY",
	description: "Fast Retailing",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.015Z",
	startDayForMinuteCandles: "2018-09-21T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-21T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-21T00:00:00.000Z"
},
	"9984jpjpy": {
	name: "9984.JP/JPY",
	description: "Softbank Group Corp",
	decimalFactor: 10,
	startHourForTicks: "2018-09-21T00:00:00.009Z",
	startDayForMinuteCandles: "2018-09-26T00:00:00.000Z",
	startMonthForHourlyCandles: "2018-09-26T00:00:00.000Z",
	startYearForDailyCandles: "2018-09-26T00:00:00.000Z"
},
	aususd: aususd,
	a2aiteur: a2aiteur,
	aaususd: aaususd,
	aabvususd: aabvususd,
	aalgbgbx: aalgbgbx,
	aalususd: aalususd,
	aaplususd: aaplususd,
	abbsesek: abbsesek,
	abbnchchf: abbnchchf,
	abcususd: abcususd,
	abevususd: abevususd,
	abfgbgbx: abfgbgbx,
	abibeeur: abibeeur,
	abtususd: abtususd,
	acfreur: acfreur,
	acafreur: acafreur,
	acseseur: acseseur,
	acxeseur: acxeseur,
	adbeususd: adbeususd,
	adenchchf: adenchchf,
	adiususd: adiususd,
	admgbgbx: admgbgbx,
	adpususd: adpususd,
	adsdeeur: adsdeeur,
	adskususd: adskususd,
	aenaeseur: aenaeseur,
	aepususd: aepususd,
	affreur: affreur,
	agkgbgbx: agkgbgbx,
	agliteur: agliteur,
	agnnleur: agnnleur,
	agsbeeur: agsbeeur,
	ahnleur: ahnleur,
	ahtgbgbx: ahtgbgbx,
	aifreur: aifreur,
	aigususd: aigususd,
	airfreur: airfreur,
	akzanleur: akzanleur,
	alfasesek: alfasesek,
	allususd: allususd,
	alofreur: alofreur,
	alvdeeur: alvdeeur,
	alxnususd: alxnususd,
	amatususd: amatususd,
	amdususd: amdususd,
	amgnususd: amgnususd,
	ampiteur: ampiteur,
	ampususd: ampususd,
	amseseur: amseseur,
	amtususd: amtususd,
	amwlususd: amwlususd,
	amznususd: amznususd,
	antmususd: antmususd,
	antogbgbx: antogbgbx,
	apaususd: apaususd,
	apdususd: apdususd,
	asmlnleur: asmlnleur,
	atcoasesek: atcoasesek,
	atliteur: atliteur,
	atviususd: atviususd,
	audcad: audcad,
	audchf: audchf,
	audjpy: audjpy,
	audnzd: audnzd,
	audsgd: audsgd,
	audusd: audusd,
	avgbgbx: avgbgbx,
	avbususd: avbususd,
	avgoususd: avgoususd,
	axpususd: axpususd,
	azmiteur: azmiteur,
	azngbgbx: azngbgbx,
	aznususd: aznususd,
	azoususd: azoususd,
	bagbgbx: bagbgbx,
	baususd: baususd,
	babgbgbx: babgbgbx,
	babaususd: babaususd,
	bacususd: bacususd,
	baerchchf: baerchchf,
	bamiiteur: bamiiteur,
	barcgbgbx: barcgbgbx,
	basdeeur: basdeeur,
	batsgbgbx: batsgbgbx,
	bayndeeur: bayndeeur,
	bbdususd: bbdususd,
	bbvaeseur: bbvaeseur,
	bbyususd: bbyususd,
	bciteur: bciteur,
	bchusd: bchusd,
	bdxususd: bdxususd,
	beideeur: beideeur,
	belgbeeur: belgbeeur,
	biduususd: biduususd,
	biibususd: biibususd,
	birgieeur: birgieeur,
	bkususd: bkususd,
	blndgbgbx: blndgbgbx,
	bltgbgbx: bltgbgbx,
	bmpsiteur: bmpsiteur,
	bmwdeeur: bmwdeeur,
	bmyususd: bmyususd,
	bnfreur: bnfreur,
	bnpfreur: bnpfreur,
	bnzlgbgbx: bnzlgbgbx,
	bossdeeur: bossdeeur,
	bpgbgbx: bpgbgbx,
	bpususd: bpususd,
	bpeiteur: bpeiteur,
	brbygbgbx: brbygbgbx,
	breiteur: breiteur,
	brkbususd: brkbususd,
	bsxususd: bsxususd,
	btgbgbx: btgbgbx,
	btcusd: btcusd,
	bundtreur: bundtreur,
	bzuiteur: bzuiteur,
	cususd: cususd,
	cafreur: cafreur,
	cabkeseur: cabkeseur,
	cadchf: cadchf,
	cadhkd: cadhkd,
	cadjpy: cadjpy,
	cagususd: cagususd,
	cahususd: cahususd,
	capfreur: capfreur,
	carlbdkdkk: carlbdkdkk,
	cassiteur: cassiteur,
	catususd: catususd,
	cbkdeeur: cbkdeeur,
	cclgbgbx: cclgbgbx,
	cernususd: cernususd,
	cerviteur: cerviteur,
	cfususd: cfususd,
	chfjpy: chfjpy,
	chfsgd: chfsgd,
	chiidxusd: chiidxusd,
	ciususd: ciususd,
	clususd: clususd,
	clnchchf: clnchchf,
	cmcsaususd: cmcsaususd,
	cmeususd: cmeususd,
	cmgususd: cmgususd,
	cmiususd: cmiususd,
	cnagbgbx: cnagbgbx,
	cocoacmdusd: cocoacmdusd,
	cofususd: cofususd,
	coffeecmdusx: coffeecmdusx,
	colobdkdkk: colobdkdkk,
	condeeur: condeeur,
	copususd: copususd,
	coppercmdusd: coppercmdusd,
	costususd: costususd,
	cottoncmdusx: cottoncmdusx,
	cpggbgbx: cpggbgbx,
	cpigbgbx: cpigbgbx,
	cpriteur: cpriteur,
	crdagbgbx: crdagbgbx,
	crgieeur: crgieeur,
	crhgbgbx: crhgbgbx,
	crmususd: crmususd,
	csfreur: csfreur,
	csususd: csususd,
	cscoususd: cscoususd,
	csgnchchf: csgnchchf,
	csxususd: csxususd,
	ctlususd: ctlususd,
	ctshususd: ctshususd,
	ctxsususd: ctxsususd,
	cvaliteur: cvaliteur,
	cvsususd: cvsususd,
	cvxususd: cvxususd,
	dususd: dususd,
	daideeur: daideeur,
	dalususd: dalususd,
	daniteur: daniteur,
	danskedkdkk: danskedkdkk,
	db1deeur: db1deeur,
	dbkdeeur: dbkdeeur,
	deususd: deususd,
	dfsususd: dfsususd,
	dgfreur: dgfreur,
	dgususd: dgususd,
	dgegbgbx: dgegbgbx,
	dhiususd: dhiususd,
	dhrususd: dhrususd,
	diaeseur: diaeseur,
	diaiteur: diaiteur,
	diaususd: diaususd,
	dieselcmdusd: dieselcmdusd,
	disususd: disususd,
	dltrususd: dltrususd,
	dnbnonok: dnbnonok,
	dollaridxusd: dollaridxusd,
	dpwdeeur: dpwdeeur,
	dsbfreur: dsbfreur,
	dshusd: dshusd,
	dsmnleur: dsmnleur,
	dtedeeur: dtedeeur,
	dukeur: dukeur,
	dukususd: dukususd,
	dvaususd: dvaususd,
	dvnususd: dvnususd,
	dvyususd: dvyususd,
	eaususd: eaususd,
	ebayususd: ebayususd,
	ebsateur: ebsateur,
	edffreur: edffreur,
	edppteur: edppteur,
	eemususd: eemususd,
	efaususd: efaususd,
	efxususd: efxususd,
	eixususd: eixususd,
	elususd: elususd,
	eleeseur: eleeseur,
	eli1vfieur: eli1vfieur,
	eluxbsesek: eluxbsesek,
	embususd: embususd,
	emrususd: emrususd,
	enfreur: enfreur,
	eneliteur: eneliteur,
	engeseur: engeseur,
	engifreur: engifreur,
	eniiteur: eniiteur,
	eoandeeur: eoandeeur,
	eogususd: eogususd,
	eosusd: eosusd,
	eqtususd: eqtususd,
	ergiteur: ergiteur,
	ericbsesek: ericbsesek,
	ethusd: ethusd,
	euraud: euraud,
	eurcad: eurcad,
	eurchf: eurchf,
	eurczk: eurczk,
	eurdkk: eurdkk,
	eurgbp: eurgbp,
	eurhkd: eurhkd,
	eurhuf: eurhuf,
	eurjpy: eurjpy,
	eurnok: eurnok,
	eurnzd: eurnzd,
	eurpln: eurpln,
	eurrub: eurrub,
	eursek: eursek,
	eursgd: eursgd,
	eurtry: eurtry,
	eurusd: eurusd,
	ewhususd: ewhususd,
	ewjususd: ewjususd,
	ewwususd: ewwususd,
	ewzususd: ewzususd,
	excususd: excususd,
	expeususd: expeususd,
	expngbgbx: expngbgbx,
	ezjgbgbx: ezjgbgbx,
	ezuususd: ezuususd,
	brentcmdusd: brentcmdusd,
	fraidxeur: fraidxeur,
	usa30idxusd: usa30idxusd,
	deuidxeur: deuidxeur,
	eusidxeur: eusidxeur,
	gbridxgbp: gbridxgbp,
	hkgidxhkd: hkgidxhkd,
	espidxeur: espidxeur,
	lightcmdusd: lightcmdusd,
	jpnidxjpy: jpnidxjpy,
	usatechidxusd: usatechidxusd,
	usa500idxusd: usa500idxusd,
	cheidxchf: cheidxchf,
	ausidxaud: ausidxaud,
	fususd: fususd,
	fbususd: fbususd,
	fbkiteur: fbkiteur,
	fcaiteur: fcaiteur,
	fcxususd: fcxususd,
	fdxususd: fdxususd,
	feususd: feususd,
	fereseur: fereseur,
	fitbususd: fitbususd,
	fmedeeur: fmedeeur,
	foxaususd: foxaususd,
	fpfreur: fpfreur,
	frfreur: frfreur,
	fredeeur: fredeeur,
	fresgbgbx: fresgbgbx,
	fxiususd: fxiususd,
	giteur: giteur,
	galppteur: galppteur,
	gameseur: gameseur,
	gascmdusd: gascmdusd,
	gaseseur: gaseseur,
	gbpaud: gbpaud,
	gbpcad: gbpcad,
	gbpchf: gbpchf,
	gbpjpy: gbpjpy,
	gbpnzd: gbpnzd,
	gbpusd: gbpusd,
	gdxususd: gdxususd,
	gdxjususd: gdxjususd,
	geususd: geususd,
	getibsesek: getibsesek,
	gfsgbgbx: gfsgbgbx,
	gildususd: gildususd,
	gisususd: gisususd,
	givnchchf: givnchchf,
	gldususd: gldususd,
	glefreur: glefreur,
	glengbgbx: glengbgbx,
	glwususd: glwususd,
	gmususd: gmususd,
	googususd: googususd,
	googlususd: googlususd,
	gpsususd: gpsususd,
	gsususd: gsususd,
	gskgbgbx: gskgbgbx,
	gwwususd: gwwususd,
	halususd: halususd,
	hcnususd: hcnususd,
	hdususd: hdususd,
	heideeur: heideeur,
	heianleur: heianleur,
	hen3deeur: hen3deeur,
	hesususd: hesususd,
	hkdjpy: hkdjpy,
	hmbsesek: hmbsesek,
	hmsogbgbx: hmsogbgbx,
	honususd: honususd,
	hpqususd: hpqususd,
	hsbagbgbx: hsbagbgbx,
	humususd: humususd,
	iaggbgbx: iaggbgbx,
	ibbususd: ibbususd,
	ibeeseur: ibeeseur,
	ibmususd: ibmususd,
	iceususd: iceususd,
	iefususd: iefususd,
	ifxdeeur: ifxdeeur,
	igiteur: igiteur,
	ihggbgbx: ihggbgbx,
	ijhususd: ijhususd,
	ijrususd: ijrususd,
	ilmnususd: ilmnususd,
	imtgbgbx: imtgbgbx,
	indidxusd: indidxusd,
	inganleur: inganleur,
	intcususd: intcususd,
	intuususd: intuususd,
	invebsesek: invebsesek,
	inwiteur: inwiteur,
	ipgususd: ipgususd,
	ispiteur: ispiteur,
	isrgususd: isrgususd,
	itrkgbgbx: itrkgbgbx,
	itubususd: itubususd,
	itvgbgbx: itvgbgbx,
	itwususd: itwususd,
	itxeseur: itxeseur,
	iveususd: iveususd,
	ivwususd: ivwususd,
	iwdususd: iwdususd,
	iwfususd: iwfususd,
	iwmususd: iwmususd,
	iyrususd: iyrususd,
	jciususd: jciususd,
	jnjususd: jnjususd,
	jnkususd: jnkususd,
	jpmususd: jpmususd,
	juveiteur: juveiteur,
	jwnususd: jwnususd,
	kususd: kususd,
	kbcbeeur: kbcbeeur,
	kerfreur: kerfreur,
	keyususd: keyususd,
	kgfgbgbx: kgfgbgbx,
	khcususd: khcususd,
	kmbususd: kmbususd,
	kmiususd: kmiususd,
	kninchchf: kninchchf,
	koususd: koususd,
	kpnnleur: kpnnleur,
	krususd: krususd,
	krxieeur: krxieeur,
	krzieeur: krzieeur,
	kssususd: kssususd,
	lususd: lususd,
	landgbgbx: landgbgbx,
	ldoiteur: ldoiteur,
	lenususd: lenususd,
	lgengbgbx: lgengbgbx,
	lhadeeur: lhadeeur,
	lhnchchf: lhnchchf,
	lifreur: lifreur,
	lindeeur: lindeeur,
	lloygbgbx: lloygbgbx,
	llyususd: llyususd,
	lmtususd: lmtususd,
	lonnchchf: lonnchchf,
	lowususd: lowususd,
	lrfreur: lrfreur,
	lrcxususd: lrcxususd,
	lsegbgbx: lsegbgbx,
	ltcusd: ltcusd,
	luvususd: luvususd,
	lvcfreur: lvcfreur,
	lvsususd: lvsususd,
	lxsdeeur: lxsdeeur,
	lyxbnkfreur: lyxbnkfreur,
	mususd: mususd,
	maususd: maususd,
	maerskbdkdkk: maerskbdkdkk,
	marususd: marususd,
	matususd: matususd,
	mbiteur: mbiteur,
	mcfreur: mcfreur,
	mcdususd: mcdususd,
	mchpususd: mchpususd,
	mckususd: mckususd,
	mdlzususd: mdlzususd,
	metususd: metususd,
	mgmususd: mgmususd,
	mhgnonok: mhgnonok,
	mksgbgbx: mksgbgbx,
	mmmususd: mmmususd,
	mndigbgbx: mndigbgbx,
	moususd: moususd,
	monciteur: monciteur,
	mpcususd: mpcususd,
	mrkdeeur: mrkdeeur,
	mrkususd: mrkususd,
	mrnaususd: mrnaususd,
	mroususd: mroususd,
	mrwgbgbx: mrwgbgbx,
	msiteur: msiteur,
	msususd: msususd,
	msftususd: msftususd,
	mtnleur: mtnleur,
	muususd: muususd,
	muv2deeur: muv2deeur,
	ndasesek: ndasesek,
	neeususd: neeususd,
	nemususd: nemususd,
	nes1vfieur: nes1vfieur,
	nesnchchf: nesnchchf,
	nflxususd: nflxususd,
	nggbgbx: nggbgbx,
	nhynonok: nhynonok,
	nioususd: nioususd,
	nkeususd: nkeususd,
	nldidxeur: nldidxeur,
	nocususd: nocususd,
	novnchchf: novnchchf,
	novobdkdkk: novobdkdkk,
	nre1vfieur: nre1vfieur,
	nrgususd: nrgususd,
	nscususd: nscususd,
	nvdaususd: nvdaususd,
	nwlususd: nwlususd,
	nxtgbgbx: nxtgbgbx,
	nzdcad: nzdcad,
	nzdchf: nzdchf,
	nzdjpy: nzdjpy,
	nzdusd: nzdusd,
	nzymbdkdkk: nzymbdkdkk,
	ojuicecmdusx: ojuicecmdusx,
	okeususd: okeususd,
	omcususd: omcususd,
	orfreur: orfreur,
	orafreur: orafreur,
	orclususd: orclususd,
	orknonok: orknonok,
	orlyususd: orlyususd,
	ote1vfieur: ote1vfieur,
	out1vfieur: out1vfieur,
	oxyususd: oxyususd,
	pah3deeur: pah3deeur,
	payxususd: payxususd,
	pbrususd: pbrususd,
	pcarususd: pcarususd,
	pcgususd: pcgususd,
	pclnususd: pclnususd,
	pepususd: pepususd,
	pfcgbgbx: pfcgbgbx,
	pfeususd: pfeususd,
	pgususd: pgususd,
	pgrususd: pgrususd,
	phususd: phususd,
	phianleur: phianleur,
	piaiteur: piaiteur,
	plnidxpln: plnidxpln,
	pltrususd: pltrususd,
	plugususd: plugususd,
	pmususd: pmususd,
	pncususd: pncususd,
	pndoradkdkk: pndoradkdkk,
	ppgususd: ppgususd,
	prugbgbx: prugbgbx,
	pruususd: pruususd,
	pryiteur: pryiteur,
	psaususd: psaususd,
	psmdeeur: psmdeeur,
	psngbgbx: psngbgbx,
	psongbgbx: psongbgbx,
	psxususd: psxususd,
	ptonususd: ptonususd,
	pubfreur: pubfreur,
	pxdususd: pxdususd,
	pyplususd: pyplususd,
	qcomususd: qcomususd,
	qqqususd: qqqususd,
	raceiteur: raceiteur,
	randnleur: randnleur,
	rbgbgbx: rbgbgbx,
	rbiateur: rbiateur,
	rbsgbgbx: rbsgbgbx,
	rdsanleur: rdsanleur,
	rdsbgbgbx: rdsbgbgbx,
	reciteur: reciteur,
	reeeseur: reeeseur,
	regnususd: regnususd,
	relgbgbx: relgbgbx,
	rennleur: rennleur,
	repeseur: repeseur,
	rfususd: rfususd,
	rifreur: rifreur,
	riogbgbx: riogbgbx,
	rmggbgbx: rmggbgbx,
	rnofreur: rnofreur,
	rogchchf: rogchchf,
	rokuususd: rokuususd,
	rostususd: rostususd,
	rrgbgbx: rrgbgbx,
	rrcususd: rrcususd,
	rsagbgbx: rsagbgbx,
	rwedeeur: rwedeeur,
	ry4cieeur: ry4cieeur,
	saffreur: saffreur,
	saneseur: saneseur,
	sanfreur: sanfreur,
	sandsesek: sandsesek,
	sapdeeur: sapdeeur,
	sbrygbgbx: sbrygbgbx,
	sbuxususd: sbuxususd,
	scabsesek: scabsesek,
	schwususd: schwususd,
	scmnchchf: scmnchchf,
	sdfdeeur: sdfdeeur,
	sebasesek: sebasesek,
	secubsesek: secubsesek,
	sferiteur: sferiteur,
	sgdidxsgd: sgdidxsgd,
	sgdjpy: sgdjpy,
	sgegbgbx: sgegbgbx,
	sgofreur: sgofreur,
	sgsnchchf: sgsnchchf,
	shwususd: shwususd,
	siedeeur: siedeeur,
	sjmususd: sjmususd,
	skabsesek: skabsesek,
	skfbsesek: skfbsesek,
	skygbgbx: skygbgbx,
	slagbgbx: slagbgbx,
	slhnchchf: slhnchchf,
	slvususd: slvususd,
	smingbgbx: smingbgbx,
	sngbgbx: sngbgbx,
	snapususd: snapususd,
	snowususd: snowususd,
	soususd: soususd,
	solbbeeur: solbbeeur,
	soonchchf: soonchchf,
	soybeancmdusx: soybeancmdusx,
	spgususd: spgususd,
	spmiteur: spmiteur,
	spyususd: spyususd,
	sqususd: sqususd,
	srenchchf: srenchchf,
	srgiteur: srgiteur,
	srsiteur: srsiteur,
	ssegbgbx: ssegbgbx,
	stangbgbx: stangbgbx,
	stervfieur: stervfieur,
	stlnonok: stlnonok,
	stmiteur: stmiteur,
	sttususd: sttususd,
	stzususd: stzususd,
	sufreur: sufreur,
	sugarcmdusd: sugarcmdusd,
	svtgbgbx: svtgbgbx,
	swedasesek: swedasesek,
	swkususd: swkususd,
	swmasesek: swmasesek,
	sykususd: sykususd,
	syyususd: syyususd,
	tususd: tususd,
	tapususd: tapususd,
	tategbgbx: tategbgbx,
	tecdaxedeeur: tecdaxedeeur,
	tefeseur: tefeseur,
	telnonok: telnonok,
	tel2bsesek: tel2bsesek,
	teniteur: teniteur,
	tevaususd: tevaususd,
	tgtususd: tgtususd,
	tisiteur: tisiteur,
	tititeur: tititeur,
	tjxususd: tjxususd,
	tkadeeur: tkadeeur,
	tls1vfieur: tls1vfieur,
	tlsnsesek: tlsnsesek,
	tltususd: tltususd,
	tlwgbgbx: tlwgbgbx,
	tmoususd: tmoususd,
	toditeur: toditeur,
	tpkgbgbx: tpkgbgbx,
	trniteur: trniteur,
	trowususd: trowususd,
	trvususd: trvususd,
	trxusd: trxusd,
	tryjpy: tryjpy,
	tscogbgbx: tscogbgbx,
	tslaususd: tslaususd,
	tsmususd: tsmususd,
	tsnususd: tsnususd,
	tui1deeur: tui1deeur,
	twtrususd: twtrususd,
	txnususd: txnususd,
	uberususd: uberususd,
	ubsgchchf: ubsgchchf,
	ucbbeeur: ucbbeeur,
	ucgiteur: ucgiteur,
	ugfreur: ugfreur,
	uhrchchf: uhrchchf,
	ukgilttrgbp: ukgilttrgbp,
	ultaususd: ultaususd,
	ulvrgbgbx: ulvrgbgbx,
	umibeeur: umibeeur,
	unanleur: unanleur,
	unhususd: unhususd,
	unpususd: unpususd,
	upsususd: upsususd,
	usiteur: usiteur,
	usbususd: usbususd,
	usdcad: usdcad,
	usdchf: usdchf,
	usdcnh: usdcnh,
	usdczk: usdczk,
	usddkk: usddkk,
	usdhkd: usdhkd,
	usdhuf: usdhuf,
	usdils: usdils,
	usdjpy: usdjpy,
	usdmxn: usdmxn,
	usdnok: usdnok,
	usdpln: usdpln,
	usdron: usdron,
	usdrub: usdrub,
	usdsek: usdsek,
	usdsgd: usdsgd,
	usdthb: usdthb,
	usdtry: usdtry,
	usdzar: usdzar,
	usoususd: usoususd,
	ussc2000idxusd: ussc2000idxusd,
	ustbondtrusd: ustbondtrusd,
	uugbgbx: uugbgbx,
	vususd: vususd,
	valeususd: valeususd,
	veaususd: veaususd,
	vfcususd: vfcususd,
	vgkususd: vgkususd,
	viefreur: viefreur,
	vivfreur: vivfreur,
	vkfreur: vkfreur,
	vloususd: vloususd,
	vmcususd: vmcususd,
	vnadeeur: vnadeeur,
	vnqususd: vnqususd,
	vodgbgbx: vodgbgbx,
	voeateur: voeateur,
	volvbsesek: volvbsesek,
	vow3deeur: vow3deeur,
	vpknleur: vpknleur,
	vrtxususd: vrtxususd,
	vwsdkdkk: vwsdkdkk,
	vxxususd: vxxususd,
	vzususd: vzususd,
	wbaususd: wbaususd,
	wbditeur: wbditeur,
	wdcususd: wdcususd,
	weirgbgbx: weirgbgbx,
	wfcususd: wfcususd,
	whrususd: whrususd,
	wklnleur: wklnleur,
	wmtususd: wmtususd,
	wosgbgbx: wosgbgbx,
	wppgbgbx: wppgbgbx,
	wtbgbgbx: wtbgbgbx,
	wynnususd: wynnususd,
	xususd: xususd,
	xagusd: xagusd,
	xauusd: xauusd,
	xleususd: xleususd,
	xlfususd: xlfususd,
	xliususd: xliususd,
	xlkususd: xlkususd,
	xlmusd: xlmusd,
	xlnxususd: xlnxususd,
	xlpususd: xlpususd,
	xluususd: xluususd,
	xlvususd: xlvususd,
	xlyususd: xlyususd,
	xmrusd: xmrusd,
	xomususd: xomususd,
	xopususd: xopususd,
	xpevususd: xpevususd,
	yumususd: yumususd,
	zarjpy: zarjpy,
	zbhususd: zbhususd,
	zmususd: zmususd,
	zurnchchf: zurnchchf
};

const instrumentMetaData = metaData;

function applyDateLimits(date, min, max) {
    let adjustedDate;
    if (date < max) {
        adjustedDate = date < min ? min : date;
    }
    else {
        adjustedDate = max;
    }
    return adjustedDate;
}
function normaliseDates({ instrument, startDate, endDate, timeframe, utcOffset }) {
    const { startHourForTicks, startDayForMinuteCandles, startMonthForHourlyCandles, startYearForDailyCandles } = instrumentMetaData[instrument];
    let minFromIsoDate = startHourForTicks;
    if (timeframe === exports.Timeframe.m1 || timeframe === exports.Timeframe.m15 || timeframe === exports.Timeframe.m30) {
        minFromIsoDate = startDayForMinuteCandles;
    }
    if (timeframe === exports.Timeframe.h1) {
        minFromIsoDate = startMonthForHourlyCandles;
    }
    if (timeframe === exports.Timeframe.d1 || timeframe === exports.Timeframe.mn1) {
        minFromIsoDate = startYearForDailyCandles;
    }
    let minFromDate = new Date(minFromIsoDate);
    let maxToDate = new Date();
    if (utcOffset) {
        startDate.setUTCMinutes(startDate.getUTCMinutes() + utcOffset);
        endDate.setUTCMinutes(endDate.getUTCMinutes() + utcOffset);
    }
    let adjustedFromDate = applyDateLimits(startDate, minFromDate, maxToDate);
    let adjustedToDate = applyDateLimits(endDate, minFromDate, maxToDate);
    return [adjustedFromDate, adjustedToDate];
}

function getYMDH(date) {
    const [year, month, day, hours] = [
        date.getUTCFullYear(),
        date.getUTCMonth(),
        date.getUTCDate(),
        date.getUTCHours()
    ];
    return [year, month, day, hours];
}
function getStartOfUtc(date, period, offset = 0) {
    const [year, month, day, hours] = getYMDH(date);
    let startOfUtc = new Date();
    if (period === 'hour') {
        startOfUtc = new Date(Date.UTC(year, month, day, hours + offset));
    }
    else if (period === 'day') {
        startOfUtc = new Date(Date.UTC(year, month, day + offset));
    }
    else if (period === 'month') {
        startOfUtc = new Date(Date.UTC(year, month + offset));
    }
    else if (period === 'year') {
        startOfUtc = new Date(Date.UTC(year + offset, 0));
    }
    return startOfUtc;
}
function getIsCurrentObj(date) {
    const [year, month, day, hours] = getYMDH(date);
    const [currentYear, currentMonth, currentDay, currentHours] = getYMDH(new Date());
    const isCurrentYear = year === currentYear;
    const isCurrentMonth = isCurrentYear && month === currentMonth;
    const isCurrentDay = isCurrentMonth && day === currentDay;
    const isCurrentHour = isCurrentDay && hours === currentHours;
    const obj = {
        year: isCurrentYear,
        month: isCurrentMonth,
        day: isCurrentDay,
        hour: isCurrentHour
    };
    return obj;
}
function getDateFromUrl(url) {
    const [, year, month, day, hour] = (url.match(/(\d{4})\/(\d{2})?\/?(\d{2})?\/?(\d{2})?/) || []).map(n => Number(n) || 0);
    const utcDate = new Date(Date.UTC(year, month, day || 1, hour));
    return utcDate;
}

const ranges = ['year', 'month', 'day', 'hour'];
const rangeInferMap = {
    mn1: ['year', 'month', 'day'],
    d1: ['year', 'month', 'day'],
    h1: ['month', 'day', 'hour'],
    m30: ['day', 'hour'],
    m15: ['day', 'hour'],
    m1: ['day', 'hour'],
    tick: ['hour']
};
function getLowerRange(range) {
    const lookupIndex = ranges.indexOf(range);
    return ranges[lookupIndex + 1];
}
function getClosestAvailableRange(timeframe, date) {
    const isCurrent = getIsCurrentObj(date);
    return rangeInferMap[timeframe].find(range => !isCurrent[range]);
}
function isCurrentRange(rangeType, date) {
    const { year, month, day } = getIsCurrentObj(date);
    return ((rangeType === 'year' && year) ||
        (rangeType === 'month' && month) ||
        (rangeType === 'day' && day));
}
const timeFromUrl = {
    day_1: exports.Timeframe.d1,
    hour_1: exports.Timeframe.h1,
    min_1: exports.Timeframe.m1,
    ticks: exports.Timeframe.tick
};
function getTimeframeFromUrl(url) {
    const [, match] = url.match(/_(day_1|hour_1|min_1|ticks).bi5$/) || [];
    return timeFromUrl[match];
}

function pad(num) {
    return num < 10 ? `0${num}` : `${num}`;
}
function roundNum(value, decimal = 4) {
    return Number(value.toFixed(decimal));
}
function splitArrayInChunks(array, chunkSize) {
    if (chunkSize >= array.length) {
        return [array];
    }
    let result = [];
    for (let i = 0, n = array.length; i < n; i++) {
        const chunkIndex = Math.floor(i / chunkSize);
        if (!result[chunkIndex]) {
            result[chunkIndex] = [];
        }
        result[chunkIndex].push(array[i]);
    }
    return result;
}
function wait(ms) {
    return new Promise(res => {
        setTimeout(function () {
            res();
        }, ms);
    });
}

// .../2019/BID_candles_day_1.bi5:          daily data per year
const URL_ROOT = 'https://datafeed.dukascopy.com/datafeed';
function getUrl(instrument, date, range, priceType) {
    const [yearPad, monthPad, dayPad, hourPad] = getYMDH(date).map(pad);
    let url = `${URL_ROOT}/${instrument.toUpperCase()}/${yearPad}/`;
    if (range === 'year') {
        url += `${priceType.toUpperCase()}_candles_day_1.bi5`;
    }
    else if (range === 'month') {
        url += `${monthPad}/${priceType.toUpperCase()}_candles_hour_1.bi5`;
    }
    else if (range === 'day') {
        url += `${monthPad}/${dayPad}/${priceType.toUpperCase()}_candles_min_1.bi5`;
    }
    else if (range === 'hour') {
        url += `${monthPad}/${dayPad}/${hourPad}h_ticks.bi5`;
    }
    return url;
}
function getConstructor(instrument, priceType, endDate) {
    return function construct(rangetype, startDate) {
        let dates = [];
        let tempStartDate = getStartOfUtc(startDate, rangetype);
        while (tempStartDate < endDate) {
            dates.push(tempStartDate);
            tempStartDate = getStartOfUtc(tempStartDate, rangetype, 1);
        }
        const result = dates.reduce((all, date, i, arr) => {
            const isLastItem = i === arr.length - 1;
            if (isLastItem && isCurrentRange(rangetype, date)) {
                const lowerRangeData = construct(getLowerRange(rangetype), date);
                all.push(...lowerRangeData);
            }
            else {
                const url = getUrl(instrument, date, rangetype, priceType);
                all.push(url);
            }
            return all;
        }, []);
        return result;
    };
}
function getDateLimit(startDate, endDate, timeframe) {
    const nowDate = new Date();
    const adjustedEndDate = endDate < nowDate ? endDate : nowDate;
    let dateLimit = adjustedEndDate;
    if (timeframe === exports.Timeframe.tick ||
        timeframe === exports.Timeframe.m1 ||
        timeframe === exports.Timeframe.m15 ||
        timeframe === exports.Timeframe.m30) {
        if (+endDate - +startDate <= 3600000) {
            dateLimit = getStartOfUtc(dateLimit, 'hour', 1);
        }
        else {
            dateLimit = getStartOfUtc(dateLimit, 'hour');
        }
    }
    else if (timeframe === exports.Timeframe.h1) {
        dateLimit = getStartOfUtc(dateLimit, 'hour');
    }
    else if (timeframe === exports.Timeframe.d1) {
        dateLimit = getStartOfUtc(dateLimit, 'day');
    }
    else if (timeframe === exports.Timeframe.mn1) {
        dateLimit = getStartOfUtc(dateLimit, 'month');
    }
    return dateLimit;
}
function generateUrls({ instrument, timeframe, priceType, startDate, endDate }) {
    const rangeType = getClosestAvailableRange(timeframe, startDate);
    const dateLimit = getDateLimit(startDate, endDate, timeframe);
    const constructUrls = getConstructor(instrument, priceType, dateLimit);
    const urls = constructUrls(rangeType, startDate);
    return urls;
}

class BufferFetcher {
    constructor({ batchSize = 10, pauseBetweenBatchesMs = 1000, notifyOnItemFetchFn, fetcherFn, retryCount, pauseBetweenRetriesMs, cacheManager }) {
        this.batchSize = batchSize;
        this.pauseBetweenBatchesMs = pauseBetweenBatchesMs;
        this.notifyOnItemFetchFn = notifyOnItemFetchFn;
        this.fetcherFn = fetcherFn;
        this.cacheManager = cacheManager;
        this.retryCount = retryCount || 0;
        this.pauseBetweenRetriesMs = pauseBetweenRetriesMs || 500;
    }
    async fetchBatch(urls) {
        return await Promise.all(urls.map(async (url) => {
            let buffer;
            if (this.cacheManager) {
                const bufferFromCache = await this.cacheManager.readItemFromCache(url);
                if (bufferFromCache) {
                    buffer = bufferFromCache;
                }
                else {
                    buffer = await this.fetchBuffer(url);
                }
            }
            else {
                buffer = await this.fetchBuffer(url);
            }
            this.notifyOnItemFetchFn && this.notifyOnItemFetchFn(url);
            return { url, buffer };
        }));
    }
    async fetch(urls) {
        const fetchedObjects = [];
        const batches = splitArrayInChunks(urls, this.batchSize);
        for (let i = 0, n = batches.length; i < n; i++) {
            const data = await this.fetchBatch(batches[i]);
            fetchedObjects.push(data);
            if (n > 1) {
                await wait(this.pauseBetweenBatchesMs);
            }
        }
        const bufferObjects = []
            .concat(...fetchedObjects)
            .filter(({ buffer }) => buffer.length > 0);
        if (this.cacheManager) {
            await this.cacheManager.writeItemsToCache(bufferObjects);
        }
        return bufferObjects;
    }
    async fetchBuffer(url) {
        if (this.fetcherFn) {
            return this.fetcherFn(url);
        }
        let data = await fetch__default['default'](url);
        if (this.retryCount && data.status !== 200) {
            let retries = 0;
            let isRetrySuccess = false;
            while (retries < this.retryCount && !isRetrySuccess) {
                data = await fetch__default['default'](url);
                isRetrySuccess = data.status === 200;
                retries++;
                const isLastRetry = retries === this.retryCount;
                if (!isRetrySuccess && !isLastRetry) {
                    await wait(this.pauseBetweenRetriesMs);
                }
            }
        }
        return data.buffer();
    }
}

// eslint-disable-next-line @typescript-eslint/no-var-requires
const lzmajs = require('lzma-purejs');
// eslint-disable-next-line @typescript-eslint/no-var-requires
const struct = require('python-struct');
function getStructFormat(timeframe) {
    return timeframe === exports.Timeframe.tick ? '>3i2f' : '>5i1f';
}
function decompress(input) {
    const { buffer, timeframe } = input;
    if (buffer.length === 0) {
        return [];
    }
    const result = [];
    const format = getStructFormat(timeframe);
    const decompressedBuffer = lzmajs.decompressFile(buffer);
    const step = struct.sizeOf(format);
    for (let i = 0, n = decompressedBuffer.length; i < n; i += step) {
        const chunk = decompressedBuffer.slice(i, i + step);
        const unpacked = struct.unpack(format, chunk);
        result.push(unpacked);
    }
    return result;
}

function getNormaliser(timeframe, startMs, decimalFactor, volumes) {
    if (timeframe === exports.Timeframe.tick) {
        return function (values) {
            const [ms, ask, bid, askVolume, bidVolume] = values;
            return [
                ms + startMs,
                ask / decimalFactor,
                bid / decimalFactor,
                ...(volumes ? [askVolume, bidVolume].map(a => roundNum(a)) : [])
            ];
        };
    }
    else {
        return function (values) {
            const [sec, open, close, low, high, volume] = values;
            return [
                sec * 1000 + startMs,
                open / decimalFactor,
                high / decimalFactor,
                low / decimalFactor,
                close / decimalFactor,
                ...(volumes ? [roundNum(volume)] : [])
            ];
        };
    }
}
function normalise(input) {
    const { data, timeframe, startTs, instrument, volumes } = input;
    const { decimalFactor } = instrumentMetaData[instrument];
    const normaliserFn = getNormaliser(timeframe, startTs, decimalFactor, volumes);
    const normalizedData = data.map(normaliserFn);
    return normalizedData;
}

function getOHLC(input, filterFlats = true) {
    const startMs = input[0][0];
    if (filterFlats) {
        // ignoring flat-volumed (0 volume) entries
        input = input.filter(data => data[5] !== 0);
    }
    if (input.length === 0) {
        return [];
    }
    let open = input[0][1];
    let high = input[0][2];
    let low = input[0][3];
    let close = input[input.length - 1][4];
    let volume = input[0][5];
    for (let i = 1, n = input.length; i < n; i++) {
        const [, , h, l, , v] = input[i];
        if (h > high) {
            high = h;
        }
        if (l < low) {
            low = l;
        }
        if (v !== undefined) {
            volume += v;
        }
    }
    const ohlc = [startMs, open, high, low, close];
    if (volume !== undefined) {
        ohlc.push(roundNum(volume));
    }
    return ohlc;
}
function breakdownByInterval(input, interval) {
    const dataByInterval = [];
    for (let i = 0, n = input.length; i < n; i++) {
        const data = input[i];
        const date = new Date(data[0]);
        const intervalValue = interval === 'minute' ? date.getUTCMinutes() : date.getUTCMonth();
        if (!dataByInterval[intervalValue]) {
            dataByInterval[intervalValue] = [];
        }
        dataByInterval[intervalValue].push(data);
    }
    return dataByInterval;
}
function tickOHLC(input, priceType) {
    // timestamp, askPrice, bidPrice, askVolume, bidVolume
    const date = new Date(input[0][0]);
    const minuteValue = date.getUTCMinutes();
    const openPrice = priceType === 'ask' ? input[0][1] : input[0][2];
    const closePrice = priceType === 'ask' ? input[input.length - 1][1] : input[input.length - 1][2];
    const initialVolume = priceType === 'ask' ? input[0][3] : input[0][4];
    const startTs = date.setUTCMinutes(minuteValue, 0, 0);
    const open = openPrice;
    let high = openPrice;
    let low = openPrice;
    const close = closePrice;
    let volume = initialVolume;
    for (let i = 1, n = input.length; i < n; i++) {
        const [, askPrice, bidPrice, askVolume, bidVolume] = input[i];
        const targetPrice = priceType === 'ask' ? askPrice : bidPrice;
        const targetVolume = priceType === 'ask' ? askVolume : bidVolume;
        if (targetPrice > high) {
            high = targetPrice;
        }
        if (targetPrice < low) {
            low = targetPrice;
        }
        if (targetVolume !== undefined) {
            volume += targetVolume;
        }
    }
    const ohlc = [startTs, open, high, low, close];
    if (volume !== undefined) {
        ohlc.push(roundNum(volume));
    }
    return ohlc;
}
function getMinuteOHLCfromTicks(input, priceType) {
    const breakdown = breakdownByInterval(input, 'minute');
    const ohlc = breakdown.map(data => tickOHLC(data, priceType));
    return ohlc;
}
function getMonthlyOHLCfromDays(input) {
    const breakdown = breakdownByInterval(input, 'month');
    const ohlc = breakdown.map(data => getOHLC(data));
    return ohlc;
}

function aggregate({ data, fromTimeframe, toTimeframe, priceType, ignoreFlats }) {
    if (fromTimeframe === exports.Timeframe.tick && toTimeframe === exports.Timeframe.tick) {
        return data;
    }
    if (fromTimeframe === exports.Timeframe.m1 && toTimeframe === exports.Timeframe.m1) {
        if (ignoreFlats) {
            return data.filter(item => item[5] !== 0);
        }
        return data;
    }
    if (fromTimeframe === toTimeframe) {
        return splitArrayInChunks(data, 1).map(d => getOHLC(d, ignoreFlats));
    }
    else {
        if (fromTimeframe === exports.Timeframe.tick) {
            const minuteOHLC = getMinuteOHLCfromTicks(data, priceType);
            if (toTimeframe === exports.Timeframe.m1) {
                return minuteOHLC;
            }
            if (toTimeframe === exports.Timeframe.m15) {
                return splitArrayInChunks(minuteOHLC, 15).map(d => getOHLC(d, ignoreFlats));
            }
            if (toTimeframe === exports.Timeframe.m30) {
                return splitArrayInChunks(minuteOHLC, 30).map(d => getOHLC(d, ignoreFlats));
            }
            if (toTimeframe === exports.Timeframe.h1) {
                return [minuteOHLC].map(d => getOHLC(d, ignoreFlats));
            }
        }
        if (fromTimeframe === exports.Timeframe.m1) {
            if (toTimeframe === exports.Timeframe.m15) {
                return splitArrayInChunks(data, 15).map(d => getOHLC(d, ignoreFlats));
            }
            if (toTimeframe === exports.Timeframe.m30) {
                return splitArrayInChunks(data, 30).map(d => getOHLC(d, ignoreFlats));
            }
            if (toTimeframe === exports.Timeframe.h1) {
                return splitArrayInChunks(data, 60).map(d => getOHLC(d, ignoreFlats));
            }
            if (toTimeframe === exports.Timeframe.d1) {
                return [data].map(d => getOHLC(d, ignoreFlats));
            }
        }
        if (fromTimeframe === exports.Timeframe.h1) {
            if (toTimeframe === exports.Timeframe.d1) {
                return splitArrayInChunks(data, 24).map(d => getOHLC(d, ignoreFlats));
            }
            if (toTimeframe === exports.Timeframe.mn1) {
                return [data].map(d => getOHLC(d, ignoreFlats));
            }
        }
        if (fromTimeframe === exports.Timeframe.d1) {
            if (toTimeframe === exports.Timeframe.mn1) {
                const monthlyOHLC = getMonthlyOHLCfromDays(data);
                return monthlyOHLC;
            }
        }
    }
    return [];
}

function processData({ instrument, requestedTimeframe, bufferObjects, priceType, volumes, ignoreFlats }) {
    const result = bufferObjects.map(({ url, buffer }) => {
        const startDate = getDateFromUrl(url);
        const urlTimeframe = getTimeframeFromUrl(url);
        const decompressedData = decompress({ buffer, timeframe: urlTimeframe });
        const normalisedData = normalise({
            data: decompressedData,
            timeframe: urlTimeframe,
            startTs: +startDate,
            instrument,
            volumes
        });
        const aggregatedData = aggregate({
            data: normalisedData,
            fromTimeframe: urlTimeframe,
            toTimeframe: requestedTimeframe,
            priceType,
            ignoreFlats
        });
        return aggregatedData;
    });
    return [].concat(...result);
}

const headers = ['timestamp', 'open', 'high', 'low', 'close', 'volume'];
const tickHeaders = ['timestamp', 'askPrice', 'bidPrice', 'askVolume', 'bidVolume'];
function formatOutput({ processedData, format, timeframe }) {
    if (processedData.length === 0) {
        return [];
    }
    const bodyHeaders = timeframe === exports.Timeframe.tick ? tickHeaders : headers;
    if (format === exports.Format.json) {
        const data = processedData.map(arr => {
            return arr.reduce((all, item, i) => {
                const name = bodyHeaders[i];
                all[name] = item;
                return all;
                // TODO: fix typing here
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
            }, {});
        });
        return data;
    }
    if (format === exports.Format.csv) {
        const csvHeaders = bodyHeaders.filter((_, i) => processedData[0][i] !== undefined);
        const csv = [csvHeaders, ...processedData].map(arr => arr.join(',')).join('\n');
        return csv;
    }
    return processedData;
}

const DEFAULT_CACHE_FOLDER = '.dukascopy-cache';
const DEFAULT_MANIFEST_FILE = 'manifest.json';
class CacheManager {
    constructor({ cacheFolderPath, cacheKeyFormatter }) {
        this.cacheFolderPath = cacheFolderPath || path.resolve(process.cwd(), DEFAULT_CACHE_FOLDER);
        this.cacheManifestPath = path.resolve(this.cacheFolderPath, DEFAULT_MANIFEST_FILE);
        this.cacheKeyFormatter = cacheKeyFormatter || this.getCacheKeyFromUrl;
        fsExtra.ensureFileSync(this.cacheManifestPath);
        const manifestData = fsExtra.readJSONSync(this.cacheManifestPath, { throws: false }) || {};
        this.cacheManifest = manifestData;
    }
    async readItemFromCache(url) {
        var _a;
        const cacheKey = this.cacheKeyFormatter(url);
        const itemExistsInCache = Boolean((_a = this.cacheManifest) === null || _a === void 0 ? void 0 : _a[cacheKey]);
        const cacheItemPath = path.resolve(this.cacheFolderPath, ...cacheKey.split('/'));
        return itemExistsInCache ? fsExtra.readFile(cacheItemPath) : null;
    }
    async writeItemsToCache(items) {
        var _a;
        let newManifest = {};
        const itemsToCache = [];
        for (const item of items) {
            const cacheKey = this.cacheKeyFormatter(item.url);
            const itemExistsInCache = Boolean((_a = this.cacheManifest) === null || _a === void 0 ? void 0 : _a[cacheKey]);
            if (!itemExistsInCache) {
                newManifest[cacheKey] = true;
                itemsToCache.push({ cacheKey, buffer: item.buffer });
            }
        }
        this.cacheManifest = Object.assign(Object.assign({}, this.cacheManifest), newManifest);
        return Promise.all([
            fsExtra.outputJSON(this.cacheManifestPath, this.cacheManifest),
            ...itemsToCache.map(({ buffer, cacheKey }) => {
                const cacheItemPath = path.resolve(this.cacheFolderPath, ...cacheKey.split('/'));
                return fsExtra.outputFile(cacheItemPath, buffer);
            })
        ]);
    }
    async purgeCache(cacheFolderPath = this.cacheFolderPath) {
        return fsExtra.remove(cacheFolderPath);
    }
    getCacheKeyFromUrl(url) {
        return url.replace(`${URL_ROOT}/`, '');
    }
}

async function getHistoricRates(config) {
    const { input, isValid, validationErrors } = validateConfigNode(config);
    if (!isValid) {
        throw { validationErrors };
    }
    const { instrument, dates: { from, to }, timeframe, priceType, volumes, utcOffset, ignoreFlats, format, batchSize, pauseBetweenBatchesMs, useCache, cacheFolderPath, retryCount, pauseBetweenRetriesMs } = input;
    const [startDate, endDate] = normaliseDates({
        instrument,
        startDate: from,
        endDate: to,
        timeframe,
        utcOffset
    });
    const urls = generateUrls({ instrument, timeframe, priceType, startDate, endDate });
    const bufferFetcher = new BufferFetcher({
        batchSize,
        pauseBetweenBatchesMs,
        cacheManager: useCache ? new CacheManager({ cacheFolderPath }) : undefined,
        retryCount,
        pauseBetweenRetriesMs
    });
    const bufferredData = await bufferFetcher.fetch(urls);
    const processedData = processData({
        instrument,
        requestedTimeframe: timeframe,
        bufferObjects: bufferredData,
        priceType,
        volumes,
        ignoreFlats
    });
    const [startDateMs, endDateMs] = [+startDate, +endDate];
    const filteredData = processedData.filter(([timestamp]) => timestamp && timestamp >= startDateMs && timestamp < endDateMs);
    const formattedData = formatOutput({ processedData: filteredData, format, timeframe });
    return formattedData;
}

exports.BufferFetcher = BufferFetcher;
exports.CacheManager = CacheManager;
exports.URL_ROOT = URL_ROOT;
exports.defaultConfig = defaultConfig;
exports.formatOutput = formatOutput;
exports.generateUrls = generateUrls;
exports.getHistoricRates = getHistoricRates;
exports.normaliseDates = normaliseDates;
exports.processData = processData;
exports.schema = schema;
exports.validateConfig = validateConfig;
exports.validateConfigNode = validateConfigNode;
//# sourceMappingURL=index.js.map
